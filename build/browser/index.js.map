{"version":3,"file":"index.js","sources":["../module/py-to-es/transpiler.js","../module/pytools/toStringLiteralJS.js","../module/pytools/symtable.js","../module/pytools/SymbolTable.js","../module/pytools/syntaxError.js","../module/pytools/SymbolTableScope.js","../module/pytools/Symbol.js","../module/pytools/SymbolConstants.js","../module/pytools/mangleName.js","../module/pytools/dictUpdate.js","../module/pytools/reservedWords.js","../module/pytools/reservedNames.js","../module/pytools/builder.js","../module/pytools/numericLiteral.js","../module/pytools/types.js","../../node_modules/tslib/tslib.es6.js","../module/pytools/parser.js","../module/pytools/tokenNames.js","../module/pytools/Tokenizer.js","../module/pytools/TokenError.js","../module/pytools/base.js","../module/pytools/asserts.js","../module/pytools/tables.js","../module/pytools/Tokens.js"],"sourcesContent":["/// <reference path = \"../../node_modules/typescript/lib/typescriptServices.d.ts\" />\nimport { assert } from '../pytools/asserts';\nimport { isArray, isNumber } from '../pytools/base';\nimport { parse } from '../pytools/parser';\nimport { astFromParse } from '../pytools/builder';\nimport { reservedNames } from '../pytools/reservedNames';\nimport { reservedWords } from '../pytools/reservedWords';\nimport { symbolTable } from '../pytools/symtable';\nimport { toStringLiteralJS } from '../pytools/toStringLiteralJS';\nimport { Assert } from '../pytools/types';\nimport { Assign } from '../pytools/types';\nimport { Attribute } from '../pytools/types';\nimport { AugAssign } from '../pytools/types';\nimport { AugLoad } from '../pytools/types';\nimport { AugStore } from '../pytools/types';\nimport { BinOp } from '../pytools/types';\nimport { BoolOp } from '../pytools/types';\nimport { BreakStatement } from '../pytools/types';\nimport { Call } from '../pytools/types';\nimport { ClassDef } from '../pytools/types';\nimport { Compare } from '../pytools/types';\nimport { ContinueStatement } from '../pytools/types';\nimport { Del } from '../pytools/types';\nimport { DeleteExpression } from '../pytools/types';\nimport { Dict } from '../pytools/types';\nimport { Ellipsis } from '../pytools/types';\nimport { Expr } from '../pytools/types';\nimport { ExtSlice } from '../pytools/types';\nimport { ForStatement } from '../pytools/types';\nimport { FunctionDef } from '../pytools/types';\nimport { GeneratorExp } from '../pytools/types';\nimport { Global } from '../pytools/types';\nimport { IfStatement } from '../pytools/types';\nimport { IfExp } from '../pytools/types';\nimport { ImportStatement } from '../pytools/types';\nimport { ImportFrom } from '../pytools/types';\nimport { Index } from '../pytools/types';\nimport { Lambda } from '../pytools/types';\nimport { List } from '../pytools/types';\nimport { ListComp } from '../pytools/types';\nimport { Load } from '../pytools/types';\nimport { Module } from '../pytools/types';\nimport { Name } from '../pytools/types';\nimport { Num } from '../pytools/types';\nimport { Param } from '../pytools/types';\nimport { Pass } from '../pytools/types';\nimport { Print } from '../pytools/types';\nimport { Raise } from '../pytools/types';\nimport { ReturnStatement } from '../pytools/types';\nimport { Slice } from '../pytools/types';\nimport { Store } from '../pytools/types';\nimport { Str } from '../pytools/types';\nimport { Subscript } from '../pytools/types';\nimport { TryExcept } from '../pytools/types';\nimport { TryFinally } from '../pytools/types';\nimport { Tuple } from '../pytools/types';\nimport { UnaryOp } from '../pytools/types';\nimport { WhileStatement } from '../pytools/types';\nimport { Yield } from '../pytools/types';\nimport { LOCAL } from '../pytools/SymbolConstants';\nimport { GLOBAL_EXPLICIT } from '../pytools/SymbolConstants';\nimport { GLOBAL_IMPLICIT } from '../pytools/SymbolConstants';\nimport { FREE } from '../pytools/SymbolConstants';\nimport { CELL } from '../pytools/SymbolConstants';\nimport { FunctionBlock } from '../pytools/SymbolConstants';\n// TODO: Replace these with the TypeScript AST\n// import {Node} from '../estools/esprima';\n// import {generate} from '../estools/escodegen';\nvar OP_FAST = 0;\nvar OP_GLOBAL = 1;\nvar OP_DEREF = 2;\nvar OP_NAME = 3;\n// const D_NAMES = 0;\n// const D_FREEVARS = 1;\n// const D_CELLVARS = 2;\nvar Precedence = {\n    Sequence: 0,\n    Yield: 1,\n    Await: 1,\n    Assignment: 1,\n    Conditional: 2,\n    ArrowFunction: 2,\n    LogicalOR: 3,\n    LogicalAND: 4,\n    BitwiseOR: 5,\n    BitwiseXOR: 6,\n    BitwiseAND: 7,\n    Equality: 8,\n    Relational: 9,\n    BitwiseSHIFT: 10,\n    Additive: 11,\n    Multiplicative: 12,\n    Unary: 13,\n    Postfix: 14,\n    Call: 15,\n    New: 16,\n    TaggedTemplate: 17,\n    Member: 18,\n    Primary: 19\n};\n// Flags\nvar F_ALLOW_IN = 1;\nvar F_ALLOW_CALL = 1 << 1;\nvar F_ALLOW_UNPARATH_NEW = 1 << 2;\n// const F_FUNC_BODY = 1 << 3;\n// const F_DIRECTIVE_CTX = 1 << 4;\nvar F_SEMICOLON_OPT = 1 << 5;\n// Expression flag sets\n// NOTE: Flag order:\n// F_ALLOW_IN\n// F_ALLOW_CALL\n// F_ALLOW_UNPARATH_NEW\n// const E_FTT = F_ALLOW_CALL | F_ALLOW_UNPARATH_NEW;\n// const E_TTF = F_ALLOW_IN | F_ALLOW_CALL;\nvar E_TTT = F_ALLOW_IN | F_ALLOW_CALL | F_ALLOW_UNPARATH_NEW;\n// const E_TFF = F_ALLOW_IN;\n// const E_FFT = F_ALLOW_UNPARATH_NEW;\n// const E_TFT = F_ALLOW_IN | F_ALLOW_UNPARATH_NEW;\n// Statement flag sets\n// NOTE: Flag order:\n// F_ALLOW_IN\n// F_FUNC_BODY\n// F_DIRECTIVE_CTX\n// F_SEMICOLON_OPT\nvar S_TFFF = F_ALLOW_IN;\n// const S_TFFT = F_ALLOW_IN | F_SEMICOLON_OPT;\n// const S_FFFF = 0x00;\n// const S_TFTF = F_ALLOW_IN | F_DIRECTIVE_CTX;\n// const S_TTFF = F_ALLOW_IN | F_FUNC_BODY;\n/**\n * The output function is scoped at the module level so that it is available without being a parameter.\n * @param {...*} x\n */\nvar out;\n/**\n * We keep track of how many time gensym method on the Compiler is called because ... ?\n */\nvar gensymCount = 0;\n/**\n *\n */\nvar base;\n/**\n *\n */\nvar indent;\n/**\n *\n */\nvar space;\nfunction updateDeeply(target, override) {\n    var key, val;\n    function isHashObject(target) {\n        return typeof target === 'object' && target instanceof Object && !(target instanceof RegExp);\n    }\n    for (key in override) {\n        if (override.hasOwnProperty(key)) {\n            val = override[key];\n            if (isHashObject(val)) {\n                if (isHashObject(target[key])) {\n                    updateDeeply(target[key], val);\n                }\n                else {\n                    target[key] = updateDeeply({}, val);\n                }\n            }\n            else {\n                target[key] = val;\n            }\n        }\n    }\n    return target;\n}\n/**\n * flatten an array to a string, where the array can contain\n * either strings or nested arrays\n */\nfunction flattenToString(arr) {\n    var result = '';\n    for (var i = 0, iz = arr.length; i < iz; ++i) {\n        var elem = arr[i];\n        result += isArray(elem) ? flattenToString(elem) : elem;\n    }\n    return result;\n}\nfunction withIndent(fn) {\n    var previousBase = base;\n    base += indent;\n    fn(base);\n    base = previousBase;\n}\n/**\n * FIXME: CompilerUnit is coupled to this module by the out variable.\n */\nvar CompilerUnit = (function () {\n    /**\n     * @constructor\n     *\n     * Stuff that changes on entry/exit of code blocks. must be saved and restored\n     * when returning to a block.\n     *\n     * Corresponds to the body of a module, class, or function.\n     */\n    function CompilerUnit() {\n        /**\n         * @type {?Object}\n         */\n        this.ste = null;\n        this.name = null;\n        this.private_ = null;\n        this.firstlineno = 0;\n        this.lineno = 0;\n        this.linenoSet = false;\n        this.localnames = [];\n        this.blocknum = 0;\n        this.blocks = [];\n        this.curblock = 0;\n        this.scopename = null;\n        this.prefixCode = '';\n        this.varDeclsCode = '';\n        this.switchCode = '';\n        this.suffixCode = '';\n        // stack of where to go on a break\n        this.breakBlocks = [];\n        // stack of where to go on a continue\n        this.continueBlocks = [];\n        this.exceptBlocks = [];\n        this.finallyBlocks = [];\n    }\n    CompilerUnit.prototype.activateScope = function () {\n        // The 'arguments' object cannot be referenced in an arrow function in ES3 and ES5.\n        // That's why we use a standard function expression.\n        var self = this;\n        out = function () {\n            var b = self.blocks[self.curblock];\n            for (var i = 0; i < arguments.length; ++i)\n                b.push(arguments[i]);\n        };\n    };\n    return CompilerUnit;\n}());\nexport { CompilerUnit };\nvar Compiler = (function () {\n    /**\n     * @constructor\n     * @param fileName {string}\n     * @param st {SymbolTable}\n     * @param flags {number}\n     * @param {string=} sourceCodeForAnnotation used to add original source to listing if desired\n     */\n    function Compiler(fileName, st, flags, sourceCodeForAnnotation) {\n        this.fileName = fileName;\n        /**\n         * @type {Object}\n         * @private\n         */\n        this.st = st;\n        this.flags = flags;\n        this.interactive = false;\n        this.nestlevel = 0;\n        this.u = null;\n        /**\n         * @type Array.<CompilerUnit>\n         * @private\n         */\n        this.stack = [];\n        this.result = [];\n        // this.gensymcount = 0;\n        /**\n         * @type Array.<CompilerUnit>\n         * @private\n         */\n        this.allUnits = [];\n        this.source = sourceCodeForAnnotation ? sourceCodeForAnnotation.split(\"\\n\") : false;\n    }\n    Compiler.prototype.getSourceLine = function (lineno) {\n        assert(!!this.source);\n        return this.source[lineno - 1];\n    };\n    Compiler.prototype.annotateSource = function (ast) {\n        if (this.source) {\n            // const lineno = ast.lineno;\n            var col_offset = ast.col_offset;\n            // out('\\n//');\n            // out('\\n// line ', lineno, ':');\n            // out('\\n// ', this.getSourceLine(lineno));\n            //\n            // out('\\n// ');\n            for (var i = 0; i < col_offset; ++i) {\n                out(\" \");\n            }\n            // out(\"^\");\n            // out(\"\\n//\");\n            // out('\\nSk.currLineNo = ', lineno, ';Sk.currColNo = ', col_offset, ';');\n            // out(\"\\nSk.currFilename = '\", this.fileName, \"';\\n\\n\");\n        }\n    };\n    Compiler.prototype.gensym = function (hint) {\n        hint = hint || '';\n        hint = '$' + hint;\n        hint += gensymCount++;\n        return hint;\n    };\n    Compiler.prototype.niceName = function (roughName) {\n        return this.gensym(roughName.replace(\"<\", \"\").replace(\">\", \"\").replace(\" \", \"_\"));\n    };\n    Compiler.prototype.emitArgs = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, argA, argB, argC, argD, argE) {\n        for (var i = 1; i < arguments.length; ++i) {\n            out(arguments[i]);\n        }\n        throw new Error(\"TODO\");\n    };\n    Compiler.prototype.ctupleorlist = function (e, data, tuporlist) {\n        assert(tuporlist === 'tuple' || tuporlist === 'list');\n        if (e.ctx === Store) {\n            for (var i = 0; i < e.elts.length; ++i) {\n                this.vexpr(e.elts[i], \"Sk.abstr.objectGetItem(\" + data + \",\" + i + \")\");\n            }\n        }\n        else if (e.ctx === Load) {\n            // const items = [];\n            for (var i = 0; i < e.elts.length; ++i) {\n                // items.push(this.emitArgs('elem', this.vexpr(e.elts[i])));\n            }\n        }\n    };\n    Compiler.prototype.cdict = function (e) {\n        assert(e.values.length === e.keys.length);\n        var items = [];\n        for (var i = 0; i < e.values.length; ++i) {\n            var v = this.vexpr(e.values[i]); // \"backwards\" to match order in cpy\n            items.push(this.vexpr(e.keys[i]));\n            items.push(v);\n        }\n    };\n    Compiler.prototype.clistcompgen = function (tmpname, generators, genIndex, elt) {\n        var start = this.newBlock('list gen start');\n        var skip = this.newBlock('list gen skip');\n        var anchor = this.newBlock('list gen anchor');\n        var l = generators[genIndex];\n        // const toiter = this.vexpr(l.iter);\n        this.setBlock(start);\n        var n = l.ifs.length;\n        for (var i = 0; i < n; ++i) {\n            // var ifres = this.vexpr(l.ifs[i]);\n        }\n        if (++genIndex < generators.length) {\n            this.clistcompgen(tmpname, generators, genIndex, elt);\n        }\n        if (genIndex >= generators.length) {\n            var velt = this.vexpr(elt);\n            out(tmpname, \".v.push(\", velt, \");\");\n            this.setBlock(skip);\n        }\n        this.setBlock(anchor);\n        return tmpname;\n    };\n    Compiler.prototype.clistcomp = function (e) {\n        assert(e instanceof ListComp);\n        // return this.clistcompgen(tmp, e.generators, 0, e.elt);\n    };\n    Compiler.prototype.cyield = function (e) {\n        if (this.u.ste.blockType !== FunctionBlock)\n            throw new SyntaxError(\"'yield' outside function\");\n        var val = 'null';\n        if (e.value)\n            val = this.vexpr(e.value);\n        var nextBlock = this.newBlock('after yield');\n        // return a pair: resume target block and yielded value\n        out(\"return [/*resume*/\", nextBlock, \",/*ret*/\", val, \"];\");\n        this.setBlock(nextBlock);\n        return '$gen.gi$sentvalue'; // will either be null if none sent, or the value from gen.send(value)\n    };\n    Compiler.prototype.ccompare = function (e) {\n        assert(e.ops.length === e.comparators.length);\n        var cur = this.vexpr(e.left);\n        var n = e.ops.length;\n        var done = this.newBlock(\"done\");\n        for (var i = 0; i < n; ++i) {\n            var rhs = this.vexpr(e.comparators[i]);\n            cur = rhs;\n        }\n        this.setBlock(done);\n    };\n    Compiler.prototype.ccall = function (e) {\n        var func = this.vexpr(e.func);\n        var args = this.vseqexpr(e.args);\n        if (e.keywords.length > 0 || e.starargs || e.kwargs) {\n            var kwarray = [];\n            for (var i = 0; i < e.keywords.length; ++i) {\n                kwarray.push(\"'\" + e.keywords[i].arg + \"'\");\n                kwarray.push(this.vexpr(e.keywords[i].value));\n            }\n            // const keywords = \"[\" + kwarray.join(\",\") + \"]\";\n            var starargs = \"undefined\";\n            var kwargs = \"undefined\";\n            if (e.starargs) {\n                starargs = this.vexpr(e.starargs);\n            }\n            if (e.kwargs) {\n                kwargs = this.vexpr(e.kwargs);\n            }\n        }\n        else {\n            this.emitArgs(func, \"(\", args, \")\");\n        }\n    };\n    Compiler.prototype.cslice = function (s) {\n        assert(s instanceof Slice);\n        // const low = s.lower ? this.vexpr(s.lower) : 'null';\n        // const high = s.upper ? this.vexpr(s.upper) : 'null';\n        // const step = s.step ? this.vexpr(s.step) : 'null';\n        throw new Error(\"TODO\");\n    };\n    Compiler.prototype.vslicesub = function (s) {\n        var subs;\n        if (s instanceof Number || s instanceof String) {\n            // Already compiled, should only happen for augmented assignments\n            subs = s;\n        }\n        else if (s instanceof Index) {\n            subs = this.vexpr(s.value);\n        }\n        else if (s instanceof Slice) {\n            subs = this.cslice(s);\n        }\n        else if (s instanceof Ellipsis) {\n            throw new Error(\"todo;\");\n        }\n        else if (s instanceof ExtSlice) {\n            throw new Error(\"todo;\");\n        }\n        else {\n            throw new Error(\"invalid subscript kind\");\n        }\n        return subs;\n    };\n    Compiler.prototype.vslice = function (s, ctx, obj, dataToStore) {\n        var subs = this.vslicesub(s);\n        return this.chandlesubscr(ctx, obj, subs, dataToStore);\n    };\n    Compiler.prototype.chandlesubscr = function (ctx, obj, subs, data) {\n        if (ctx === Load || ctx === AugLoad) {\n            // TODO\n        }\n        else if (ctx === Store || ctx === AugStore)\n            out(\"Sk.abstr.objectSetItem(\", obj, \",\", subs, \",\", data, \");\");\n        else if (ctx === Del)\n            out(\"Sk.abstr.objectDelItem(\", obj, \",\", subs, \");\");\n        else\n            throw new Error(\"handlesubscr fail\");\n    };\n    Compiler.prototype.cboolop = function (e) {\n        assert(e instanceof BoolOp);\n        var end = this.newBlock('end of boolop');\n        var s = e.values;\n        var n = s.length;\n        var retval;\n        for (var i = 0; i < n; ++i) {\n            var expres = this.vexpr(s[i]);\n            if (i === 0) {\n                // TODO\n            }\n            out(retval, \" = \", expres, \";\");\n        }\n        this.setBlock(end);\n        return retval;\n    };\n    /**\n     *\n     * compiles an expression. to 'return' something, it'll gensym a var and store\n     * into that var so that the calling code doesn't have avoid just pasting the\n     * returned name.\n     *\n     * @param {Object} e\n     * @param {string=} data data to store in a store operation\n     * @param {Object=} augstoreval value to store to for an aug operation (not\n     * vexpr'd yet)\n     */\n    Compiler.prototype.vexpr = function (e, data, augstoreval) {\n        if (e.lineno > this.u.lineno) {\n            this.u.lineno = e.lineno;\n            this.u.linenoSet = false;\n        }\n        // this.annotateSource(e);\n        if (e instanceof BoolOp) {\n            return this.cboolop(e);\n        }\n        else if (e instanceof BinOp) {\n            return;\n        }\n        else if (e instanceof UnaryOp) {\n            return;\n        }\n        else if (e instanceof Lambda) {\n            return this.clambda(e);\n        }\n        else if (e instanceof IfExp) {\n            return this.cifexp(e);\n        }\n        else if (e instanceof Dict) {\n            return this.cdict(e);\n        }\n        else if (e instanceof ListComp) {\n            return this.clistcomp(e);\n        }\n        else if (e instanceof GeneratorExp) {\n            return this.cgenexp(e);\n        }\n        else if (e instanceof Yield) {\n            return this.cyield(e);\n        }\n        else if (e instanceof Compare) {\n            return this.ccompare(e);\n        }\n        else if (e instanceof Call) {\n            var result = this.ccall(e);\n            // After the function call, we've returned to this line\n            this.annotateSource(e);\n            return result;\n        }\n        else if (e instanceof Num) {\n            if (e.n.isFloat()) {\n                return e.n.value.toString();\n            }\n            else if (e.n.isInt()) {\n                return e.n.value.toString();\n            }\n            else if (e.n.isLong()) {\n                return \"longFromString('\" + e.n.text + \"', \" + e.n.radix + \")\";\n            }\n            throw new Error(\"unhandled Num type\");\n        }\n        else if (e instanceof Str) {\n            return toStringLiteralJS(e.s);\n        }\n        else if (e instanceof Attribute) {\n            var val;\n            if (e.ctx !== AugStore)\n                val = this.vexpr(e.value);\n            var mangled = toStringLiteralJS(e.attr);\n            mangled = mangled.substring(1, mangled.length - 1);\n            mangled = mangleName(this.u.private_, mangled);\n            mangled = fixReservedWords(mangled);\n            mangled = fixReservedNames(mangled);\n            switch (e.ctx) {\n                case AugLoad:\n                case Load:\n                    return this.emitArgs(\"lattr\", \"Sk.abstr.gattr(\", val, \",'\", mangled, \"')\");\n                case AugStore:\n                    out(\"if(typeof \", data, \" !== 'undefined'){\"); // special case to avoid re-store if inplace worked\n                    val = this.vexpr(augstoreval || null); // the || null can never happen, but closure thinks we can get here with it being undef\n                    out(\"Sk.abstr.sattr(\", val, \",'\", mangled, \"',\", data, \");\");\n                    out(\"}\");\n                    break;\n                case Store:\n                    out(\"Sk.abstr.sattr(\", val, \",'\", mangled, \"',\", data, \");\");\n                    break;\n                case Del:\n                    throw new Error(\"todo;\");\n                // break;\n                case Param:\n                default:\n                    throw new Error(\"invalid attribute expression\");\n            }\n        }\n        else if (e instanceof Subscript) {\n            switch (e.ctx) {\n                case AugLoad:\n                case Load:\n                case Store:\n                case Del:\n                    return this.vslice(e.slice, e.ctx, this.vexpr(e.value), data);\n                case AugStore: {\n                    out(\"if(typeof \", data, \" !== 'undefined'){\"); // special case to avoid re-store if inplace worked\n                    var val_1 = this.vexpr(augstoreval || null); // the || null can never happen, but closure thinks we can get here with it being undef\n                    this.vslice(e.slice, e.ctx, val_1, data);\n                    out(\"}\");\n                    break;\n                }\n                case Param:\n                default:\n                    throw new Error(\"invalid subscript expression\");\n            }\n        }\n        else if (e instanceof Name) {\n            return this.nameop(e.id, e.ctx, data);\n        }\n        else if (e instanceof List) {\n            return this.ctupleorlist(e, data, 'list');\n        }\n        else if (e instanceof Tuple) {\n            return this.ctupleorlist(e, data, 'tuple');\n        }\n        else {\n            throw new Error(\"unhandled case in vexpr\");\n        }\n    };\n    /**\n     * @param {Array.<Object>} exprs\n     * @param {Array.<string>=} data\n     */\n    Compiler.prototype.vseqexpr = function (exprs, data) {\n        var missingData = (typeof data === 'undefined');\n        assert(missingData || exprs.length === data.length);\n        var ret = [];\n        for (var i = 0; i < exprs.length; ++i) {\n            ret.push(this.vexpr(exprs[i], (missingData ? undefined : data[i])));\n        }\n        return ret;\n    };\n    Compiler.prototype.caugassign = function (s) {\n        assert(s instanceof AugAssign);\n        var e = s.target;\n        if (e instanceof Attribute) {\n            var auge = new Attribute(e.value, e.attr, AugLoad, e.lineno, e.col_offset);\n            var aug = this.vexpr(auge);\n            var val = this.vexpr(s.value);\n            var res = this.emitArgs('inplbinopattr', \"Sk.abstr.numberInplaceBinOp(\", aug, \",\", val, \",'\", \"')\");\n            auge.ctx = AugStore;\n            return this.vexpr(auge, res, e.value);\n        }\n        else if (e instanceof Subscript) {\n            // Only compile the subscript value once\n            var augsub = this.vslicesub(e.slice);\n            var auge = new Subscript(e.value, augsub, AugLoad, e.lineno, e.col_offset);\n            var aug = this.vexpr(auge);\n            var val = this.vexpr(s.value);\n            var res = this.emitArgs('inplbinopsubscr', \"Sk.abstr.numberInplaceBinOp(\", aug, \",\", val, \",'\", \"')\");\n            auge.ctx = AugStore;\n            return this.vexpr(auge, res, e.value);\n        }\n        else if (e instanceof Name) {\n            var to = this.nameop(e.id, Load);\n            var val = this.vexpr(s.value);\n            var res = this.emitArgs('inplbinop', \"Sk.abstr.numberInplaceBinOp(\", to, \",\", val, \",'\", \"')\");\n            return this.nameop(e.id, Store, res);\n        }\n        else {\n            throw new Error(\"unhandled case in augassign\");\n        }\n    };\n    /**\n     * optimize some constant exprs. returns 0 if always 0, 1 if always 1 or -1 otherwise.\n     */\n    Compiler.prototype.exprConstant = function (e) {\n        switch (e.constructor) {\n            case Num:\n                throw new Error(\"Trying to call the runtime for Num\");\n            // return Sk.misceval.isTrue(e.n);\n            // break;\n            case Str:\n                throw new Error(\"Trying to call the runtime for Str\");\n            // return Sk.misceval.isTrue(e.s);\n            // break;\n            case Name:\n            // todo; do __debug__ test here if opt\n            default:\n                return -1;\n        }\n    };\n    Compiler.prototype.newBlock = function (name) {\n        var ret = this.u.blocknum++;\n        this.u.blocks[ret] = [];\n        this.u.blocks[ret]._name = name || '<unnamed>';\n        return ret;\n    };\n    Compiler.prototype.setBlock = function (n) {\n        assert(n >= 0 && n < this.u.blocknum);\n        this.u.curblock = n;\n    };\n    Compiler.prototype.pushBreakBlock = function (n) {\n        assert(n >= 0 && n < this.u.blocknum);\n        this.u.breakBlocks.push(n);\n    };\n    Compiler.prototype.popBreakBlock = function () {\n        this.u.breakBlocks.pop();\n    };\n    Compiler.prototype.pushContinueBlock = function (n) {\n        assert(n >= 0 && n < this.u.blocknum);\n        this.u.continueBlocks.push(n);\n    };\n    Compiler.prototype.popContinueBlock = function () {\n        this.u.continueBlocks.pop();\n    };\n    Compiler.prototype.pushExceptBlock = function (n) {\n        assert(n >= 0 && n < this.u.blocknum);\n        this.u.exceptBlocks.push(n);\n    };\n    Compiler.prototype.popExceptBlock = function () {\n        this.u.exceptBlocks.pop();\n    };\n    Compiler.prototype.pushFinallyBlock = function (n) {\n        assert(n >= 0 && n < this.u.blocknum);\n        this.u.finallyBlocks.push(n);\n    };\n    Compiler.prototype.popFinallyBlock = function () {\n        this.u.finallyBlocks.pop();\n    };\n    Compiler.prototype.setupExcept = function (eb) {\n        out(\"$exc.push(\", eb, \");\");\n        // this.pushExceptBlock(eb);\n    };\n    Compiler.prototype.endExcept = function () {\n        out(\"$exc.pop();\");\n    };\n    Compiler.prototype.outputLocals = function (unit) {\n        var have = {};\n        for (var i = 0; unit.argnames && i < unit.argnames.length; ++i)\n            have[unit.argnames[i]] = true;\n        unit.localnames.sort();\n        var output = [];\n        for (var i = 0; i < unit.localnames.length; ++i) {\n            var name = unit.localnames[i];\n            if (have[name] === undefined) {\n                output.push(name);\n                have[name] = true;\n            }\n        }\n        if (output.length > 0)\n            return \"var \" + output.join(\",\") + \"; /* locals */\";\n        return \"\";\n    };\n    Compiler.prototype.outputAllUnits = function () {\n        var ret = '';\n        for (var j = 0; j < this.allUnits.length; ++j) {\n            var unit = this.allUnits[j];\n            ret += unit.prefixCode;\n            ret += this.outputLocals(unit);\n            ret += unit.varDeclsCode;\n            ret += unit.switchCode;\n            var blocks = unit.blocks;\n            for (var i = 0; i < blocks.length; ++i) {\n                // ret += \"case \" + i + \": /* --- \" + blocks[i]._name + \" --- */\";\n                ret += blocks[i].join('');\n                /*\n                ret += \"throw new Sk.builtin.SystemError('internal error: unterminated block');\";\n                */\n            }\n            ret += unit.suffixCode;\n        }\n        return ret;\n    };\n    Compiler.prototype.generateExpression = function (expression, s, flags) {\n        return \"\";\n    };\n    Compiler.prototype.generateStatements = function (statement, s, flags) {\n        return \"\";\n    };\n    Compiler.prototype.maybeBlock = function (one, flags) {\n        return \"\";\n    };\n    Compiler.prototype.maybeBlockSuffix = function (one, two) {\n        return \"\";\n    };\n    Compiler.prototype.ifStatement = function (stmt, flags) {\n        var _this = this;\n        assert(stmt instanceof IfStatement);\n        assert(isNumber(flags));\n        var result;\n        var bodyFlags;\n        var semicolonOptional;\n        withIndent(function () {\n            result = [\n                'if' + space + '(',\n                _this.generateExpression(stmt.test, Precedence.Sequence, E_TTT),\n                ')'\n            ];\n        });\n        semicolonOptional = !!(flags & F_SEMICOLON_OPT);\n        bodyFlags = S_TFFF;\n        if (semicolonOptional) {\n            bodyFlags |= F_SEMICOLON_OPT;\n        }\n        if (stmt.alternate) {\n            result.push(this.maybeBlock(stmt.consequent, S_TFFF));\n            // result = this.maybeBlockSuffix(stmt.consequent, result);\n            /*\n            if (stmt.alternate.type === Syntax.IfStatement) {\n                result = join(result, ['else ', this.generateStatements(stmt.alternate, bodyFlags)]);\n            } else {\n                result = join(result, join('else', this.maybeBlock(stmt.alternate, bodyFlags)));\n            }\n            */\n        }\n        else {\n            result.push(this.maybeBlock(stmt.consequent, bodyFlags));\n        }\n        return result;\n    };\n    Compiler.prototype.cwhile = function (s, flags) {\n        var constant = this.exprConstant(s.test);\n        if (constant === 0) {\n            if (s.orelse)\n                this.vseqstmt(s.orelse, flags);\n        }\n        else {\n            var top = this.newBlock('while test');\n            this.setBlock(top);\n            var next = this.newBlock('after while');\n            var orelse = s.orelse.length > 0 ? this.newBlock('while orelse') : null;\n            var body = this.newBlock('while body');\n            this.pushBreakBlock(next);\n            this.pushContinueBlock(top);\n            this.setBlock(body);\n            this.vseqstmt(s.body, flags);\n            this.popContinueBlock();\n            this.popBreakBlock();\n            if (s.orelse.length > 0) {\n                this.setBlock(orelse);\n                this.vseqstmt(s.orelse, flags);\n            }\n            this.setBlock(next);\n        }\n    };\n    Compiler.prototype.cfor = function (s, flags) {\n        var start = this.newBlock('for start');\n        var cleanup = this.newBlock('for cleanup');\n        var end = this.newBlock('for end');\n        this.pushBreakBlock(end);\n        this.pushContinueBlock(start);\n        // get the iterator\n        var toiter = this.vexpr(s.iter);\n        var iter;\n        if (this.u.ste.generator) {\n            // if we're in a generator, we have to store the iterator to a local\n            // so it's preserved (as we cross blocks here and assume it survives)\n            iter = \"$loc.\" + this.gensym(\"iter\");\n            out(iter, \"=Sk.abstr.iter(\", toiter, \");\");\n        }\n        else\n            iter = this.emitArgs(\"iter\", \"Sk.abstr.iter(\", toiter, \")\");\n        this.setBlock(start);\n        // load targets\n        // var nexti = this.emitArgs('next', \"Sk.abstr.iternext(\", iter, \")\");\n        // var target = this.vexpr(s.target, nexti);\n        // execute body\n        this.vseqstmt(s.body, flags);\n        this.setBlock(cleanup);\n        this.popContinueBlock();\n        this.popBreakBlock();\n        this.vseqstmt(s.orelse, flags);\n        this.setBlock(end);\n    };\n    Compiler.prototype.craise = function (s) {\n        if (s && s.type && s.type.id && (s.type.id === \"StopIteration\")) {\n            // currently, we only handle StopIteration, and all it does it return\n            // undefined which is what our iterator protocol requires.\n            //\n            // totally hacky, but good enough for now.\n            out(\"return undefined;\");\n        }\n        else {\n            var inst = '';\n            if (s.inst) {\n                // handles: raise Error, arguments\n                inst = this.vexpr(s.inst);\n                out(\"throw \", this.vexpr(s.type), \"(\", inst, \");\");\n            }\n            else if (s.type && s.type instanceof Call) {\n                if (s.type.func) {\n                    // handles: raise Error(arguments)\n                    out(\"throw \", this.vexpr(s.type), \";\");\n                }\n                else {\n                    // handles: raise Error\n                    out(\"throw \", this.vexpr(s.type), \"('');\");\n                }\n            }\n            else {\n                // re-raise\n                out(\"throw $err;\");\n            }\n        }\n    };\n    Compiler.prototype.ctryexcept = function (s, flags) {\n        var n = s.handlers.length;\n        // Create a block for each except clause\n        var handlers = [];\n        for (var i = 0; i < n; ++i) {\n            handlers.push(this.newBlock(\"except_\" + i + \"_\"));\n        }\n        var unhandled = this.newBlock(\"unhandled\");\n        var orelse = this.newBlock(\"orelse\");\n        var end = this.newBlock(\"end\");\n        this.setupExcept(handlers[0]);\n        this.vseqstmt(s.body, flags);\n        this.endExcept();\n        for (var i = 0; i < n; ++i) {\n            this.setBlock(handlers[i]);\n            var handler = s.handlers[i];\n            if (!handler.type && i < n - 1) {\n                throw new SyntaxError(\"default 'except:' must be last\");\n            }\n            if (handler.type) {\n                // should jump to next handler if err not isinstance of handler.type\n                // var handlertype = this.vexpr(handler.type);\n                // var next = (i === n - 1) ? unhandled : handlers[i + 1];\n                // this check is not right, should use isinstance, but exception objects\n                // are not yet proper Python objects\n                // var check = this.emitArgs('instance', \"$err instanceof \", handlertype);\n            }\n            if (handler.name) {\n                this.vexpr(handler.name, \"$err\");\n            }\n            // Need to execute finally before leaving body if an exception is raised\n            this.vseqstmt(handler.body, flags);\n        }\n        // If no except clause catches exception, throw it again\n        this.setBlock(unhandled);\n        // Should execute finally first\n        out(\"throw $err;\");\n        this.setBlock(orelse);\n        this.vseqstmt(s.orelse, flags);\n        this.setBlock(end);\n    };\n    Compiler.prototype.ctryfinally = function (s, flags) {\n        out(\"/*todo; tryfinally*/\");\n        // everything but the finally?\n        this.ctryexcept(s.body[0], flags);\n    };\n    Compiler.prototype.cassert = function (s) {\n        /* todo; warnings method\n        if (s.test instanceof Tuple && s.test.elts.length > 0)\n            Sk.warn(\"assertion is always true, perhaps remove parentheses?\");\n        */\n        // var test = this.vexpr(s.test);\n        var end = this.newBlock(\"end\");\n        // todo; exception handling\n        // maybe replace with fail?? or just an alert?\n        out(\"throw new Sk.builtin.AssertionError(\", s.msg ? this.vexpr(s.msg) : \"\", \");\");\n        this.setBlock(end);\n    };\n    /**\n     * @param name\n     * @param asname\n     * @param mod\n     */\n    Compiler.prototype.cimportas = function (name, asname, mod) {\n        var src = name;\n        var dotLoc = src.indexOf(\".\");\n        var cur = mod;\n        if (dotLoc !== -1) {\n            // if there's dots in the module name, __import__ will have returned\n            // the top-level module. so, we need to extract the actual module by\n            // getattr'ing up through the names, and then storing the leaf under\n            // the name it was to be imported as.\n            src = src.substr(dotLoc + 1);\n            while (dotLoc !== -1) {\n                dotLoc = src.indexOf(\".\");\n                // var attr = dotLoc !== -1 ? src.substr(0, dotLoc) : src;\n                // cur = this.emitArgs('lattr', \"Sk.abstr.gattr(\", cur, \",'\", attr, \"')\");\n                src = src.substr(dotLoc + 1);\n            }\n        }\n        return this.nameop(asname, Store, cur);\n    };\n    Compiler.prototype.cimport = function (s) {\n        var n = s.names.length;\n        for (var i = 0; i < n; ++i) {\n            var alias = s.names[i];\n            var mod = this.emitArgs('module', 'Sk.builtin.__import__(', toStringLiteralJS(alias.name), ',$gbl,$loc,[])');\n            if (alias.asname) {\n                this.cimportas(alias.name, alias.asname, mod);\n            }\n            else {\n                var lastDot = alias.name.indexOf('../pytools');\n                if (lastDot !== -1) {\n                    this.nameop(alias.name.substr(0, lastDot), Store, mod);\n                }\n                else {\n                    this.nameop(alias.name, Store, mod);\n                }\n            }\n        }\n    };\n    Compiler.prototype.cfromimport = function (s) {\n        var n = s.names.length;\n        var names = [];\n        for (var i = 0; i < n; ++i) {\n            names[i] = s.names[i].name;\n        }\n        // const namesString = names.map(function(name) { return toStringLiteralJS(name); }).join(', ');\n        for (var i_1 = 0; i_1 < n; ++i_1) {\n            var alias = s.names[i_1];\n            if (i_1 === 0 && alias.name === \"*\") {\n                assert(n === 1);\n                out(\"import * from \" + toStringLiteralJS(s.module) + \";\");\n                return;\n            }\n        }\n    };\n    /**\n     * builds a code object (js function) for various constructs. used by def,\n     * lambda, generator expressions. it isn't used for class because it seemed\n     * different enough.\n     *\n     * handles:\n     * - setting up a new scope\n     * - decorators (if any)\n     * - defaults setup\n     * - setup for cell and free vars\n     * - setup and modification for generators\n     *\n     * @param {Object} n ast node to build for\n     * @param {string} coname name of code object to build\n     * @param {Array} decorator_list ast of decorators if any\n     * @param {*} args arguments to function, if any\n     * @param {Function} callback called after setup to do actual work of function\n     *\n     * @returns the name of the newly created function or generator object.\n     *\n     */\n    Compiler.prototype.buildcodeobj = function (n, coname, decorator_list, args, callback) {\n        var decos = [];\n        var defaults = [];\n        var vararg = null;\n        var kwarg = null;\n        // decorators and defaults have to be evaluated out here before we enter\n        // the new scope. we output the defaults and attach them to this code\n        // object, but only once we know the name of it (so we do it after we've\n        // exited the scope near the end of this function).\n        if (decorator_list)\n            decos = this.vseqexpr(decorator_list);\n        if (args && args.defaults)\n            defaults = this.vseqexpr(args.defaults);\n        if (args && args.vararg)\n            vararg = args.vararg;\n        if (args && args.kwarg)\n            kwarg = args.kwarg;\n        /**\n         *\n         */\n        var containingHasFree = this.u.ste.hasFree;\n        /**\n         *\n         */\n        var containingHasCell = this.u.ste.childHasFree;\n        /**\n         * enter the new scope, and create the first block\n         */\n        var scopename = this.enterScope(coname, n, n.lineno);\n        var isGenerator = this.u.ste.generator;\n        /**\n         *\n         */\n        var hasFree = this.u.ste.hasFree;\n        /**\n         *\n         */\n        var hasCell = this.u.ste.childHasFree;\n        /**\n         *\n         */\n        var descendantOrSelfHasFree = this.u.ste.hasFree /* || this.u.ste.childHasFree*/;\n        /**\n         * newBlock returns a number, but we re-assign a string.\n         */\n        var entryBlock = this.newBlock('codeobj entry');\n        //\n        // the header of the function, and arguments\n        //\n        this.u.prefixCode = \"var \" + scopename + \"=(function \" + this.niceName(coname) + \"$(\";\n        var funcArgs = [];\n        if (isGenerator) {\n            if (kwarg) {\n                throw new SyntaxError(coname + \"(): keyword arguments in generators not supported\");\n            }\n            if (vararg) {\n                throw new SyntaxError(coname + \"(): variable number of arguments in generators not supported\");\n            }\n            funcArgs.push(\"$gen\");\n        }\n        else {\n            if (kwarg)\n                funcArgs.push(\"$kwa\");\n            for (var i = 0; args && i < args.args.length; ++i)\n                funcArgs.push(this.nameop(args.args[i].id, Param));\n        }\n        if (descendantOrSelfHasFree) {\n            funcArgs.push(\"$free\");\n        }\n        this.u.prefixCode += funcArgs.join(\",\");\n        this.u.prefixCode += \"){\";\n        if (isGenerator)\n            this.u.prefixCode += \"\\n// generator\\n\";\n        if (containingHasFree)\n            this.u.prefixCode += \"\\n// containing has free\\n\";\n        if (containingHasCell)\n            this.u.prefixCode += \"\\n// containing has cell\\n\";\n        if (hasFree)\n            this.u.prefixCode += \"\\n// has free\\n\";\n        if (hasCell)\n            this.u.prefixCode += \"\\n// has cell\\n\";\n        //\n        // set up standard dicts/variables\n        //\n        var locals = \"{}\";\n        if (isGenerator) {\n            entryBlock = \"$gen.gi$resumeat\";\n            locals = \"$gen.gi$locals\";\n        }\n        var cells = \"\";\n        if (hasCell)\n            cells = \",$cell={}\";\n        // note special usage of 'this' to avoid having to slice globals into\n        // all function invocations in call\n        this.u.varDeclsCode += \"var $blk=\" + entryBlock + \",$exc=[],$loc=\" + locals + cells + \",$gbl=this,$err;\";\n        //\n        // copy all parameters that are also cells into the cells dict. this is so\n        // they can be accessed correctly by nested scopes.\n        //\n        for (var i_2 = 0; args && i_2 < args.args.length; ++i_2) {\n            var id = args.args[i_2].id;\n            if (this.isCell(id)) {\n                this.u.varDeclsCode += \"$cell.\" + id + \" = \" + id + \";\";\n            }\n        }\n        //\n        // make sure correct number of arguments were passed (generators handled below)\n        //\n        if (!isGenerator) {\n            var minargs = args ? args.args.length - defaults.length : 0;\n            var maxargs = vararg ? Infinity : (args ? args.args.length : 0);\n            var kw = kwarg ? true : false;\n            this.u.varDeclsCode += \"Sk.builtin.pyCheckArgs(\\\"\" + coname +\n                \"\\\", arguments, \" + minargs + \", \" + maxargs + \", \" + kw +\n                \", \" + descendantOrSelfHasFree + \");\";\n        }\n        //\n        // initialize default arguments. we store the values of the defaults to\n        // this code object as .$defaults just below after we exit this scope.\n        //\n        if (defaults.length > 0) {\n            // defaults have to be \"right justified\" so if there's less defaults\n            // than args we offset to make them match up (we don't need another\n            // correlation in the ast)\n            var offset = args.args.length - defaults.length;\n            for (var i_3 = 0; i_3 < defaults.length; ++i_3) {\n                var argname = this.nameop(args.args[i_3 + offset].id, Param);\n                this.u.varDeclsCode += \"if(typeof \" + argname + \" === 'undefined')\" + argname + \" = \" + scopename + \".$defaults[\" + i_3 + \"];\";\n            }\n        }\n        //\n        // initialize vararg, if any\n        //\n        if (vararg) {\n            var start = funcArgs.length;\n            this.u.varDeclsCode += vararg + \"=new Sk.builtins['tuple'](Array.prototype.slice.call(arguments,\" + start + \")); /*vararg*/\";\n        }\n        //\n        // initialize kwarg, if any\n        //\n        if (kwarg) {\n            this.u.varDeclsCode += kwarg + \"=new Sk.builtins['dict']($kwa);\";\n        }\n        //\n        // finally, set up the block switch that the jump code expects\n        //\n        // Old switch code\n        // this.u.switchCode += \"while(true){switch($blk){\";\n        // this.u.suffixCode = \"}break;}});\";\n        // New switch code to catch exceptions\n        this.u.switchCode = \"while(true){try{switch($blk){\";\n        this.u.suffixCode = \"}}catch(err){if ($exc.length>0) {$err=err;$blk=$exc.pop();continue;} else {throw err;}}}});\";\n        //\n        // jump back to the handler so it can do the main actual work of the\n        // function\n        //\n        callback.call(this, scopename);\n        //\n        // get a list of all the argument names (used to attach to the code\n        // object, and also to allow us to declare only locals that aren't also\n        // parameters).\n        var argnames;\n        if (args && args.args.length > 0) {\n            var argnamesarr = [];\n            for (var i_4 = 0; i_4 < args.args.length; ++i_4) {\n                argnamesarr.push(args.args[i_4].id);\n            }\n            argnames = argnamesarr.join(\"', '\");\n            // store to unit so we know what local variables not to declare\n            this.u.argnames = argnamesarr;\n        }\n        //\n        // and exit the code object scope\n        //\n        this.exitScope();\n        //\n        // attach the default values we evaluated at the beginning to the code\n        // object so that it can get at them to set any arguments that are left\n        // unset.\n        //\n        if (defaults.length > 0)\n            out(scopename, \".$defaults=[\", defaults.join(','), \"];\");\n        //\n        // attach co_varnames (only the argument names) for keyword argument\n        // binding.\n        //\n        if (argnames) {\n            out(scopename, \".co_varnames=['\", argnames, \"'];\");\n        }\n        //\n        // attach flags\n        //\n        if (kwarg) {\n            out(scopename, \".co_kwargs=1;\");\n        }\n        //\n        // build either a 'function' or 'generator'../pytools the function is just a simple\n        // constructor call. the generator is more complicated. it needs to make a\n        // new generator every time it's called, so the thing that's returned is\n        // actually a function that makes the generator (and passes arguments to\n        // the function onwards to the generator). this should probably actually\n        // be a function object, rather than a js function like it is now. we also\n        // have to build the argument names to pass to the generator because it\n        // needs to store all locals into itself so that they're maintained across\n        // yields.\n        //\n        // todo; possibly this should be outside?\n        //\n        var frees = \"\";\n        if (hasFree) {\n            frees = \",$cell\";\n            // if the scope we're in where we're defining this one has free\n            // vars, they may also be cell vars, so we pass those to the\n            // closure too.\n            if (containingHasFree)\n                frees += \",$free\";\n        }\n        if (isGenerator)\n            // Keyword and variable arguments are not currently supported in generators.\n            // The call to pyCheckArgs assumes they can't be true.\n            if (args && args.args.length > 0) {\n                return this.emitArgs(\"gener\", \"new Sk.builtins['function']((function(){var $origargs=Array.prototype.slice.call(arguments);Sk.builtin.pyCheckArgs(\\\"\", coname, \"\\\",arguments,\", args.args.length - defaults.length, \",\", args.args.length, \");return new Sk.builtins['generator'](\", scopename, \",$gbl,$origargs\", frees, \");}))\");\n            }\n            else {\n                return this.emitArgs(\"gener\", \"new Sk.builtins['function']((function(){Sk.builtin.pyCheckArgs(\\\"\", coname, \"\\\",arguments,0,0);return new Sk.builtins['generator'](\", scopename, \",$gbl,[]\", frees, \");}))\");\n            }\n        else {\n            return this.emitArgs(\"funcobj\", \"new Sk.builtins['function'](\", scopename, \",$gbl\", frees, \")\");\n        }\n    };\n    Compiler.prototype.cfunction = function (s) {\n        var _this = this;\n        assert(s instanceof FunctionDef);\n        var funcorgen = this.buildcodeobj(s, s.name, s.decorator_list, s.args, function (scopename) {\n            _this.vseqstmt(s.body);\n            out(\"return Sk.builtin.none.none$;\"); // if we fall off the bottom, we want the ret to be None\n        });\n        this.nameop(s.name, Store, funcorgen);\n    };\n    Compiler.prototype.clambda = function (e) {\n        var _this = this;\n        assert(e instanceof Lambda);\n        var func = this.buildcodeobj(e, \"<lambda>\", null, e.args, function (scopename) {\n            var val = _this.vexpr(e.body);\n            out(\"return \", val, \";\");\n        });\n        return func;\n    };\n    Compiler.prototype.cifexp = function (e) {\n        var next = this.newBlock('next of ifexp');\n        var end = this.newBlock('end of ifexp');\n        var ret = this.emitArgs('res', 'null');\n        // var test = this.vexpr(e.test);\n        out(ret, '=', this.vexpr(e.body), ';');\n        this.setBlock(next);\n        out(ret, '=', this.vexpr(e.orelse), ';');\n        this.setBlock(end);\n        return ret;\n    };\n    Compiler.prototype.cgenexpgen = function (generators, genIndex, elt) {\n        var start = this.newBlock('start for ' + genIndex);\n        var skip = this.newBlock('skip for ' + genIndex);\n        // var ifCleanup = this.newBlock('if cleanup for ' + genIndex);\n        var end = this.newBlock('end for ' + genIndex);\n        var ge = generators[genIndex];\n        var iter;\n        if (genIndex === 0) {\n            // the outer most iterator is evaluated in the scope outside so we\n            // have to evaluate it outside and store it into the generator as a\n            // local, which we retrieve here.\n            iter = \"$loc.$iter0\";\n        }\n        else {\n            var toiter = this.vexpr(ge.iter);\n            iter = \"$loc.\" + this.gensym(\"iter\");\n            out(iter, \" = \", \"Sk.abstr.iter(\", toiter, \");\");\n        }\n        this.setBlock(start);\n        // load targets\n        // var nexti = this.emitArgs('next', \"Sk.abstr.iternext(\", iter, \")\");\n        // var target = this.vexpr(ge.target, nexti);\n        var n = ge.ifs.length;\n        for (var i = 0; i < n; ++i) {\n            // var ifres = this.vexpr(ge.ifs[i]);\n        }\n        if (++genIndex < generators.length) {\n            this.cgenexpgen(generators, genIndex, elt);\n        }\n        if (genIndex >= generators.length) {\n            var velt = this.vexpr(elt);\n            out(\"return [\", skip, \"/*resume*/,\", velt, \"/*ret*/];\");\n            this.setBlock(skip);\n        }\n        this.setBlock(end);\n        if (genIndex === 1)\n            out(\"return null;\");\n    };\n    Compiler.prototype.cgenexp = function (e) {\n        var _this = this;\n        var gen = this.buildcodeobj(e, \"<genexpr>\", null, null, function (scopename) {\n            _this.cgenexpgen(e.generators, 0, e.elt);\n        });\n        // call the generator maker to get the generator. this is kind of dumb,\n        // but the code builder builds a wrapper that makes generators for normal\n        // function generators, so we just do it outside (even just new'ing it\n        // inline would be fine).\n        var gener = this.emitArgs(\"gener\", \"Sk.misceval.callsim(\", gen, \");\");\n        // stuff the outermost iterator into the generator after evaluating it\n        // outside of the function. it's retrieved by the fixed name above.\n        out(gener, \".gi$locals.$iter0=Sk.abstr.iter(\", this.vexpr(e.generators[0].iter), \");\");\n        return gener;\n    };\n    Compiler.prototype.cclass = function (s, flags) {\n        assert(s instanceof ClassDef);\n        // var decos = s.decorator_list;\n        // decorators and bases need to be eval'd out here\n        // this.vseqexpr(decos);\n        var bases = this.vseqexpr(s.bases);\n        /**\n         *\n         */\n        var scopename = this.enterScope(s.name, s, s.lineno);\n        var entryBlock = this.newBlock('class entry');\n        this.u.prefixCode = \"var \" + scopename + \"=(function $\" + s.name + \"$class_outer($globals,$locals,$rest){var $gbl=$globals,$loc=$locals;\";\n        this.u.switchCode += \"return(function \" + s.name + \"(){\";\n        this.u.switchCode += \"var $blk=\" + entryBlock + \",$exc=[];while(true){switch($blk){\";\n        this.u.suffixCode = \"}break;}}).apply(null,$rest);});\";\n        this.u.private_ = s.name;\n        this.cbody(s.body, flags);\n        out(\"break;\");\n        // build class\n        // apply decorators\n        this.exitScope();\n        var wrapped = this.emitArgs('built', 'Sk.misceval.buildClass($gbl,', scopename, ',', toStringLiteralJS(s.name), ',[', bases, '])');\n        // store our new class under the right name\n        this.nameop(s.name, Store, wrapped);\n    };\n    Compiler.prototype.ccontinue = function (s) {\n        if (this.u.continueBlocks.length === 0)\n            throw new SyntaxError(\"'continue' outside loop\");\n    };\n    /**\n     * compiles a statement\n     */\n    Compiler.prototype.vstmt = function (s, flags) {\n        this.u.lineno = s.lineno;\n        this.u.linenoSet = false;\n        this.annotateSource(s);\n        switch (s.constructor) {\n            case FunctionDef:\n                this.cfunction(s);\n                break;\n            case ClassDef:\n                this.cclass(s, flags);\n                break;\n            case ReturnStatement: {\n                var rs = s;\n                if (this.u.ste.blockType !== FunctionBlock)\n                    throw new SyntaxError(\"'return' outside function\");\n                if (rs.value)\n                    out(\"return \", this.vexpr(rs.value), \";\");\n                else\n                    out(\"return null;\");\n                break;\n            }\n            case DeleteExpression:\n                this.vseqexpr(s.targets);\n                break;\n            case Assign: {\n                var assign = s;\n                var n = assign.targets.length;\n                var val = this.vexpr(assign.value);\n                for (var i = 0; i < n; ++i)\n                    this.vexpr(assign.targets[i], val);\n                break;\n            }\n            case AugAssign: {\n                return this.caugassign(s);\n            }\n            case Print: {\n                this.cprint(s);\n                break;\n            }\n            case ForStatement: {\n                return this.cfor(s, flags);\n            }\n            case WhileStatement: {\n                return this.cwhile(s, flags);\n            }\n            case IfStatement: {\n                return this.ifStatement(s, flags);\n            }\n            case Raise: {\n                return this.craise(s);\n            }\n            case TryExcept: {\n                return this.ctryexcept(s, flags);\n            }\n            case TryFinally: {\n                return this.ctryfinally(s, flags);\n            }\n            case Assert: {\n                return this.cassert(s);\n            }\n            case ImportStatement:\n                return this.cimport(s);\n            case ImportFrom:\n                return this.cfromimport(s);\n            case Global:\n                break;\n            case Expr:\n                this.vexpr(s.value);\n                break;\n            case Pass:\n                break;\n            case BreakStatement:\n                if (this.u.breakBlocks.length === 0)\n                    throw new SyntaxError(\"'break' outside loop\");\n                break;\n            case ContinueStatement:\n                this.ccontinue(s);\n                break;\n            default:\n                throw new Error(\"unhandled case in vstmt\");\n        }\n    };\n    Compiler.prototype.vseqstmt = function (stmts, flags) {\n        for (var i = 0; i < stmts.length; ++i)\n            this.vstmt(stmts[i], flags);\n    };\n    Compiler.prototype.isCell = function (name) {\n        var mangled = mangleName(this.u.private_, name);\n        var scope = this.u.ste.getScope(mangled);\n        if (scope === CELL)\n            return true;\n        return false;\n    };\n    /**\n     * @param {string} name\n     * @param {Object} ctx\n     * @param {string=} dataToStore\n     */\n    Compiler.prototype.nameop = function (name, ctx, dataToStore) {\n        if ((ctx === Store || ctx === AugStore || ctx === Del) && name === \"__debug__\") {\n            throw new SyntaxError(\"can not assign to __debug__\");\n        }\n        if ((ctx === Store || ctx === AugStore || ctx === Del) && name === \"None\") {\n            throw new SyntaxError(\"can not assign to None\");\n        }\n        if (name === \"None\")\n            return \"Sk.builtin.none.none$\";\n        if (name === \"True\")\n            return \"Sk.ffi.bool.True\";\n        if (name === \"False\")\n            return \"Sk.ffi.bool.False\";\n        // Have to do this before looking it up in the scope\n        var mangled = mangleName(this.u.private_, name);\n        var optype = OP_NAME;\n        var scope = this.u.ste.getScope(mangled);\n        var dict = null;\n        switch (scope) {\n            case FREE:\n                dict = \"$free\";\n                optype = OP_DEREF;\n                break;\n            case CELL:\n                dict = \"$cell\";\n                optype = OP_DEREF;\n                break;\n            case LOCAL:\n                // can't do FAST in generators or at module/class scope\n                if (this.u.ste.blockType === FunctionBlock && !this.u.ste.generator)\n                    optype = OP_FAST;\n                break;\n            case GLOBAL_IMPLICIT:\n                if (this.u.ste.blockType === FunctionBlock)\n                    optype = OP_GLOBAL;\n                break;\n            case GLOBAL_EXPLICIT:\n                optype = OP_GLOBAL;\n            default:\n                break;\n        }\n        // have to do this after looking it up in the scope\n        mangled = fixReservedNames(mangled);\n        mangled = fixReservedWords(mangled);\n        // print(\"mangled\", mangled);\n        // TODO TODO TODO todo; import * at global scope failing here\n        assert(scope || name.charAt(1) === '_');\n        // in generator or at module scope, we need to store to $loc, rather that\n        // to actual JS stack variables.\n        var mangledNoPre = mangled;\n        if (this.u.ste.generator || this.u.ste.blockType !== FunctionBlock) {\n            // No need to change mangled.\n        }\n        else if (optype === OP_FAST || optype === OP_NAME)\n            this.u.localnames.push(mangled);\n        switch (optype) {\n            case OP_FAST:\n                switch (ctx) {\n                    case Load:\n                    case Param:\n                        // Need to check that it is bound!\n                        // out(\"if (typeof \", mangled, \" === 'undefined') { throw new Error('local variable \\\\\\'\", mangled, \"\\\\\\' referenced before assignment'); }\\n\");\n                        return mangled;\n                    case Store:\n                        // out(mangled, \" = \", dataToStore, \";\");\n                        break;\n                    case Del:\n                        // out(\"delete \", mangled, \";\");\n                        break;\n                    default:\n                        throw new Error(\"unhandled\");\n                }\n                break;\n            case OP_NAME:\n                switch (ctx) {\n                    case Load:\n                        // out(mangledNoPre);\n                        break;\n                    case Store:\n                        // out(mangled, \" = \", dataToStore, \";\");\n                        break;\n                    case Del:\n                        // out(\"delete \", mangled, \";\");\n                        break;\n                    case Param:\n                        return mangled;\n                    default:\n                        throw new Error(\"unhandled\");\n                }\n                break;\n            case OP_GLOBAL:\n                switch (ctx) {\n                    case Load:\n                        return mangledNoPre;\n                    case Store:\n                        // out(\"$gbl.\", mangledNoPre, \" = \", dataToStore, ';');\n                        break;\n                    case Del:\n                        // out(\"delete $gbl.\", mangledNoPre);\n                        break;\n                    default:\n                        throw new Error(\"unhandled case in name op_global\");\n                }\n                break;\n            case OP_DEREF:\n                switch (ctx) {\n                    case Load:\n                        return dict + \".\" + mangledNoPre;\n                    case Store:\n                        // out(dict, \".\", mangledNoPre, \" = \", dataToStore, \";\");\n                        break;\n                    case Param:\n                        return mangledNoPre;\n                    default:\n                        throw new Error(\"unhandled case in name op_deref\");\n                }\n                break;\n            default:\n                throw new Error(\"unhandled case\");\n        }\n        throw new Error(\"TODO\");\n    };\n    /**\n     * @param name\n     * @return The generated name of the scope, usually $scopeN.\n     */\n    Compiler.prototype.enterScope = function (name, key, lineno) {\n        var u = new CompilerUnit();\n        u.ste = this.st.getStsForAst(key);\n        u.name = name;\n        u.firstlineno = lineno;\n        if (this.u && this.u.private_) {\n            u.private_ = this.u.private_;\n        }\n        this.stack.push(this.u);\n        this.allUnits.push(u);\n        var scopeName = this.gensym('scope');\n        u.scopename = scopeName;\n        this.u = u;\n        this.u.activateScope();\n        this.nestlevel++;\n        return scopeName;\n    };\n    Compiler.prototype.exitScope = function () {\n        var prev = this.u;\n        this.nestlevel--;\n        if (this.stack.length - 1 >= 0)\n            this.u = this.stack.pop();\n        else {\n            this.u = null;\n        }\n        if (this.u)\n            this.u.activateScope();\n        if (prev.name !== \"<module>\") {\n            var mangled = prev.name;\n            mangled = fixReservedWords(mangled);\n            mangled = fixReservedNames(mangled);\n            // out(prev.scopename, \".co_name=Sk.builtin.stringToPy('\", mangled, \"');\");\n        }\n    };\n    /**\n     *\n     */\n    Compiler.prototype.cbody = function (stmts, flags) {\n        for (var i = 0; i < stmts.length; ++i) {\n            this.vstmt(stmts[i], flags);\n        }\n    };\n    Compiler.prototype.cprint = function (s) {\n        assert(s instanceof Print);\n        var dest = 'null';\n        if (s.dest) {\n            dest = this.vexpr(s.dest);\n        }\n        var n = s.values.length;\n        for (var i = 0; i < n; ++i) {\n            // out(\"Sk.misceval.print_(Sk.ffi.remapToJs(new Sk.builtins.str(\", this.vexpr(s.values[i]), \")));\");\n        }\n        if (s.nl) {\n            // out(\"Sk.misceval.print_('\\\\n');\");\n        }\n    };\n    Compiler.prototype.cmod = function (mod, flags) {\n        var modf = this.enterScope(\"<module>\", mod, 0);\n        /* const entryBlock = */ this.newBlock('module entry');\n        // this.u.prefixCode = \"var \" + modf + \"=(function($modname){\";\n        // this.u.varDeclsCode = \"var $blk=\" + entryBlock + \",$exc=[],$gbl={},$loc=$gbl,$err;$gbl.__name__=$modname;Sk.globals=$gbl;\";\n        // this.u.switchCode = \"try {while(true){try{switch($blk){\";\n        // this.u.suffixCode = \"}}catch(err){if ($exc.length>0) {$err=err;$blk=$exc.pop();continue;} else {throw err;}}}}catch(err){if (err instanceof Sk.builtin.SystemExit && !Sk.throwSystemExit) { Sk.misceval.print_(err.toString() + '\\\\n'); return $loc; } else { throw err; } } });\";\n        switch (mod.constructor) {\n            case Module:\n                this.cbody(mod.body, flags);\n                break;\n            default:\n                throw new Error(\"todo; unhandled case in compilerMod\");\n        }\n        this.exitScope();\n        this.result.push(this.outputAllUnits());\n        return modf;\n    };\n    return Compiler;\n}());\nexport { Compiler };\n/**\n * Appends \"_$rw$\" to any word that is in the list of reserved words.\n */\nfunction fixReservedWords(word) {\n    if (reservedWords[word] !== true) {\n        return word;\n    }\n    return word + \"_$rw$\";\n}\n/**\n * Appends \"_$rn$\" to any name that is in the list of reserved names.\n */\nfunction fixReservedNames(name) {\n    if (reservedNames[name])\n        return name + \"_$rn$\";\n    return name;\n}\n/**\n * @param {string} priv\n * @param {string} name\n * @return {string} The mangled name.\n */\nfunction mangleName(priv, name) {\n    var strpriv = null;\n    if (priv === null || name === null || name.charAt(0) !== '_' || name.charAt(1) !== '_')\n        return name;\n    // don't mangle __id__\n    if (name.charAt(name.length - 1) === '_' && name.charAt(name.length - 2) === '_')\n        return name;\n    // don't mangle classes that are all _ (obscure much?)\n    strpriv = priv;\n    strpriv.replace(/_/g, '');\n    if (strpriv === '')\n        return name;\n    strpriv = priv;\n    strpriv.replace(/^_*/, '');\n    return '_' + strpriv + name;\n}\n/**\n * @param {string} source the code\n * @param {string} fileName where it came from\n *\n * @return {{code: string}}\n */\nexport function compile(source, fileName) {\n    var node = transpile(source, fileName);\n    // TODO: We need a serializer from TypeScript.\n    var code = \"Need serializer from TypeScript \" + node;\n    //  const code = generate(node, {});\n    return { code: code };\n}\nexport function resetCompiler() {\n    gensymCount = 0;\n}\n/**\n * Transpiles from Python to JavaScript.\n */\nvar Transpiler = (function () {\n    function Transpiler(fileName, st, flags, sourceCodeForAnnotation) {\n        this.fileName = fileName;\n        /**\n         * @type {Object}\n         * @private\n         */\n        this.st = st;\n        this.flags = flags;\n        this.interactive = false;\n        this.nestlevel = 0;\n        this.u = null;\n        /**\n         * @type Array.<CompilerUnit>\n         * @private\n         */\n        this.stack = [];\n        this.result = [];\n        // this.gensymcount = 0;\n        /**\n         * @type Array.<CompilerUnit>\n         * @private\n         */\n        this.allUnits = [];\n        this.source = sourceCodeForAnnotation ? sourceCodeForAnnotation.split(\"\\n\") : false;\n    }\n    Transpiler.prototype.module = function (ast, flags) {\n        // const node: ts.Node = new Node();\n        // const body = this.statementList(ast.body, flags);\n        // node.finishProgram(body);\n        // return node;\n        throw new Error(\"TODO: module\");\n    };\n    Transpiler.prototype.statementList = function (stmts, flags) {\n        var nodes = [];\n        var iLen = stmts.length;\n        for (var i = 0; i < iLen; i++) {\n            var stmt = stmts[i];\n            nodes.push(this.statement(stmt, flags));\n        }\n        return nodes;\n    };\n    Transpiler.prototype.statement = function (s, flags) {\n        // this.u.lineno = s.lineno;\n        // this.u.linenoSet = false;\n        //        this.annotateSource(s);\n        switch (s.constructor) {\n            case FunctionDef:\n                return this.functionDef(s, flags);\n            case ClassDef:\n                return this.classDef(s, flags);\n            case ReturnStatement: {\n                return this.returnStatement(s, flags);\n            }\n            case DeleteExpression:\n                return this.deleteExpression(s, flags);\n            case Assign: {\n                return this.assign(s, flags);\n            }\n            case AugAssign: {\n                return this.augAssign(s, flags);\n            }\n            case Print: {\n                this.print(s, flags);\n                throw new Error(\"Print\");\n                // break;\n            }\n            case ForStatement: {\n                return this.forStatement(s, flags);\n            }\n            case WhileStatement: {\n                return this.whileStatement(s, flags);\n            }\n            case IfStatement: {\n                return this.ifStatement(s, flags);\n            }\n            case Raise: {\n                return this.raise(s, flags);\n            }\n            case TryExcept: {\n                return this.tryExcept(s, flags);\n            }\n            case TryFinally: {\n                return this.tryFinally(s, flags);\n            }\n            case Assert: {\n                return this.assert(s, flags);\n            }\n            case ImportStatement:\n                return this.importStatement(s, flags);\n            case ImportFrom:\n                return this.importFrom(s, flags);\n            case Global:\n                throw new Error(\"Gloabl\");\n            // break;\n            case Expr:\n                return this.expr(s, flags);\n            case Pass:\n                throw new Error(\"Pass\");\n            // break;\n            case BreakStatement:\n                return this.breakStatement(s, flags);\n            case ContinueStatement:\n                return this.continueStatement(s, flags);\n            default:\n                throw new Error(\"statement\");\n        }\n    };\n    Transpiler.prototype.assert = function (a, flags) {\n        throw new Error(\"Assert\");\n    };\n    Transpiler.prototype.breakStatement = function (b, flags) {\n        /*\n        if (this.u.breakBlocks.length === 0)\n            throw new SyntaxError(\"'break' outside loop\");\n        break;\n        */\n        throw new Error(\"BreakStatement\");\n    };\n    Transpiler.prototype.classDef = function (c, flags) {\n        throw new Error(\"ClassDef\");\n    };\n    Transpiler.prototype.continueStatement = function (c, flags) {\n        throw new Error(\"ContinueStatement\");\n    };\n    Transpiler.prototype.forStatement = function (fs, flags) {\n        throw new Error(\"ForStatement\");\n    };\n    Transpiler.prototype.functionDef = function (f, flags) {\n        throw new Error(\"FunctionDef\");\n    };\n    Transpiler.prototype.ifStatement = function (fs, flags) {\n        throw new Error(\"IfStatement\");\n    };\n    Transpiler.prototype.importFrom = function (i, flags) {\n        // const node = new Node();\n        // node.fi\n        throw new Error(\"ImportFrom\");\n    };\n    Transpiler.prototype.importStatement = function (i, flags) {\n        throw new Error(\"ImportStatement\");\n    };\n    Transpiler.prototype.returnStatement = function (rs, flags) {\n        /*\n        if (this.u.ste.blockType !== FunctionBlock)\n            throw new SyntaxError(\"'return' outside function\");\n        if (rs.value)\n            out(\"return \", this.vexpr(rs.value), \";\");\n        else\n            out(\"return null;\");\n        */\n        throw new Error(\"ClassDef\");\n    };\n    Transpiler.prototype.deleteExpression = function (de, flags) {\n        throw new Error(\"DeleteExpression\");\n    };\n    Transpiler.prototype.assign = function (assign, flags) {\n        // const node = new Node();\n        // node.finishAssignmentExpression(operator, left, right);\n        /*\n        var n = assign.targets.length;\n        var val = this.vexpr(assign.value);\n        for (var i = 0; i < n; ++i)\n            this.vexpr(assign.targets[i], val);\n        */\n        // return node;\n        throw new Error(\"Assign\");\n    };\n    Transpiler.prototype.augAssign = function (aa, flags) {\n        throw new Error(\"FunctionDef\");\n    };\n    Transpiler.prototype.expr = function (expr, flags) {\n        throw new Error(\"Expr\");\n    };\n    Transpiler.prototype.print = function (p, flags) {\n        throw new Error(\"Print\");\n    };\n    Transpiler.prototype.raise = function (raise, flags) {\n        throw new Error(\"Raise\");\n    };\n    Transpiler.prototype.tryExcept = function (te, flags) {\n        throw new Error(\"TryExcept\");\n    };\n    Transpiler.prototype.tryFinally = function (tf, flags) {\n        throw new Error(\"TryFinally\");\n    };\n    Transpiler.prototype.whileStatement = function (ws, flags) {\n        throw new Error(\"WhileStatement\");\n    };\n    return Transpiler;\n}());\nexport function transpile(source, fileName) {\n    var cst = parse(fileName, source);\n    if (typeof cst === 'object') {\n        var ast = astFromParse(cst, fileName);\n        var st = symbolTable(ast, fileName);\n        var t = new Transpiler(fileName, st, 0, source);\n        var flags = 0;\n        return t.module(ast, flags);\n    }\n    else {\n        throw new Error(\"Error parsing source for file \" + fileName);\n    }\n}\n","/**\n * FIXME: Argument should be declared as string but not allowed by TypeScript compiler.\n */\n/**\n * FIXME: Argument should be declared as string but not allowed by TypeScript compiler.\n */ export function toStringLiteralJS(value) {\n    // single is preferred\n    var quote = \"'\";\n    if (value.indexOf(\"'\") !== -1 && value.indexOf('\"') === -1) {\n        quote = '\"';\n    }\n    var len = value.length;\n    var ret = quote;\n    for (var i = 0; i < len; ++i) {\n        var c = value.charAt(i);\n        if (c === quote || c === '\\\\')\n            ret += '\\\\' + c;\n        else if (c === '\\t')\n            ret += '\\\\t';\n        else if (c === '\\n')\n            ret += '\\\\n';\n        else if (c === '\\r')\n            ret += '\\\\r';\n        else if (c < ' ' || c >= 0x7f) {\n            var ashex = c.charCodeAt(0).toString(16);\n            if (ashex.length < 2)\n                ashex = \"0\" + ashex;\n            ret += \"\\\\x\" + ashex;\n        }\n        else\n            ret += c;\n    }\n    ret += quote;\n    return ret;\n}\n","// import { Symbol } from './Symbol';\nimport { SymbolTable } from './SymbolTable';\nimport { ModuleBlock } from './SymbolConstants';\n/**\n * @param ast\n * @param fileName\n */\nexport function symbolTable(ast, fileName) {\n    var st = new SymbolTable(fileName);\n    st.enterBlock(\"top\", ModuleBlock, ast, 0);\n    st.top = st.cur;\n    // This is a good place to dump the AST for debugging.\n    for (var i = 0; i < ast.body.length; ++i) {\n        st.visitStmt(ast.body[i]);\n    }\n    st.exitBlock();\n    st.analyze();\n    return st;\n}\n/**\n * @param st\n */\nexport function dumpSymbolTable(st) {\n    var pyBoolStr = function (b) {\n        return b ? \"True\" : \"False\";\n    };\n    var pyList = function (l) {\n        var ret = [];\n        for (var i = 0; i < l.length; ++i) {\n            // TODO: Originally, this computed the Python repr().\n            ret.push(l[i]);\n        }\n        return '[' + ret.join(', ') + ']';\n    };\n    var getIdents = function (obj, indent) {\n        if (indent === undefined)\n            indent = \"\";\n        var ret = \"\";\n        ret += indent + \"Sym_type: \" + obj.get_type() + \"\\n\";\n        ret += indent + \"Sym_name: \" + obj.get_name() + \"\\n\";\n        ret += indent + \"Sym_lineno: \" + obj.get_lineno() + \"\\n\";\n        ret += indent + \"Sym_nested: \" + pyBoolStr(obj.is_nested()) + \"\\n\";\n        ret += indent + \"Sym_haschildren: \" + pyBoolStr(obj.has_children()) + \"\\n\";\n        if (obj.get_type() === \"class\") {\n            ret += indent + \"Class_methods: \" + pyList(obj.get_methods()) + \"\\n\";\n        }\n        else if (obj.get_type() === \"function\") {\n            ret += indent + \"Func_params: \" + pyList(obj.get_parameters()) + \"\\n\";\n            ret += indent + \"Func_locals: \" + pyList(obj.get_locals()) + \"\\n\";\n            ret += indent + \"Func_globals: \" + pyList(obj.get_globals()) + \"\\n\";\n            ret += indent + \"Func_frees: \" + pyList(obj.get_frees()) + \"\\n\";\n        }\n        ret += indent + \"-- Identifiers --\\n\";\n        var objidents = obj.get_identifiers();\n        var objidentslen = objidents.length;\n        for (var i = 0; i < objidentslen; ++i) {\n            var info = obj.lookup(objidents[i]);\n            ret += indent + \"name: \" + info.get_name() + \"\\n\";\n            ret += indent + \"  is_referenced: \" + pyBoolStr(info.is_referenced()) + \"\\n\";\n            ret += indent + \"  is_imported: \" + pyBoolStr(info.is_imported()) + \"\\n\";\n            ret += indent + \"  is_parameter: \" + pyBoolStr(info.is_parameter()) + \"\\n\";\n            ret += indent + \"  is_global: \" + pyBoolStr(info.is_global()) + \"\\n\";\n            ret += indent + \"  is_declared_global: \" + pyBoolStr(info.is_declared_global()) + \"\\n\";\n            ret += indent + \"  is_local: \" + pyBoolStr(info.is_local()) + \"\\n\";\n            ret += indent + \"  is_free: \" + pyBoolStr(info.is_free()) + \"\\n\";\n            ret += indent + \"  is_assigned: \" + pyBoolStr(info.is_assigned()) + \"\\n\";\n            ret += indent + \"  is_namespace: \" + pyBoolStr(info.is_namespace()) + \"\\n\";\n            var nss = info.get_namespaces();\n            var nsslen = nss.length;\n            ret += indent + \"  namespaces: [\\n\";\n            var sub = [];\n            for (var j = 0; j < nsslen; ++j) {\n                var ns = nss[j];\n                sub.push(getIdents(ns, indent + \"    \"));\n            }\n            ret += sub.join('\\n');\n            ret += indent + '  ]\\n';\n        }\n        return ret;\n    };\n    return getIdents(st.top, '');\n}\n","import { assert, fail } from './asserts';\nimport { dictUpdate } from './dictUpdate';\nimport { mangleName } from './mangleName';\nimport { SymbolTableScope } from './SymbolTableScope';\nimport { syntaxError } from './syntaxError';\nimport { Assert } from './types';\nimport { Assign } from './types';\nimport { Attribute } from './types';\nimport { AugAssign } from './types';\nimport { BinOp } from './types';\nimport { BoolOp } from './types';\nimport { BreakStatement } from './types';\nimport { Call } from './types';\nimport { ClassDef } from './types';\nimport { Compare } from './types';\nimport { ContinueStatement } from './types';\nimport { DeleteExpression } from './types';\nimport { Dict } from './types';\nimport { Ellipsis } from './types';\nimport { Exec } from './types';\nimport { Expr } from './types';\nimport { ExtSlice } from './types';\nimport { ForStatement } from './types';\nimport { FunctionDef } from './types';\nimport { GeneratorExp } from './types';\nimport { Global } from './types';\nimport { IfStatement } from './types';\nimport { IfExp } from './types';\nimport { ImportStatement } from './types';\nimport { ImportFrom } from './types';\nimport { Index } from './types';\nimport { Lambda } from './types';\nimport { Load } from './types';\nimport { List } from './types';\nimport { ListComp } from './types';\nimport { Name } from './types';\nimport { Num } from './types';\nimport { Param } from './types';\nimport { Pass } from './types';\nimport { Print } from './types';\nimport { Raise } from './types';\nimport { ReturnStatement } from './types';\nimport { Slice } from './types';\nimport { Store } from './types';\nimport { Str } from './types';\nimport { Subscript } from './types';\nimport { TryExcept } from './types';\nimport { TryFinally } from './types';\nimport { Tuple } from './types';\nimport { UnaryOp } from './types';\nimport { WhileStatement } from './types';\nimport { WithStatement } from './types';\nimport { Yield } from './types';\nimport { CELL } from './SymbolConstants';\nimport { ClassBlock } from './SymbolConstants';\nimport { DEF_BOUND } from './SymbolConstants';\nimport { DEF_FREE_CLASS } from './SymbolConstants';\nimport { DEF_GLOBAL } from './SymbolConstants';\nimport { DEF_IMPORT } from './SymbolConstants';\nimport { DEF_LOCAL } from './SymbolConstants';\nimport { DEF_PARAM } from './SymbolConstants';\nimport { FREE } from './SymbolConstants';\nimport { FunctionBlock } from './SymbolConstants';\nimport { GLOBAL_EXPLICIT } from './SymbolConstants';\nimport { GLOBAL_IMPLICIT } from './SymbolConstants';\nimport { LOCAL } from './SymbolConstants';\nimport { ModuleBlock } from './SymbolConstants';\nimport { USE } from './SymbolConstants';\nimport { SCOPE_OFF } from './SymbolConstants';\n/**\n * The symbol table uses the abstract synntax tree (not the parse tree).\n */\nvar SymbolTable = (function () {\n    /**\n     * @param fileName\n     */\n    function SymbolTable(fileName) {\n        this.fileName = fileName;\n        this.cur = null;\n        this.top = null;\n        this.stack = [];\n        this.global = null; // points at top level module symFlags\n        this.curClass = null; // current class or null\n        this.tmpname = 0;\n        // mapping from ast nodes to their scope if they have one. we add an\n        // id to the ast node when a scope is created for it, and store it in\n        // here for the compiler to lookup later.\n        this.stss = {};\n    }\n    /**\n     * Lookup the SymbolTableScope for a scopeId of the AST.\n     */\n    SymbolTable.prototype.getStsForAst = function (ast) {\n        assert(ast.scopeId !== undefined, \"ast wasn't added to st?\");\n        var v = this.stss[ast.scopeId];\n        assert(v !== undefined, \"unknown sym tab entry\");\n        return v;\n    };\n    SymbolTable.prototype.SEQStmt = function (nodes) {\n        var len = nodes.length;\n        for (var i = 0; i < len; ++i) {\n            var val = nodes[i];\n            if (val)\n                this.visitStmt(val);\n        }\n    };\n    SymbolTable.prototype.SEQExpr = function (nodes) {\n        var len = nodes.length;\n        for (var i = 0; i < len; ++i) {\n            var val = nodes[i];\n            if (val)\n                this.visitExpr(val);\n        }\n    };\n    SymbolTable.prototype.enterBlock = function (name, blockType, ast, lineno) {\n        //  name = fixReservedNames(name);\n        var prev = null;\n        if (this.cur) {\n            prev = this.cur;\n            this.stack.push(this.cur);\n        }\n        this.cur = new SymbolTableScope(this, name, blockType, ast, lineno);\n        if (name === 'top') {\n            this.global = this.cur.symFlags;\n        }\n        if (prev) {\n            prev.children.push(this.cur);\n        }\n    };\n    SymbolTable.prototype.exitBlock = function () {\n        // print(\"exitBlock\");\n        this.cur = null;\n        if (this.stack.length > 0)\n            this.cur = this.stack.pop();\n    };\n    SymbolTable.prototype.visitParams = function (args, toplevel) {\n        for (var i = 0; i < args.length; ++i) {\n            var arg = args[i];\n            if (arg.constructor === Name) {\n                assert(arg.ctx === Param || (arg.ctx === Store && !toplevel));\n                this.addDef(arg.id, DEF_PARAM, arg.lineno);\n            }\n            else {\n                // Tuple isn't supported\n                throw syntaxError(\"invalid expression in parameter list\", this.fileName);\n            }\n        }\n    };\n    SymbolTable.prototype.visitArguments = function (a, lineno) {\n        if (a.args)\n            this.visitParams(a.args, true);\n        if (a.vararg) {\n            this.addDef(a.vararg, DEF_PARAM, lineno);\n            this.cur.varargs = true;\n        }\n        if (a.kwarg) {\n            this.addDef(a.kwarg, DEF_PARAM, lineno);\n            this.cur.varkeywords = true;\n        }\n    };\n    /**\n     * @param {number} lineno\n     * @return {void}\n     */\n    SymbolTable.prototype.newTmpname = function (lineno) {\n        this.addDef(\"_[\" + (++this.tmpname) + \"]\", DEF_LOCAL, lineno);\n    };\n    /**\n     * @param {string} name\n     * @param {number} flag\n     * @param {number} lineno\n     * @return {void}\n     */\n    SymbolTable.prototype.addDef = function (name, flag, lineno) {\n        var mangled = mangleName(this.curClass, name);\n        //  mangled = fixReservedNames(mangled);\n        var val = this.cur.symFlags[mangled];\n        if (val !== undefined) {\n            if ((flag & DEF_PARAM) && (val & DEF_PARAM)) {\n                throw syntaxError(\"duplicate argument '\" + name + \"' in function definition\", this.fileName, lineno);\n            }\n            val |= flag;\n        }\n        else {\n            val = flag;\n        }\n        this.cur.symFlags[mangled] = val;\n        if (flag & DEF_PARAM) {\n            this.cur.varnames.push(mangled);\n        }\n        else if (flag & DEF_GLOBAL) {\n            val = flag;\n            var fromGlobal = this.global[mangled];\n            if (fromGlobal !== undefined)\n                val |= fromGlobal;\n            this.global[mangled] = val;\n        }\n    };\n    SymbolTable.prototype.visitSlice = function (s) {\n        if (s instanceof Slice) {\n            if (s.lower)\n                this.visitExpr(s.lower);\n            if (s.upper)\n                this.visitExpr(s.upper);\n            if (s.step)\n                this.visitExpr(s.step);\n        }\n        else if (s instanceof ExtSlice) {\n            for (var i = 0; i < s.dims.length; ++i) {\n                this.visitSlice(s.dims[i]);\n            }\n        }\n        else if (s instanceof Index) {\n            this.visitExpr(s.value);\n        }\n        else if (s instanceof Ellipsis) {\n            // Do nothing.\n        }\n    };\n    /**\n     * @param {Object} s\n     */\n    SymbolTable.prototype.visitStmt = function (s) {\n        assert(s !== undefined, \"visitStmt called with undefined\");\n        if (s instanceof FunctionDef) {\n            this.addDef(s.name, DEF_LOCAL, s.lineno);\n            if (s.args.defaults)\n                this.SEQExpr(s.args.defaults);\n            if (s.decorator_list)\n                this.SEQExpr(s.decorator_list);\n            this.enterBlock(s.name, FunctionBlock, s, s.lineno);\n            this.visitArguments(s.args, s.lineno);\n            this.SEQStmt(s.body);\n            this.exitBlock();\n        }\n        else if (s instanceof ClassDef) {\n            this.addDef(s.name, DEF_LOCAL, s.lineno);\n            this.SEQExpr(s.bases);\n            if (s.decorator_list)\n                this.SEQExpr(s.decorator_list);\n            this.enterBlock(s.name, ClassBlock, s, s.lineno);\n            var tmp = this.curClass;\n            this.curClass = s.name;\n            this.SEQStmt(s.body);\n            this.curClass = tmp;\n            this.exitBlock();\n        }\n        else if (s instanceof ReturnStatement) {\n            if (s.value) {\n                this.visitExpr(s.value);\n                this.cur.returnsValue = true;\n                if (this.cur.generator) {\n                    throw syntaxError(\"'return' with argument inside generator\", this.fileName);\n                }\n            }\n        }\n        else if (s instanceof DeleteExpression) {\n            this.SEQExpr(s.targets);\n        }\n        else if (s instanceof Assign) {\n            this.SEQExpr(s.targets);\n            this.visitExpr(s.value);\n        }\n        else if (s instanceof AugAssign) {\n            this.visitExpr(s.target);\n            this.visitExpr(s.value);\n        }\n        else if (s instanceof Print) {\n            if (s.dest)\n                this.visitExpr(s.dest);\n            this.SEQExpr(s.values);\n        }\n        else if (s instanceof ForStatement) {\n            this.visitExpr(s.target);\n            this.visitExpr(s.iter);\n            this.SEQStmt(s.body);\n            if (s.orelse)\n                this.SEQStmt(s.orelse);\n        }\n        else if (s instanceof WhileStatement) {\n            this.visitExpr(s.test);\n            this.SEQStmt(s.body);\n            if (s.orelse)\n                this.SEQStmt(s.orelse);\n        }\n        else if (s instanceof IfStatement) {\n            this.visitExpr(s.test);\n            this.SEQStmt(s.consequent);\n            if (s.alternate) {\n                this.SEQStmt(s.alternate);\n            }\n        }\n        else if (s instanceof Raise) {\n            if (s.type) {\n                this.visitExpr(s.type);\n                if (s.inst) {\n                    this.visitExpr(s.inst);\n                    if (s.tback)\n                        this.visitExpr(s.tback);\n                }\n            }\n        }\n        else if (s instanceof TryExcept) {\n            this.SEQStmt(s.body);\n            this.SEQStmt(s.orelse);\n            this.visitExcepthandlers(s.handlers);\n        }\n        else if (s instanceof TryFinally) {\n            this.SEQStmt(s.body);\n            this.SEQStmt(s.finalbody);\n        }\n        else if (s instanceof Assert) {\n            this.visitExpr(s.test);\n            if (s.msg)\n                this.visitExpr(s.msg);\n        }\n        else if (s instanceof ImportStatement) {\n            var imps = s;\n            this.visitAlias(imps.names, imps.lineno);\n        }\n        else if (s instanceof ImportFrom) {\n            var impFrom = s;\n            this.visitAlias(impFrom.names, impFrom.lineno);\n        }\n        else if (s instanceof Exec) {\n            this.visitExpr(s.body);\n            if (s.globals) {\n                this.visitExpr(s.globals);\n                if (s.locals)\n                    this.visitExpr(s.locals);\n            }\n        }\n        else if (s instanceof Global) {\n            var nameslen = s.names.length;\n            for (var i = 0; i < nameslen; ++i) {\n                var name = mangleName(this.curClass, s.names[i]);\n                //              name = fixReservedNames(name);\n                var cur = this.cur.symFlags[name];\n                if (cur & (DEF_LOCAL | USE)) {\n                    if (cur & DEF_LOCAL) {\n                        throw syntaxError(\"name '\" + name + \"' is assigned to before global declaration\", this.fileName, s.lineno);\n                    }\n                    else {\n                        throw syntaxError(\"name '\" + name + \"' is used prior to global declaration\", this.fileName, s.lineno);\n                    }\n                }\n                this.addDef(name, DEF_GLOBAL, s.lineno);\n            }\n        }\n        else if (s instanceof Expr) {\n            this.visitExpr(s.value);\n        }\n        else if (s instanceof Pass || s instanceof BreakStatement || s instanceof ContinueStatement) {\n            // Do nothing.\n        }\n        else if (s instanceof WithStatement) {\n            var ws = s;\n            this.newTmpname(ws.lineno);\n            this.visitExpr(ws.context_expr);\n            if (ws.optional_vars) {\n                this.newTmpname(ws.lineno);\n                this.visitExpr(ws.optional_vars);\n            }\n            this.SEQStmt(ws.body);\n        }\n        else {\n            fail(\"Unhandled type \" + s.constructor.name + \" in visitStmt\");\n        }\n    };\n    SymbolTable.prototype.visitExpr = function (e) {\n        assert(e !== undefined, \"visitExpr called with undefined\");\n        if (e instanceof BoolOp) {\n            this.SEQExpr(e.values);\n        }\n        else if (e instanceof BinOp) {\n            this.visitExpr(e.left);\n            this.visitExpr(e.right);\n        }\n        else if (e instanceof UnaryOp) {\n            this.visitExpr(e.operand);\n        }\n        else if (e instanceof Lambda) {\n            this.addDef(\"lambda\", DEF_LOCAL, e.lineno);\n            if (e.args.defaults)\n                this.SEQExpr(e.args.defaults);\n            this.enterBlock(\"lambda\", FunctionBlock, e, e.lineno);\n            this.visitArguments(e.args, e.lineno);\n            this.visitExpr(e.body);\n            this.exitBlock();\n        }\n        else if (e instanceof IfExp) {\n            this.visitExpr(e.test);\n            this.visitExpr(e.body);\n            this.visitExpr(e.orelse);\n        }\n        else if (e instanceof Dict) {\n            this.SEQExpr(e.keys);\n            this.SEQExpr(e.values);\n        }\n        else if (e instanceof ListComp) {\n            this.newTmpname(e.lineno);\n            this.visitExpr(e.elt);\n            this.visitComprehension(e.generators, 0);\n        }\n        else if (e instanceof GeneratorExp) {\n            this.visitGenexp(e);\n        }\n        else if (e instanceof Yield) {\n            if (e.value)\n                this.visitExpr(e.value);\n            this.cur.generator = true;\n            if (this.cur.returnsValue) {\n                throw syntaxError(\"'return' with argument inside generator\", this.fileName);\n            }\n        }\n        else if (e instanceof Compare) {\n            this.visitExpr(e.left);\n            this.SEQExpr(e.comparators);\n        }\n        else if (e instanceof Call) {\n            this.visitExpr(e.func);\n            this.SEQExpr(e.args);\n            for (var i = 0; i < e.keywords.length; ++i)\n                this.visitExpr(e.keywords[i].value);\n            // print(JSON.stringify(e.starargs, null, 2));\n            // print(JSON.stringify(e.kwargs, null,2));\n            if (e.starargs)\n                this.visitExpr(e.starargs);\n            if (e.kwargs)\n                this.visitExpr(e.kwargs);\n        }\n        else if (e instanceof Num || e instanceof Str) {\n            // Do nothing.\n        }\n        else if (e instanceof Attribute) {\n            this.visitExpr(e.value);\n        }\n        else if (e instanceof Subscript) {\n            this.visitExpr(e.value);\n            this.visitSlice(e.slice);\n        }\n        else if (e instanceof Name) {\n            this.addDef(e.id, e.ctx === Load ? USE : DEF_LOCAL, e.lineno);\n        }\n        else if (e instanceof List || e instanceof Tuple) {\n            this.SEQExpr(e.elts);\n        }\n        else {\n            fail(\"Unhandled type \" + e.constructor.name + \" in visitExpr\");\n        }\n    };\n    SymbolTable.prototype.visitComprehension = function (lcs, startAt) {\n        var len = lcs.length;\n        for (var i = startAt; i < len; ++i) {\n            var lc = lcs[i];\n            this.visitExpr(lc.target);\n            this.visitExpr(lc.iter);\n            this.SEQExpr(lc.ifs);\n        }\n    };\n    /**\n     * This is probably not correct for names. What are they?\n     * @param {Array.<Object>} names\n     * @param {number} lineno\n     */\n    SymbolTable.prototype.visitAlias = function (names, lineno) {\n        /* Compute store_name, the name actually bound by the import\n            operation.  It is diferent than a->name when a->name is a\n            dotted package name (e.g. spam.eggs)\n        */\n        for (var i = 0; i < names.length; ++i) {\n            var a = names[i];\n            // DGH: The RHS used to be Python strings.\n            var name = a.asname === null ? a.name : a.asname;\n            var storename = name;\n            var dot = name.indexOf('.');\n            if (dot !== -1)\n                storename = name.substr(0, dot);\n            if (name !== \"*\") {\n                this.addDef(storename, DEF_IMPORT, lineno);\n            }\n            else {\n                if (this.cur.blockType !== ModuleBlock) {\n                    throw syntaxError(\"import * only allowed at module level\", this.fileName);\n                }\n            }\n        }\n    };\n    /**\n     *\n     */\n    SymbolTable.prototype.visitGenexp = function (e) {\n        var outermost = e.generators[0];\n        // outermost is evaled in current scope\n        this.visitExpr(outermost.iter);\n        this.enterBlock(\"genexpr\", FunctionBlock, e, e.lineno);\n        this.cur.generator = true;\n        this.addDef(\".0\", DEF_PARAM, e.lineno);\n        this.visitExpr(outermost.target);\n        this.SEQExpr(outermost.ifs);\n        this.visitComprehension(e.generators, 1);\n        this.visitExpr(e.elt);\n        this.exitBlock();\n    };\n    SymbolTable.prototype.visitExcepthandlers = function (handlers) {\n        for (var i = 0, eh; eh = handlers[i]; ++i) {\n            if (eh.type)\n                this.visitExpr(eh.type);\n            if (eh.name)\n                this.visitExpr(eh.name);\n            this.SEQStmt(eh.body);\n        }\n    };\n    /**\n     * @param ste The Symbol Table Scope.\n     */\n    SymbolTable.prototype.analyzeBlock = function (ste, bound, free, global) {\n        var local = {};\n        var scope = {};\n        var newglobal = {};\n        var newbound = {};\n        var newfree = {};\n        if (ste.blockType === ClassBlock) {\n            dictUpdate(newglobal, global);\n            if (bound)\n                dictUpdate(newbound, bound);\n        }\n        for (var name_1 in ste.symFlags) {\n            if (ste.symFlags.hasOwnProperty(name_1)) {\n                var flags = ste.symFlags[name_1];\n                this.analyzeName(ste, scope, name_1, flags, bound, local, free, global);\n            }\n        }\n        if (ste.blockType !== ClassBlock) {\n            if (ste.blockType === FunctionBlock)\n                dictUpdate(newbound, local);\n            if (bound)\n                dictUpdate(newbound, bound);\n            dictUpdate(newglobal, global);\n        }\n        var allfree = {};\n        var childlen = ste.children.length;\n        for (var i = 0; i < childlen; ++i) {\n            var c = ste.children[i];\n            this.analyzeChildBlock(c, newbound, newfree, newglobal, allfree);\n            if (c.hasFree || c.childHasFree)\n                ste.childHasFree = true;\n        }\n        dictUpdate(newfree, allfree);\n        if (ste.blockType === FunctionBlock)\n            this.analyzeCells(scope, newfree);\n        this.updateSymbols(ste.symFlags, scope, bound, newfree, ste.blockType === ClassBlock);\n        dictUpdate(free, newfree);\n    };\n    SymbolTable.prototype.analyzeChildBlock = function (entry, bound, free, global, childFree) {\n        var tempBound = {};\n        dictUpdate(tempBound, bound);\n        var tempFree = {};\n        dictUpdate(tempFree, free);\n        var tempGlobal = {};\n        dictUpdate(tempGlobal, global);\n        this.analyzeBlock(entry, tempBound, tempFree, tempGlobal);\n        dictUpdate(childFree, tempFree);\n    };\n    SymbolTable.prototype.analyzeCells = function (scope, free) {\n        for (var name_2 in scope) {\n            if (scope.hasOwnProperty(name_2)) {\n                var flags = scope[name_2];\n                if (flags !== LOCAL)\n                    continue;\n                if (free[name_2] === undefined)\n                    continue;\n                scope[name_2] = CELL;\n                delete free[name_2];\n            }\n        }\n    };\n    /**\n     * store scope info back into the st symbols dict. symbols is modified,\n     * others are not.\n     */\n    SymbolTable.prototype.updateSymbols = function (symbols, scope, bound, free, classflag) {\n        for (var name_3 in symbols) {\n            if (symbols.hasOwnProperty(name_3)) {\n                var flags = symbols[name_3];\n                var w = scope[name_3];\n                flags |= w << SCOPE_OFF;\n                symbols[name_3] = flags;\n            }\n        }\n        var freeValue = FREE << SCOPE_OFF;\n        for (var name_4 in free) {\n            if (free.hasOwnProperty(name_4)) {\n                var o = symbols[name_4];\n                if (o !== undefined) {\n                    // it could be a free variable in a method of the class that has\n                    // the same name as a local or global in the class scope\n                    if (classflag && (o & (DEF_BOUND | DEF_GLOBAL))) {\n                        var i = o | DEF_FREE_CLASS;\n                        symbols[name_4] = i;\n                    }\n                    // else it's not free, probably a cell\n                    continue;\n                }\n                if (bound[name_4] === undefined)\n                    continue;\n                symbols[name_4] = freeValue;\n            }\n        }\n    };\n    /**\n     * @param {Object} ste The Symbol Table Scope.\n     * @param {string} name\n     */\n    SymbolTable.prototype.analyzeName = function (ste, dict, name, flags, bound, local, free, global) {\n        if (flags & DEF_GLOBAL) {\n            if (flags & DEF_PARAM)\n                throw syntaxError(\"name '\" + name + \"' is local and global\", this.fileName, ste.lineno);\n            dict[name] = GLOBAL_EXPLICIT;\n            global[name] = null;\n            if (bound && bound[name] !== undefined)\n                delete bound[name];\n            return;\n        }\n        if (flags & DEF_BOUND) {\n            dict[name] = LOCAL;\n            local[name] = null;\n            delete global[name];\n            return;\n        }\n        if (bound && bound[name] !== undefined) {\n            dict[name] = FREE;\n            ste.hasFree = true;\n            free[name] = null;\n        }\n        else if (global && global[name] !== undefined) {\n            dict[name] = GLOBAL_IMPLICIT;\n        }\n        else {\n            if (ste.isNested)\n                ste.hasFree = true;\n            dict[name] = GLOBAL_IMPLICIT;\n        }\n    };\n    SymbolTable.prototype.analyze = function () {\n        var free = {};\n        var global = {};\n        this.analyzeBlock(this.top, null, free, global);\n    };\n    return SymbolTable;\n}());\nexport { SymbolTable };\n","import { assert } from './asserts';\nimport { isDef, isNumber, isString } from './base';\n/**\n * @param message\n * @param fileName\n * @param lineNumber\n */\nexport function syntaxError(message, fileName, lineNumber) {\n    assert(isString(message), \"message must be a string\");\n    assert(isString(fileName), \"fileName must be a string\");\n    if (isDef(lineNumber)) {\n        assert(isNumber(lineNumber), \"lineNumber must be a number\");\n    }\n    var e = new SyntaxError(message /*, fileName*/);\n    e['fileName'] = fileName;\n    if (typeof lineNumber === 'number') {\n        e['lineNumber'] = lineNumber;\n    }\n    return e;\n}\n","import { assert } from './asserts';\nimport { Symbol } from './Symbol';\nimport { DEF_PARAM } from './SymbolConstants';\nimport { DEF_BOUND } from './SymbolConstants';\nimport { FREE } from './SymbolConstants';\nimport { FunctionBlock } from './SymbolConstants';\nimport { GLOBAL_EXPLICIT } from './SymbolConstants';\nimport { GLOBAL_IMPLICIT } from './SymbolConstants';\nimport { SCOPE_MASK } from './SymbolConstants';\nimport { SCOPE_OFF } from './SymbolConstants';\nvar astScopeCounter = 0;\nvar SymbolTableScope = (function () {\n    /**\n     * @param table\n     * @param name\n     * @param type\n     * @param lineno\n     */\n    function SymbolTableScope(table, name, blockType, ast, lineno) {\n        this.symFlags = {};\n        this.name = name;\n        this.varnames = [];\n        /**\n         *\n         */\n        this.children = [];\n        this.blockType = blockType;\n        this.isNested = false;\n        this.hasFree = false;\n        this.childHasFree = false; // true if child block has free vars including free refs to globals\n        this.generator = false;\n        this.varargs = false;\n        this.varkeywords = false;\n        this.returnsValue = false;\n        this.lineno = lineno;\n        this.table = table;\n        if (table.cur && (table.cur.isNested || table.cur.blockType === FunctionBlock))\n            this.isNested = true;\n        ast.scopeId = astScopeCounter++;\n        table.stss[ast.scopeId] = this;\n        // cache of Symbols for returning to other parts of code\n        this.symbols = {};\n    }\n    SymbolTableScope.prototype.get_type = function () { return this.blockType; };\n    SymbolTableScope.prototype.get_name = function () { return this.name; };\n    SymbolTableScope.prototype.get_lineno = function () { return this.lineno; };\n    SymbolTableScope.prototype.is_nested = function () { return this.isNested; };\n    SymbolTableScope.prototype.has_children = function () { return this.children.length > 0; };\n    SymbolTableScope.prototype.get_identifiers = function () { return this._identsMatching(function (x) { return true; }); };\n    SymbolTableScope.prototype.lookup = function (name) {\n        var sym;\n        if (!this.symbols.hasOwnProperty(name)) {\n            var flags = this.symFlags[name];\n            var namespaces = this.__check_children(name);\n            sym = this.symbols[name] = new Symbol(name, flags, namespaces);\n        }\n        else {\n            sym = this.symbols[name];\n        }\n        return sym;\n    };\n    SymbolTableScope.prototype.__check_children = function (name) {\n        // print(\"  check_children:\", name);\n        var ret = [];\n        for (var i = 0; i < this.children.length; ++i) {\n            var child = this.children[i];\n            if (child.name === name)\n                ret.push(child);\n        }\n        return ret;\n    };\n    SymbolTableScope.prototype._identsMatching = function (f) {\n        var ret = [];\n        for (var k in this.symFlags) {\n            if (this.symFlags.hasOwnProperty(k)) {\n                if (f(this.symFlags[k]))\n                    ret.push(k);\n            }\n        }\n        ret.sort();\n        return ret;\n    };\n    SymbolTableScope.prototype.get_parameters = function () {\n        assert(this.get_type() === 'function', \"get_parameters only valid for function scopes\");\n        if (!this._funcParams)\n            this._funcParams = this._identsMatching(function (x) { return !!(x & DEF_PARAM); });\n        return this._funcParams;\n    };\n    SymbolTableScope.prototype.get_locals = function () {\n        assert(this.get_type() === 'function', \"get_locals only valid for function scopes\");\n        if (!this._funcLocals)\n            this._funcLocals = this._identsMatching(function (x) { return !!(x & DEF_BOUND); });\n        return this._funcLocals;\n    };\n    SymbolTableScope.prototype.get_globals = function () {\n        assert(this.get_type() === 'function', \"get_globals only valid for function scopes\");\n        if (!this._funcGlobals) {\n            this._funcGlobals = this._identsMatching(function (x) {\n                var masked = (x >> SCOPE_OFF) & SCOPE_MASK;\n                return masked === GLOBAL_IMPLICIT || masked === GLOBAL_EXPLICIT;\n            });\n        }\n        return this._funcGlobals;\n    };\n    SymbolTableScope.prototype.get_frees = function () {\n        assert(this.get_type() === 'function', \"get_frees only valid for function scopes\");\n        if (!this._funcFrees) {\n            this._funcFrees = this._identsMatching(function (x) {\n                var masked = (x >> SCOPE_OFF) & SCOPE_MASK;\n                return masked === FREE;\n            });\n        }\n        return this._funcFrees;\n    };\n    SymbolTableScope.prototype.get_methods = function () {\n        assert(this.get_type() === 'class', \"get_methods only valid for class scopes\");\n        if (!this._classMethods) {\n            // todo; uniq?\n            var all = [];\n            for (var i = 0; i < this.children.length; ++i)\n                all.push(this.children[i].name);\n            all.sort();\n            this._classMethods = all;\n        }\n        return this._classMethods;\n    };\n    SymbolTableScope.prototype.getScope = function (name) {\n        // print(\"getScope\");\n        // for (var k in this.symFlags) print(k);\n        var v = this.symFlags[name];\n        if (v === undefined)\n            return 0;\n        return (v >> SCOPE_OFF) & SCOPE_MASK;\n    };\n    return SymbolTableScope;\n}());\nexport { SymbolTableScope };\n","import { DEF_BOUND } from './SymbolConstants';\nimport { DEF_IMPORT } from './SymbolConstants';\nimport { DEF_LOCAL } from './SymbolConstants';\nimport { DEF_PARAM } from './SymbolConstants';\nimport { FREE } from './SymbolConstants';\nimport { GLOBAL_EXPLICIT } from './SymbolConstants';\nimport { GLOBAL_IMPLICIT } from './SymbolConstants';\nimport { SCOPE_MASK } from './SymbolConstants';\nimport { SCOPE_OFF } from './SymbolConstants';\nimport { USE } from './SymbolConstants';\nvar Symbol = (function () {\n    /**\n     * @param name\n     * @param flags\n     * @param namespaces\n     */\n    function Symbol(name, flags, namespaces) {\n        this.__name = name;\n        this.__flags = flags;\n        this.__scope = (flags >> SCOPE_OFF) & SCOPE_MASK;\n        this.__namespaces = namespaces || [];\n    }\n    Symbol.prototype.get_name = function () { return this.__name; };\n    Symbol.prototype.is_referenced = function () { return !!(this.__flags & USE); };\n    Symbol.prototype.is_parameter = function () {\n        return !!(this.__flags & DEF_PARAM);\n    };\n    Symbol.prototype.is_global = function () {\n        return this.__scope === GLOBAL_IMPLICIT || this.__scope === GLOBAL_EXPLICIT;\n    };\n    Symbol.prototype.is_declared_global = function () {\n        return this.__scope === GLOBAL_EXPLICIT;\n    };\n    Symbol.prototype.is_local = function () {\n        return !!(this.__flags & DEF_BOUND);\n    };\n    Symbol.prototype.is_free = function () { return this.__scope === FREE; };\n    Symbol.prototype.is_imported = function () { return !!(this.__flags & DEF_IMPORT); };\n    Symbol.prototype.is_assigned = function () { return !!(this.__flags & DEF_LOCAL); };\n    Symbol.prototype.is_namespace = function () { return this.__namespaces && this.__namespaces.length > 0; };\n    Symbol.prototype.get_namespaces = function () { return this.__namespaces; };\n    return Symbol;\n}());\nexport { Symbol };\n","/* Flags for def-use information */\n/* Flags for def-use information */ export var DEF_GLOBAL = 1; /* global stmt */\n/* global stmt */ export var DEF_LOCAL = 2; /* assignment in code block */\n/* assignment in code block */ export var DEF_PARAM = 2 << 1; /* formal parameter */\n/* formal parameter */ export var USE = 2 << 2; /* name is used */\n/* name is used */ export var DEF_STAR = 2 << 3; /* parameter is star arg */\n/* parameter is star arg */ export var DEF_DOUBLESTAR = 2 << 4; /* parameter is star-star arg */\n/* parameter is star-star arg */ export var DEF_INTUPLE = 2 << 5; /* name defined in tuple in parameters */\n/* name defined in tuple in parameters */ export var DEF_FREE = 2 << 6; /* name used but not defined in nested block */\n/* name used but not defined in nested block */ export var DEF_FREE_GLOBAL = 2 << 7; /* free variable is actually implicit global */\n/* free variable is actually implicit global */ export var DEF_FREE_CLASS = 2 << 8; /* free variable from class's method */\n/* free variable from class's method */ export var DEF_IMPORT = 2 << 9; /* assignment occurred via import */\n/* assignment occurred via import */ export var DEF_BOUND = (DEF_LOCAL | DEF_PARAM | DEF_IMPORT);\n/* GLOBAL_EXPLICIT and GLOBAL_IMPLICIT are used internally by the symbol\n   table.  GLOBAL is returned from PyST_GetScope() for either of them.\n   It is stored in ste_symbols at bits 12-14.\n*/\nexport var SCOPE_OFF = 11;\nexport var SCOPE_MASK = 7;\nexport var LOCAL = 1;\nexport var GLOBAL_EXPLICIT = 2;\nexport var GLOBAL_IMPLICIT = 3;\nexport var FREE = 4;\nexport var CELL = 5;\n/* The following three names are used for the ste_unoptimized bit field */\nexport var OPT_IMPORT_STAR = 1;\nexport var OPT_EXEC = 2;\nexport var OPT_BARE_EXEC = 4;\nexport var OPT_TOPLEVEL = 8; /* top-level names, including eval and exec */\n/* top-level names, including eval and exec */ export var GENERATOR = 2;\nexport var GENERATOR_EXPRESSION = 2;\nexport var ModuleBlock = 'module';\nexport var FunctionBlock = 'function';\nexport var ClassBlock = 'class';\n","/**\n * @param {string|null} priv\n * @param {string} name\n */\n/**\n * @param {string|null} priv\n * @param {string} name\n */ export function mangleName(priv, name) {\n    var strpriv = null;\n    if (priv === null || name === null || name.charAt(0) !== '_' || name.charAt(1) !== '_')\n        return name;\n    // don't mangle __id__\n    if (name.charAt(name.length - 1) === '_' && name.charAt(name.length - 2) === '_')\n        return name;\n    // don't mangle classes that are all _ (obscure much?)\n    strpriv = priv;\n    strpriv.replace(/_/g, '');\n    if (strpriv === '')\n        return name;\n    strpriv = priv;\n    strpriv.replace(/^_*/, '');\n    strpriv = '_' + strpriv + name;\n    return strpriv;\n}\n","export function dictUpdate(a, b) {\n    for (var kb in b) {\n        if (b.hasOwnProperty(kb)) {\n            a[kb] = b[kb];\n        }\n    }\n}\n","/**\n * TODO: Reserved for whom?\n */\n/**\n * TODO: Reserved for whom?\n */ export var reservedWords = {\n    'abstract': true,\n    'as': true,\n    'boolean': true,\n    'break': true,\n    'byte': true,\n    'case': true,\n    'catch': true,\n    'char': true,\n    'class': true,\n    'continue': true,\n    'const': true,\n    'debugger': true,\n    'default': true,\n    'delete': true,\n    'do': true,\n    'double': true,\n    'else': true,\n    'enum': true,\n    'export': true,\n    'extends': true,\n    'false': true,\n    'final': true,\n    'finally': true,\n    'float': true,\n    'for': true,\n    'function': true,\n    'goto': true,\n    'if': true,\n    'implements': true,\n    'import': true,\n    'in': true,\n    'instanceof': true,\n    'int': true,\n    'interface': true,\n    'is': true,\n    'long': true,\n    'namespace': true,\n    'native': true,\n    'new': true,\n    'null': true,\n    'package': true,\n    'private': true,\n    'protected': true,\n    'public': true,\n    'return': true,\n    'short': true,\n    'static': true,\n    'super': false,\n    'switch': true,\n    'synchronized': true,\n    'this': true,\n    'throw': true,\n    'throws': true,\n    'transient': true,\n    'true': true,\n    'try': true,\n    'typeof': true,\n    'use': true,\n    'var': true,\n    'void': true,\n    'volatile': true,\n    'while': true,\n    'with': true\n};\n","/**\n * TODO: Reserved for whom?\n */\n/**\n * TODO: Reserved for whom?\n */ export var reservedNames = {\n    '__defineGetter__': true,\n    '__defineSetter__': true,\n    'apply': true,\n    'call': true,\n    'eval': true,\n    'hasOwnProperty': true,\n    'isPrototypeOf': true,\n    '__lookupGetter__': true,\n    '__lookupSetter__': true,\n    '__noSuchMethod__': true,\n    'propertyIsEnumerable': true,\n    'toSource': true,\n    'toLocaleString': true,\n    'toString': true,\n    'unwatch': true,\n    'valueOf': true,\n    'watch': true,\n    'length': true\n};\n","import { assert } from './asserts';\nimport { Add } from './types';\n// TODO: Conventions\nimport { Alias } from './types';\nimport { Arguments } from './types';\nimport { And } from './types';\nimport { Assert } from './types';\nimport { Assign } from './types';\nimport { Attribute } from './types';\nimport { AugAssign } from './types';\nimport { AugLoad } from './types';\nimport { AugStore } from './types';\nimport { BinOp } from './types';\nimport { BitAnd } from './types';\nimport { BitOr } from './types';\nimport { BitXor } from './types';\nimport { BoolOp } from './types';\nimport { BreakStatement } from './types';\nimport { Call } from './types';\nimport { ClassDef } from './types';\nimport { Compare } from './types';\nimport { Comprehension } from './types';\nimport { ContinueStatement } from './types';\nimport { Del } from './types';\nimport { DeleteExpression } from './types';\nimport { Dict } from './types';\nimport { Div } from './types';\nimport { Ellipsis } from './types';\nimport { Eq } from './types';\nimport { ExceptHandler } from './types';\nimport { Exec } from './types';\nimport { Expr } from './types';\nimport { ExtSlice } from './types';\nimport { FloorDiv } from './types';\nimport { ForStatement } from './types';\nimport { FunctionDef } from './types';\nimport { GeneratorExp } from './types';\nimport { Global } from './types';\nimport { Gt } from './types';\nimport { GtE } from './types';\n// FIXME: Convention\nimport { Keyword } from './types';\nimport { IfStatement } from './types';\nimport { IfExp } from './types';\nimport { ImportStatement } from './types';\nimport { ImportFrom } from './types';\nimport { Index } from './types';\nimport { In } from './types';\nimport { Invert } from './types';\nimport { Is } from './types';\nimport { IsNot } from './types';\nimport { Lambda } from './types';\nimport { List } from './types';\nimport { ListComp } from './types';\nimport { Load } from './types';\nimport { LShift } from './types';\nimport { Lt } from './types';\nimport { LtE } from './types';\nimport { Mod } from './types';\nimport { Module } from './types';\nimport { Mult } from './types';\nimport { Name } from './types';\nimport { NonLocal } from './types';\nimport { Not } from './types';\nimport { NotEq } from './types';\nimport { NotIn } from './types';\nimport { Num } from './types';\nimport { Or } from './types';\nimport { Param } from './types';\nimport { Pass } from './types';\nimport { Pow } from './types';\nimport { Print } from './types';\nimport { Raise } from './types';\nimport { ReturnStatement } from './types';\nimport { RShift } from './types';\nimport { Slice } from './types';\nimport { Store } from './types';\nimport { Str } from './types';\nimport { Sub } from './types';\nimport { Subscript } from './types';\nimport { TryExcept } from './types';\nimport { TryFinally } from './types';\nimport { Tuple } from './types';\nimport { UAdd } from './types';\nimport { UnaryOp } from './types';\nimport { USub } from './types';\nimport { WhileStatement } from './types';\nimport { WithStatement } from './types';\nimport { Yield } from './types';\nimport { isArrayLike, isNumber, isString } from './base';\nimport { ParseTables } from './tables';\nimport { Tokens as TOK } from './Tokens';\nimport { floatAST, intAST, longAST } from './numericLiteral';\n//\n// This is pretty much a straight port of ast.c from CPython 2.6.5.\n//\n// The previous version was easier to work with and more JS-ish, but having a\n// somewhat different ast structure than cpython makes testing more difficult.\n//\n// This way, we can use a dump from the ast module on any arbitrary python\n// code and know that we're the same up to ast level, at least.\n//\nvar SYM = ParseTables.sym;\n/**\n *\n */\nvar LONG_THRESHOLD = Math.pow(2, 53);\n/**\n * @param message\n * @param fileName\n * @param lineNumber\n */\nfunction syntaxError(message, fileName, lineNumber) {\n    assert(isString(message), \"message must be a string\");\n    assert(isString(fileName), \"fileName must be a string\");\n    assert(isNumber(lineNumber), \"lineNumber must be a number\");\n    var e = new SyntaxError(message /*, fileName*/);\n    e['fileName'] = fileName;\n    e['lineNumber'] = lineNumber;\n    return e;\n}\nvar Compiling = (function () {\n    function Compiling(encoding, filename) {\n        this.c_encoding = encoding;\n        this.c_filename = filename;\n    }\n    return Compiling;\n}());\n/**\n * Returns the number of children in the specified node.\n */\nfunction NCH(n) {\n    assert(n !== undefined);\n    if (Array.isArray(n.children)) {\n        return n.children.length;\n    }\n    else {\n        return 0;\n    }\n}\nfunction CHILD(n, i) {\n    assert(n !== undefined);\n    assert(i !== undefined);\n    if (n.children) {\n        return n.children[i];\n    }\n    else {\n        throw new Error(\"node does not have any children\");\n    }\n}\nfunction REQ(n, type) {\n    assert(n.type === type, \"node wasn't expected type\");\n}\nfunction strobj(s) {\n    assert(typeof s === \"string\", \"expecting string, got \" + (typeof s));\n    // This previously constructed the runtime representation.\n    // That may have had an string intern side effect?\n    return s;\n}\nfunction numStmts(n) {\n    switch (n.type) {\n        case SYM.single_input:\n            if (CHILD(n, 0).type === TOK.T_NEWLINE)\n                return 0;\n            else\n                return numStmts(CHILD(n, 0));\n        case SYM.file_input:\n            var cnt = 0;\n            for (var i = 0; i < NCH(n); ++i) {\n                var ch = CHILD(n, i);\n                if (ch.type === SYM.stmt) {\n                    cnt += numStmts(ch);\n                }\n            }\n            return cnt;\n        case SYM.stmt:\n            return numStmts(CHILD(n, 0));\n        case SYM.compound_stmt:\n            return 1;\n        case SYM.simple_stmt:\n            return Math.floor(NCH(n) / 2); // div 2 is to remove count of ;s\n        case SYM.suite:\n            if (NCH(n) === 1)\n                return numStmts(CHILD(n, 0));\n            else {\n                var cnt_1 = 0;\n                for (var i = 2; i < NCH(n) - 1; ++i) {\n                    cnt_1 += numStmts(CHILD(n, i));\n                }\n                return cnt_1;\n            }\n        default: {\n            throw new Error(\"Non-statement found\");\n        }\n    }\n}\nfunction forbiddenCheck(c, n, x, lineno) {\n    if (x === \"None\")\n        throw syntaxError(\"assignment to None\", c.c_filename, lineno);\n    if (x === \"True\" || x === \"False\")\n        throw syntaxError(\"assignment to True or False is forbidden\", c.c_filename, lineno);\n}\n/**\n * Set the context ctx for e, recursively traversing e.\n *\n * Only sets context for expr kinds that can appear in assignment context as\n * per the asdl file.\n */\nfunction setContext(c, e, ctx, n) {\n    assert(ctx !== AugStore && ctx !== AugLoad);\n    var s = null;\n    var exprName = null;\n    if (e instanceof Attribute) {\n        if (ctx === Store)\n            forbiddenCheck(c, n, e.attr, n.lineno);\n        e.ctx = ctx;\n    }\n    else if (e instanceof Name) {\n        if (ctx === Store)\n            forbiddenCheck(c, n, /*e.attr*/ void 0, n.lineno);\n        e.ctx = ctx;\n    }\n    else if (e instanceof Subscript) {\n        e.ctx = ctx;\n    }\n    else if (e instanceof List) {\n        e.ctx = ctx;\n        s = e.elts;\n    }\n    else if (e instanceof Tuple) {\n        if (e.elts.length === 0) {\n            throw syntaxError(\"can't assign to ()\", c.c_filename, n.lineno);\n        }\n        e.ctx = ctx;\n        s = e.elts;\n    }\n    else if (e instanceof Lambda) {\n        exprName = \"lambda\";\n    }\n    else if (e instanceof Call) {\n        exprName = \"function call\";\n    }\n    else if (e instanceof BoolOp) {\n        exprName = \"operator\";\n    }\n    else {\n        switch (e.constructor) {\n            case BoolOp:\n            case BinOp:\n            case UnaryOp:\n                exprName = \"operator\";\n                break;\n            case GeneratorExp:\n                exprName = \"generator expression\";\n                break;\n            case Yield:\n                exprName = \"yield expression\";\n                break;\n            case ListComp:\n                exprName = \"list comprehension\";\n                break;\n            case Dict:\n            case Num:\n            case Str:\n                exprName = \"literal\";\n                break;\n            case Compare:\n                exprName = \"comparison expression\";\n                break;\n            case IfExp:\n                exprName = \"conditional expression\";\n                break;\n            default: {\n                throw new Error(\"unhandled expression in assignment\");\n            }\n        }\n    }\n    if (exprName) {\n        throw syntaxError(\"can't \" + (ctx === Store ? \"assign to\" : \"delete\") + \" \" + exprName, c.c_filename, n.lineno);\n    }\n    if (s) {\n        for (var i = 0; i < s.length; ++i) {\n            setContext(c, s[i], ctx, n);\n        }\n    }\n}\nvar operatorMap = {};\n(function () {\n    operatorMap[TOK.T_VBAR] = BitOr;\n    operatorMap[TOK.T_VBAR] = BitOr;\n    operatorMap[TOK.T_CIRCUMFLEX] = BitXor;\n    operatorMap[TOK.T_AMPER] = BitAnd;\n    operatorMap[TOK.T_LEFTSHIFT] = LShift;\n    operatorMap[TOK.T_RIGHTSHIFT] = RShift;\n    operatorMap[TOK.T_PLUS] = Add;\n    operatorMap[TOK.T_MINUS] = Sub;\n    operatorMap[TOK.T_STAR] = Mult;\n    operatorMap[TOK.T_SLASH] = Div;\n    operatorMap[TOK.T_DOUBLESLASH] = FloorDiv;\n    operatorMap[TOK.T_PERCENT] = Mod;\n}());\nfunction getOperator(n) {\n    assert(operatorMap[n.type] !== undefined);\n    return operatorMap[n.type];\n}\nfunction astForCompOp(c, n) {\n    // comp_op: '<'|'>'|'=='|'>='|'<='|'<>'|'!='|'in'|'not' 'in'|'is' |'is' 'not'\n    REQ(n, SYM.comp_op);\n    if (NCH(n) === 1) {\n        n = CHILD(n, 0);\n        switch (n.type) {\n            case TOK.T_LESS: return Lt;\n            case TOK.T_GREATER: return Gt;\n            case TOK.T_EQEQUAL: return Eq;\n            case TOK.T_LESSEQUAL: return LtE;\n            case TOK.T_GREATEREQUAL: return GtE;\n            case TOK.T_NOTEQUAL: return NotEq;\n            case TOK.T_NAME:\n                if (n.value === \"in\")\n                    return In;\n                if (n.value === \"is\")\n                    return Is;\n        }\n    }\n    else if (NCH(n) === 2) {\n        if (CHILD(n, 0).type === TOK.T_NAME) {\n            if (CHILD(n, 1).value === \"in\")\n                return NotIn;\n            if (CHILD(n, 0).value === \"is\")\n                return IsNot;\n        }\n    }\n    throw new Error(\"invalid comp_op\");\n}\nfunction seqForTestlist(c, n) {\n    /* testlist: test (',' test)* [','] */\n    assert(n.type === SYM.testlist ||\n        n.type === SYM.listmaker ||\n        n.type === SYM.testlist_gexp ||\n        n.type === SYM.testlist_safe ||\n        n.type === SYM.testlist1);\n    var seq = [];\n    for (var i = 0; i < NCH(n); i += 2) {\n        assert(CHILD(n, i).type === SYM.IfExpr || CHILD(n, i).type === SYM.old_test);\n        seq[i / 2] = astForExpr(c, CHILD(n, i));\n    }\n    return seq;\n}\nfunction astForSuite(c, n) {\n    /* suite: simple_stmt | NEWLINE INDENT stmt+ DEDENT */\n    REQ(n, SYM.suite);\n    var seq = [];\n    var pos = 0;\n    var ch;\n    if (CHILD(n, 0).type === SYM.simple_stmt) {\n        n = CHILD(n, 0);\n        /* simple_stmt always ends with an NEWLINE and may have a trailing\n            * SEMI. */\n        var end = NCH(n) - 1;\n        if (CHILD(n, end - 1).type === TOK.T_SEMI) {\n            end -= 1;\n        }\n        // by 2 to skip\n        for (var i = 0; i < end; i += 2) {\n            seq[pos++] = astForStmt(c, CHILD(n, i));\n        }\n    }\n    else {\n        for (var i = 2; i < NCH(n) - 1; ++i) {\n            ch = CHILD(n, i);\n            REQ(ch, SYM.stmt);\n            var num = numStmts(ch);\n            if (num === 1) {\n                // small_stmt or compound_stmt w/ only 1 child\n                seq[pos++] = astForStmt(c, ch);\n            }\n            else {\n                ch = CHILD(ch, 0);\n                REQ(ch, SYM.simple_stmt);\n                for (var j = 0; j < NCH(ch); j += 2) {\n                    if (NCH(CHILD(ch, j)) === 0) {\n                        assert(j + 1 === NCH(ch));\n                        break;\n                    }\n                    seq[pos++] = astForStmt(c, CHILD(ch, j));\n                }\n            }\n        }\n    }\n    assert(pos === numStmts(n));\n    return seq;\n}\nfunction astForExceptClause(c, exc, body) {\n    /* except_clause: 'except' [test [(',' | 'as') test]] */\n    REQ(exc, SYM.except_clause);\n    REQ(body, SYM.suite);\n    if (NCH(exc) === 1)\n        return new ExceptHandler(null, null, astForSuite(c, body), exc.lineno, exc.col_offset);\n    else if (NCH(exc) === 2)\n        return new ExceptHandler(astForExpr(c, CHILD(exc, 1)), null, astForSuite(c, body), exc.lineno, exc.col_offset);\n    else if (NCH(exc) === 4) {\n        var e = astForExpr(c, CHILD(exc, 3));\n        setContext(c, e, Store, CHILD(exc, 3));\n        return new ExceptHandler(astForExpr(c, CHILD(exc, 1)), e, astForSuite(c, body), exc.lineno, exc.col_offset);\n    }\n    else {\n        throw new Error(\"wrong number of children for except clause\");\n    }\n}\nfunction astForTryStmt(c, n) {\n    var nc = NCH(n);\n    var nexcept = (nc - 3) / 3;\n    var orelse = [];\n    var finally_ = null;\n    REQ(n, SYM.try_stmt);\n    var body = astForSuite(c, CHILD(n, 2));\n    if (CHILD(n, nc - 3).type === TOK.T_NAME) {\n        if (CHILD(n, nc - 3).value === \"finally\") {\n            if (nc >= 9 && CHILD(n, nc - 6).type === TOK.T_NAME) {\n                /* we can assume it's an \"else\",\n                    because nc >= 9 for try-else-finally and\n                    it would otherwise have a type of except_clause */\n                orelse = astForSuite(c, CHILD(n, nc - 4));\n                nexcept--;\n            }\n            finally_ = astForSuite(c, CHILD(n, nc - 1));\n            nexcept--;\n        }\n        else {\n            /* we can assume it's an \"else\",\n                otherwise it would have a type of except_clause */\n            orelse = astForSuite(c, CHILD(n, nc - 1));\n            nexcept--;\n        }\n    }\n    else if (CHILD(n, nc - 3).type !== SYM.except_clause) {\n        throw syntaxError(\"malformed 'try' statement\", c.c_filename, n.lineno);\n    }\n    if (nexcept > 0) {\n        var handlers = [];\n        for (var i = 0; i < nexcept; ++i)\n            handlers[i] = astForExceptClause(c, CHILD(n, 3 + i * 3), CHILD(n, 5 + i * 3));\n        var exceptSt = new TryExcept(body, handlers, orelse, n.lineno, n.col_offset);\n        if (!finally_)\n            return exceptSt;\n        /* if a 'finally' is present too, we nest the TryExcept within a\n            TryFinally to emulate try ... except ... finally */\n        body = [exceptSt];\n    }\n    assert(finally_ !== null);\n    return new TryFinally(body, finally_, n.lineno, n.col_offset);\n}\nfunction astForDottedName(c, n) {\n    REQ(n, SYM.dotted_name);\n    var lineno = n.lineno;\n    var col_offset = n.col_offset;\n    var id = strobj(CHILD(n, 0).value);\n    var e = new Name(id, Load, lineno, col_offset);\n    for (var i = 2; i < NCH(n); i += 2) {\n        id = strobj(CHILD(n, i).value);\n        e = new Attribute(e, id, Load, lineno, col_offset);\n    }\n    return e;\n}\nfunction astForDecorator(c, n) {\n    /* decorator: '@' dotted_name [ '(' [arglist] ')' ] NEWLINE */\n    REQ(n, SYM.decorator);\n    REQ(CHILD(n, 0), TOK.T_AT);\n    REQ(CHILD(n, NCH(n) - 1), TOK.T_NEWLINE);\n    var nameExpr = astForDottedName(c, CHILD(n, 1));\n    if (NCH(n) === 3)\n        return nameExpr;\n    else if (NCH(n) === 5)\n        return new Call(nameExpr, [], [], null, null, n.lineno, n.col_offset);\n    else\n        return astForCall(c, CHILD(n, 3), nameExpr);\n}\nfunction astForDecorators(c, n) {\n    REQ(n, SYM.decorators);\n    var decoratorSeq = [];\n    for (var i = 0; i < NCH(n); ++i) {\n        decoratorSeq[i] = astForDecorator(c, CHILD(n, i));\n    }\n    return decoratorSeq;\n}\nfunction astForDecorated(c, n) {\n    REQ(n, SYM.decorated);\n    var decoratorSeq = astForDecorators(c, CHILD(n, 0));\n    assert(CHILD(n, 1).type === SYM.funcdef || CHILD(n, 1).type === SYM.classdef);\n    var thing = null;\n    if (CHILD(n, 1).type === SYM.funcdef) {\n        thing = astForFuncdef(c, CHILD(n, 1), decoratorSeq);\n    }\n    else if (CHILD(n, 1).type === SYM.classdef) {\n        thing = astForClassdef(c, CHILD(n, 1), decoratorSeq);\n    }\n    else {\n        throw new Error(\"astForDecorated\");\n    }\n    if (thing) {\n        thing.lineno = n.lineno;\n        thing.col_offset = n.col_offset;\n    }\n    return thing;\n}\nfunction astForWithVar(c, n) {\n    REQ(n, SYM.with_var);\n    return astForExpr(c, CHILD(n, 1));\n}\nfunction astForWithStmt(c, n) {\n    /* with_stmt: 'with' test [ with_var ] ':' suite */\n    var suiteIndex = 3; // skip with, test, :\n    assert(n.type === SYM.with_stmt);\n    var contextExpr = astForExpr(c, CHILD(n, 1));\n    var optionalVars;\n    if (CHILD(n, 2).type === SYM.with_var) {\n        optionalVars = astForWithVar(c, CHILD(n, 2));\n        setContext(c, optionalVars, Store, n);\n        suiteIndex = 4;\n    }\n    return new WithStatement(contextExpr, optionalVars, astForSuite(c, CHILD(n, suiteIndex)), n.lineno, n.col_offset);\n}\nfunction astForExecStmt(c, n) {\n    var globals = null;\n    var locals = null;\n    var nchildren = NCH(n);\n    assert(nchildren === 2 || nchildren === 4 || nchildren === 6);\n    /* exec_stmt: 'exec' expr ['in' test [',' test]] */\n    REQ(n, SYM.exec_stmt);\n    var expr1 = astForExpr(c, CHILD(n, 1));\n    if (nchildren >= 4) {\n        globals = astForExpr(c, CHILD(n, 3));\n    }\n    if (nchildren === 6) {\n        locals = astForExpr(c, CHILD(n, 5));\n    }\n    return new Exec(expr1, globals, locals, n.lineno, n.col_offset);\n}\nfunction astForIfStmt(c, n) {\n    /* if_stmt: 'if' test ':' suite ('elif' test ':' suite)*\n        ['else' ':' suite]\n    */\n    REQ(n, SYM.if_stmt);\n    if (NCH(n) === 4)\n        return new IfStatement(astForExpr(c, CHILD(n, 1)), astForSuite(c, CHILD(n, 3)), [], n.lineno, n.col_offset);\n    var s = CHILD(n, 4).value;\n    var decider = s.charAt(2); // elSe or elIf\n    if (decider === 's') {\n        return new IfStatement(astForExpr(c, CHILD(n, 1)), astForSuite(c, CHILD(n, 3)), astForSuite(c, CHILD(n, 6)), n.lineno, n.col_offset);\n    }\n    else if (decider === 'i') {\n        var nElif = NCH(n) - 4;\n        var hasElse = false;\n        var orelse = [];\n        /* must reference the child nElif+1 since 'else' token is third, not\n            * fourth child from the end. */\n        if (CHILD(n, nElif + 1).type === TOK.T_NAME && CHILD(n, nElif + 1).value.charAt(2) === 's') {\n            hasElse = true;\n            nElif -= 3;\n        }\n        nElif /= 4;\n        if (hasElse) {\n            orelse = [\n                new IfStatement(astForExpr(c, CHILD(n, NCH(n) - 6)), astForSuite(c, CHILD(n, NCH(n) - 4)), astForSuite(c, CHILD(n, NCH(n) - 1)), CHILD(n, NCH(n) - 6).lineno, CHILD(n, NCH(n) - 6).col_offset)\n            ];\n            nElif--;\n        }\n        for (var i = 0; i < nElif; ++i) {\n            var off = 5 + (nElif - i - 1) * 4;\n            orelse = [\n                new IfStatement(astForExpr(c, CHILD(n, off)), astForSuite(c, CHILD(n, off + 2)), orelse, CHILD(n, off).lineno, CHILD(n, off).col_offset)\n            ];\n        }\n        return new IfStatement(astForExpr(c, CHILD(n, 1)), astForSuite(c, CHILD(n, 3)), orelse, n.lineno, n.col_offset);\n    }\n    throw new Error(\"unexpected token in 'if' statement\");\n}\nfunction astForExprlist(c, n, context) {\n    REQ(n, SYM.ExprList);\n    var seq = [];\n    for (var i = 0; i < NCH(n); i += 2) {\n        var e = astForExpr(c, CHILD(n, i));\n        seq[i / 2] = e;\n        if (context)\n            setContext(c, e, context, CHILD(n, i));\n    }\n    return seq;\n}\nfunction astForDelStmt(c, n) {\n    REQ(n, SYM.del_stmt);\n    return new DeleteExpression(astForExprlist(c, CHILD(n, 1), Del), n.lineno, n.col_offset);\n}\nfunction astForGlobalStmt(c, n) {\n    REQ(n, SYM.GlobalStmt);\n    var s = [];\n    for (var i = 1; i < NCH(n); i += 2) {\n        s[(i - 1) / 2] = strobj(CHILD(n, i).value);\n    }\n    return new Global(s, n.lineno, n.col_offset);\n}\nfunction astForNonLocalStmt(c, n) {\n    REQ(n, SYM.NonLocalStmt);\n    var s = [];\n    for (var i = 1; i < NCH(n); i += 2) {\n        s[(i - 1) / 2] = strobj(CHILD(n, i).value);\n    }\n    return new NonLocal(s, n.lineno, n.col_offset);\n}\nfunction astForAssertStmt(c, n) {\n    /* assert_stmt: 'assert' test [',' test] */\n    REQ(n, SYM.assert_stmt);\n    if (NCH(n) === 2) {\n        return new Assert(astForExpr(c, CHILD(n, 1)), null, n.lineno, n.col_offset);\n    }\n    else if (NCH(n) === 4) {\n        return new Assert(astForExpr(c, CHILD(n, 1)), astForExpr(c, CHILD(n, 3)), n.lineno, n.col_offset);\n    }\n    throw new Error(\"improper number of parts to assert stmt\");\n}\nfunction aliasForImportName(c, n) {\n    /*\n        import_as_name: NAME ['as' NAME]\n        dotted_as_name: dotted_name ['as' NAME]\n        dotted_name: NAME ('.' NAME)*\n    */\n    loop: while (true) {\n        switch (n.type) {\n            case SYM.import_as_name:\n                var str = null;\n                var name_1 = strobj(CHILD(n, 0).value);\n                if (NCH(n) === 3)\n                    str = CHILD(n, 2).value;\n                return new Alias(name_1, str == null ? null : strobj(str));\n            case SYM.dotted_as_name:\n                if (NCH(n) === 1) {\n                    n = CHILD(n, 0);\n                    continue loop;\n                }\n                else {\n                    var a = aliasForImportName(c, CHILD(n, 0));\n                    assert(!a.asname);\n                    a.asname = strobj(CHILD(n, 2).value);\n                    return a;\n                }\n            case SYM.dotted_name:\n                if (NCH(n) === 1)\n                    return new Alias(strobj(CHILD(n, 0).value), null);\n                else {\n                    // create a string of the form a.b.c\n                    var str_1 = '';\n                    for (var i = 0; i < NCH(n); i += 2)\n                        str_1 += CHILD(n, i).value + \".\";\n                    return new Alias(strobj(str_1.substr(0, str_1.length - 1)), null);\n                }\n            case TOK.T_STAR:\n                return new Alias(strobj(\"*\"), null);\n            default:\n                throw syntaxError(\"unexpected import name\", c.c_filename, n.lineno);\n        }\n    }\n}\nfunction astForImportStmt(c, n) {\n    REQ(n, SYM.import_stmt);\n    var lineno = n.lineno;\n    var col_offset = n.col_offset;\n    n = CHILD(n, 0);\n    if (n.type === SYM.import_name) {\n        n = CHILD(n, 1);\n        REQ(n, SYM.dotted_as_names);\n        var aliases = [];\n        for (var i = 0; i < NCH(n); i += 2)\n            aliases[i / 2] = aliasForImportName(c, CHILD(n, i));\n        return new ImportStatement(aliases, lineno, col_offset);\n    }\n    else if (n.type === SYM.import_from) {\n        var mod = null;\n        var ndots = 0;\n        var nchildren;\n        for (var idx = 1; idx < NCH(n); ++idx) {\n            if (CHILD(n, idx).type === SYM.dotted_name) {\n                mod = aliasForImportName(c, CHILD(n, idx));\n                idx++;\n                break;\n            }\n            else if (CHILD(n, idx).type !== TOK.T_DOT)\n                break;\n            ndots++;\n        }\n        ++idx; // skip the import keyword\n        switch (CHILD(n, idx).type) {\n            case TOK.T_STAR:\n                // from ... import\n                n = CHILD(n, idx);\n                nchildren = 1;\n                break;\n            case TOK.T_LPAR:\n                // from ... import (x, y, z)\n                n = CHILD(n, idx + 1);\n                nchildren = NCH(n);\n                break;\n            case SYM.import_as_names:\n                // from ... import x, y, z\n                n = CHILD(n, idx);\n                nchildren = NCH(n);\n                if (nchildren % 2 === 0)\n                    throw syntaxError(\"trailing comma not allowed without surrounding parentheses\", c.c_filename, n.lineno);\n                break;\n            default:\n                throw syntaxError(\"Unexpected node-type in from-import\", c.c_filename, n.lineno);\n        }\n        var aliases = [];\n        if (n.type === TOK.T_STAR)\n            aliases[0] = aliasForImportName(c, n);\n        else\n            for (var i = 0; i < NCH(n); i += 2) {\n                aliases[i / 2] = aliasForImportName(c, CHILD(n, i));\n            }\n        var modname = mod ? mod.name : \"\";\n        return new ImportFrom(strobj(modname), aliases, ndots, lineno, col_offset);\n    }\n    throw syntaxError(\"unknown import statement\", c.c_filename, n.lineno);\n}\nfunction astForTestlistGexp(c, n) {\n    assert(n.type === SYM.testlist_gexp || n.type === SYM.argument);\n    if (NCH(n) > 1 && CHILD(n, 1).type === SYM.gen_for)\n        return astForGenexp(c, n);\n    return astForTestlist(c, n);\n}\nfunction astForListcomp(c, n) {\n    function countListFors(c, n) {\n        var nfors = 0;\n        var ch = CHILD(n, 1);\n        count_list_for: while (true) {\n            nfors++;\n            REQ(ch, SYM.list_for);\n            if (NCH(ch) === 5)\n                ch = CHILD(ch, 4);\n            else\n                return nfors;\n            count_list_iter: while (true) {\n                REQ(ch, SYM.list_iter);\n                ch = CHILD(ch, 0);\n                if (ch.type === SYM.list_for)\n                    continue count_list_for;\n                else if (ch.type === SYM.list_if) {\n                    if (NCH(ch) === 3) {\n                        ch = CHILD(ch, 2);\n                        continue count_list_iter;\n                    }\n                    else\n                        return nfors;\n                }\n                break;\n            }\n            // FIXME: What does a break at the end of a function do?\n            break;\n        }\n        throw new Error(\"TODO: Should this be returning void 0?\");\n    }\n    function countListIfs(c, n) {\n        var nifs = 0;\n        while (true) {\n            REQ(n, SYM.list_iter);\n            if (CHILD(n, 0).type === SYM.list_for)\n                return nifs;\n            n = CHILD(n, 0);\n            REQ(n, SYM.list_if);\n            nifs++;\n            if (NCH(n) === 2)\n                return nifs;\n            n = CHILD(n, 2);\n        }\n    }\n    REQ(n, SYM.listmaker);\n    assert(NCH(n) > 1);\n    var elt = astForExpr(c, CHILD(n, 0));\n    var nfors = countListFors(c, n);\n    var listcomps = [];\n    var ch = CHILD(n, 1);\n    for (var i = 0; i < nfors; ++i) {\n        REQ(ch, SYM.list_for);\n        var forch = CHILD(ch, 1);\n        var t = astForExprlist(c, forch, Store);\n        var expression = astForTestlist(c, CHILD(ch, 3));\n        var lc;\n        if (NCH(forch) === 1)\n            lc = new Comprehension(t[0], expression, []);\n        else\n            lc = new Comprehension(new Tuple(t, Store, ch.lineno, ch.col_offset), expression, []);\n        if (NCH(ch) === 5) {\n            ch = CHILD(ch, 4);\n            var nifs = countListIfs(c, ch);\n            var ifs = [];\n            for (var j = 0; j < nifs; ++j) {\n                REQ(ch, SYM.list_iter);\n                ch = CHILD(ch, 0);\n                REQ(ch, SYM.list_if);\n                ifs[j] = astForExpr(c, CHILD(ch, 1));\n                if (NCH(ch) === 3)\n                    ch = CHILD(ch, 2);\n            }\n            if (ch.type === SYM.list_iter)\n                ch = CHILD(ch, 0);\n            lc.ifs = ifs;\n        }\n        listcomps[i] = lc;\n    }\n    return new ListComp(elt, listcomps, n.lineno, n.col_offset);\n}\nfunction astForUnaryExpr(c, n) {\n    if (CHILD(n, 0).type === TOK.T_MINUS && NCH(n) === 2) {\n        var pfactor = CHILD(n, 1);\n        if (pfactor.type === SYM.UnaryExpr && NCH(pfactor) === 1) {\n            var ppower = CHILD(pfactor, 0);\n            if (ppower.type === SYM.PowerExpr && NCH(ppower) === 1) {\n                var patom = CHILD(ppower, 0);\n                if (patom.type === SYM.AtomExpr) {\n                    var pnum = CHILD(patom, 0);\n                    if (pnum.type === TOK.T_NUMBER) {\n                        pnum.value = \"-\" + pnum.value;\n                        return astForAtomExpr(c, patom);\n                    }\n                }\n            }\n        }\n    }\n    var expression = astForExpr(c, CHILD(n, 1));\n    switch (CHILD(n, 0).type) {\n        case TOK.T_PLUS: return new UnaryOp(UAdd, expression, n.lineno, n.col_offset);\n        case TOK.T_MINUS: return new UnaryOp(USub, expression, n.lineno, n.col_offset);\n        case TOK.T_TILDE: return new UnaryOp(Invert, expression, n.lineno, n.col_offset);\n    }\n    throw new Error(\"unhandled UnaryExpr\");\n}\nfunction astForForStmt(c, n) {\n    var seq = [];\n    REQ(n, SYM.for_stmt);\n    if (NCH(n) === 9) {\n        seq = astForSuite(c, CHILD(n, 8));\n    }\n    var nodeTarget = CHILD(n, 1);\n    var _target = astForExprlist(c, nodeTarget, Store);\n    var target;\n    if (NCH(nodeTarget) === 1)\n        target = _target[0];\n    else\n        target = new Tuple(_target, Store, n.lineno, n.col_offset);\n    return new ForStatement(target, astForTestlist(c, CHILD(n, 3)), astForSuite(c, CHILD(n, 5)), seq, n.lineno, n.col_offset);\n}\nfunction astForCall(c, n, func) {\n    /*\n        arglist: (argument ',')* (argument [',']| '*' test [',' '**' test]\n                | '**' test)\n        argument: [test '='] test [gen_for]        # Really [keyword '='] test\n    */\n    REQ(n, SYM.arglist);\n    var nargs = 0;\n    var nkeywords = 0;\n    var ngens = 0;\n    for (var i = 0; i < NCH(n); ++i) {\n        var ch = CHILD(n, i);\n        if (ch.type === SYM.argument) {\n            if (NCH(ch) === 1)\n                nargs++;\n            else if (CHILD(ch, 1).type === SYM.gen_for)\n                ngens++;\n            else\n                nkeywords++;\n        }\n    }\n    if (ngens > 1 || (ngens && (nargs || nkeywords)))\n        throw syntaxError(\"Generator expression must be parenthesized if not sole argument\", c.c_filename, n.lineno);\n    if (nargs + nkeywords + ngens > 255)\n        throw syntaxError(\"more than 255 arguments\", c.c_filename, n.lineno);\n    var args = [];\n    var keywords = [];\n    nargs = 0;\n    nkeywords = 0;\n    var vararg = null;\n    var kwarg = null;\n    for (var i = 0; i < NCH(n); ++i) {\n        var ch = CHILD(n, i);\n        if (ch.type === SYM.argument) {\n            if (NCH(ch) === 1) {\n                if (nkeywords)\n                    throw syntaxError(\"non-keyword arg after keyword arg\", c.c_filename, n.lineno);\n                if (vararg)\n                    throw syntaxError(\"only named arguments may follow *expression\", c.c_filename, n.lineno);\n                args[nargs++] = astForExpr(c, CHILD(ch, 0));\n            }\n            else if (CHILD(ch, 1).type === SYM.gen_for)\n                args[nargs++] = astForGenexp(c, ch);\n            else {\n                var e = astForExpr(c, CHILD(ch, 0));\n                if (e.constructor === Lambda)\n                    throw syntaxError(\"lambda cannot contain assignment\", c.c_filename, n.lineno);\n                else if (e.constructor !== Name)\n                    throw syntaxError(\"keyword can't be an expression\", c.c_filename, n.lineno);\n                var key = e.id;\n                forbiddenCheck(c, CHILD(ch, 0), key, n.lineno);\n                for (var k = 0; k < nkeywords; ++k) {\n                    var tmp = keywords[k].arg;\n                    if (tmp === key)\n                        throw syntaxError(\"keyword argument repeated\", c.c_filename, n.lineno);\n                }\n                keywords[nkeywords++] = new Keyword(key, astForExpr(c, CHILD(ch, 2)));\n            }\n        }\n        else if (ch.type === TOK.T_STAR)\n            vararg = astForExpr(c, CHILD(n, ++i));\n        else if (ch.type === TOK.T_DOUBLESTAR)\n            kwarg = astForExpr(c, CHILD(n, ++i));\n    }\n    return new Call(func, args, keywords, vararg, kwarg, func.lineno, func.col_offset);\n}\nfunction astForTrailer(c, n, leftExpr) {\n    /* trailer: '(' [arglist] ')' | '[' subscriptlist ']' | '.' NAME\n        subscriptlist: subscript (',' subscript)* [',']\n        subscript: '.' '.' '.' | test | [test] ':' [test] [sliceop]\n        */\n    REQ(n, SYM.trailer);\n    if (CHILD(n, 0).type === TOK.T_LPAR) {\n        if (NCH(n) === 2)\n            return new Call(leftExpr, [], [], null, null, n.lineno, n.col_offset);\n        else\n            return astForCall(c, CHILD(n, 1), leftExpr);\n    }\n    else if (CHILD(n, 0).type === TOK.T_DOT)\n        return new Attribute(leftExpr, strobj(CHILD(n, 1).value), Load, n.lineno, n.col_offset);\n    else {\n        REQ(CHILD(n, 0), TOK.T_LSQB);\n        REQ(CHILD(n, 2), TOK.T_RSQB);\n        n = CHILD(n, 1);\n        if (NCH(n) === 1)\n            return new Subscript(leftExpr, astForSlice(c, CHILD(n, 0)), Load, n.lineno, n.col_offset);\n        else {\n            /* The grammar is ambiguous here. The ambiguity is resolved\n                by treating the sequence as a tuple literal if there are\n                no slice features.\n            */\n            var simple = true;\n            var slices = [];\n            for (var j = 0; j < NCH(n); j += 2) {\n                var slc = astForSlice(c, CHILD(n, j));\n                if (slc.constructor !== Index) {\n                    simple = false;\n                }\n                slices[j / 2] = slc;\n            }\n            if (!simple) {\n                return new Subscript(leftExpr, new ExtSlice(slices), Load, n.lineno, n.col_offset);\n            }\n            var elts = [];\n            for (var j = 0; j < slices.length; ++j) {\n                var slc_1 = slices[j];\n                if (slc_1 instanceof Index) {\n                    assert(slc_1.value !== null && slc_1.value !== undefined);\n                    elts[j] = slc_1.value;\n                }\n                else {\n                    assert(slc_1 instanceof Index);\n                }\n            }\n            var e = new Tuple(elts, Load, n.lineno, n.col_offset);\n            return new Subscript(leftExpr, new Index(e), Load, n.lineno, n.col_offset);\n        }\n    }\n}\nfunction astForFlowStmt(c, n) {\n    REQ(n, SYM.flow_stmt);\n    var ch = CHILD(n, 0);\n    switch (ch.type) {\n        case SYM.break_stmt: return new BreakStatement(n.lineno, n.col_offset);\n        case SYM.continue_stmt: return new ContinueStatement(n.lineno, n.col_offset);\n        case SYM.yield_stmt:\n            return new Expr(astForExpr(c, CHILD(ch, 0)), n.lineno, n.col_offset);\n        case SYM.return_stmt:\n            if (NCH(ch) === 1)\n                return new ReturnStatement(null, n.lineno, n.col_offset);\n            else\n                return new ReturnStatement(astForTestlist(c, CHILD(ch, 1)), n.lineno, n.col_offset);\n        case SYM.raise_stmt: {\n            if (NCH(ch) === 1)\n                return new Raise(null, null, null, n.lineno, n.col_offset);\n            else if (NCH(ch) === 2)\n                return new Raise(astForExpr(c, CHILD(ch, 1)), null, null, n.lineno, n.col_offset);\n            else if (NCH(ch) === 4)\n                return new Raise(astForExpr(c, CHILD(ch, 1)), astForExpr(c, CHILD(ch, 3)), null, n.lineno, n.col_offset);\n            else if (NCH(ch) === 6)\n                return new Raise(astForExpr(c, CHILD(ch, 1)), astForExpr(c, CHILD(ch, 3)), astForExpr(c, CHILD(ch, 5)), n.lineno, n.col_offset);\n            else {\n                throw new Error(\"unhandled flow statement\");\n            }\n        }\n        default: {\n            throw new Error(\"unexpected flow_stmt\");\n        }\n    }\n}\nfunction astForArguments(c, n) {\n    /* parameters: '(' [varargslist] ')'\n        varargslist: (fpdef ['=' test] ',')* ('*' NAME [',' '**' NAME]\n            | '**' NAME) | fpdef ['=' test] (',' fpdef ['=' test])* [',']\n    */\n    var ch;\n    var vararg = null;\n    var kwarg = null;\n    if (n.type === SYM.parameters) {\n        if (NCH(n) === 2)\n            return new Arguments([], null, null, []);\n        n = CHILD(n, 1);\n    }\n    REQ(n, SYM.varargslist);\n    var args = [];\n    var defaults = [];\n    /* fpdef: NAME | '(' fplist ')'\n        fplist: fpdef (',' fpdef)* [',']\n    */\n    var foundDefault = false;\n    var i = 0;\n    var j = 0; // index for defaults\n    var k = 0; // index for args\n    while (i < NCH(n)) {\n        ch = CHILD(n, i);\n        switch (ch.type) {\n            case SYM.fpdef:\n                var complexArgs = 0;\n                var parenthesized = false;\n                handle_fpdef: while (true) {\n                    if (i + 1 < NCH(n) && CHILD(n, i + 1).type === TOK.T_EQUAL) {\n                        defaults[j++] = astForExpr(c, CHILD(n, i + 2));\n                        i += 2;\n                        foundDefault = true;\n                    }\n                    else if (foundDefault) {\n                        /* def f((x)=4): pass should raise an error.\n                            def f((x, (y))): pass will just incur the tuple unpacking warning. */\n                        if (parenthesized && !complexArgs)\n                            throw syntaxError(\"parenthesized arg with default\", c.c_filename, n.lineno);\n                        throw syntaxError(\"non-default argument follows default argument\", c.c_filename, n.lineno);\n                    }\n                    if (NCH(ch) === 3) {\n                        ch = CHILD(ch, 1);\n                        // def foo((x)): is not complex, special case.\n                        if (NCH(ch) !== 1) {\n                            throw syntaxError(\"tuple parameter unpacking has been removed\", c.c_filename, n.lineno);\n                        }\n                        else {\n                            /* def foo((x)): setup for checking NAME below. */\n                            /* Loop because there can be many parens and tuple\n                                unpacking mixed in. */\n                            parenthesized = true;\n                            ch = CHILD(ch, 0);\n                            assert(ch.type === SYM.fpdef);\n                            continue handle_fpdef;\n                        }\n                    }\n                    if (CHILD(ch, 0).type === TOK.T_NAME) {\n                        forbiddenCheck(c, n, CHILD(ch, 0).value, n.lineno);\n                        var id = strobj(CHILD(ch, 0).value);\n                        args[k++] = new Name(id, Param, ch.lineno, ch.col_offset);\n                    }\n                    i += 2;\n                    if (parenthesized)\n                        throw syntaxError(\"parenthesized argument names are invalid\", c.c_filename, n.lineno);\n                    break;\n                }\n                break;\n            case TOK.T_STAR:\n                forbiddenCheck(c, CHILD(n, i + 1), CHILD(n, i + 1).value, n.lineno);\n                vararg = strobj(CHILD(n, i + 1).value);\n                i += 3;\n                break;\n            case TOK.T_DOUBLESTAR:\n                forbiddenCheck(c, CHILD(n, i + 1), CHILD(n, i + 1).value, n.lineno);\n                kwarg = strobj(CHILD(n, i + 1).value);\n                i += 3;\n                break;\n            default: {\n                throw new Error(\"unexpected node in varargslist\");\n            }\n        }\n    }\n    return new Arguments(args, vararg, kwarg, defaults);\n}\nfunction astForFuncdef(c, n, decoratorSeq) {\n    /* funcdef: 'def' NAME parameters ':' suite */\n    REQ(n, SYM.funcdef);\n    var name = strobj(CHILD(n, 1).value);\n    forbiddenCheck(c, CHILD(n, 1), CHILD(n, 1).value, n.lineno);\n    var args = astForArguments(c, CHILD(n, 2));\n    var body = astForSuite(c, CHILD(n, 4));\n    return new FunctionDef(name, args, body, decoratorSeq, n.lineno, n.col_offset);\n}\nfunction astForClassBases(c, n) {\n    assert(NCH(n) > 0);\n    REQ(n, SYM.testlist);\n    if (NCH(n) === 1) {\n        return [astForExpr(c, CHILD(n, 0))];\n    }\n    return seqForTestlist(c, n);\n}\nfunction astForClassdef(c, n, decoratorSeq) {\n    REQ(n, SYM.classdef);\n    forbiddenCheck(c, n, CHILD(n, 1).value, n.lineno);\n    var classname = strobj(CHILD(n, 1).value);\n    if (NCH(n) === 4)\n        return new ClassDef(classname, [], astForSuite(c, CHILD(n, 3)), decoratorSeq, n.lineno, n.col_offset);\n    if (CHILD(n, 3).type === TOK.T_RPAR)\n        return new ClassDef(classname, [], astForSuite(c, CHILD(n, 5)), decoratorSeq, n.lineno, n.col_offset);\n    var bases = astForClassBases(c, CHILD(n, 3));\n    var s = astForSuite(c, CHILD(n, 6));\n    return new ClassDef(classname, bases, s, decoratorSeq, n.lineno, n.col_offset);\n}\nfunction astForLambdef(c, n) {\n    var args;\n    var expression;\n    if (NCH(n) === 3) {\n        args = new Arguments([], null, null, []);\n        expression = astForExpr(c, CHILD(n, 2));\n    }\n    else {\n        args = astForArguments(c, CHILD(n, 1));\n        expression = astForExpr(c, CHILD(n, 3));\n    }\n    return new Lambda(args, expression, n.lineno, n.col_offset);\n}\nfunction astForGenexp(c, n) {\n    /* testlist_gexp: test ( gen_for | (',' test)* [','] )\n        argument: [test '='] test [gen_for]       # Really [keyword '='] test */\n    assert(n.type === SYM.testlist_gexp || n.type === SYM.argument);\n    assert(NCH(n) > 1);\n    function countGenFors(c, n) {\n        var nfors = 0;\n        var ch = CHILD(n, 1);\n        count_gen_for: while (true) {\n            nfors++;\n            REQ(ch, SYM.gen_for);\n            if (NCH(ch) === 5)\n                ch = CHILD(ch, 4);\n            else\n                return nfors;\n            count_gen_iter: while (true) {\n                REQ(ch, SYM.gen_iter);\n                ch = CHILD(ch, 0);\n                if (ch.type === SYM.gen_for)\n                    continue count_gen_for;\n                else if (ch.type === SYM.gen_if) {\n                    if (NCH(ch) === 3) {\n                        ch = CHILD(ch, 2);\n                        continue count_gen_iter;\n                    }\n                    else\n                        return nfors;\n                }\n                break;\n            }\n            break;\n        }\n        throw new Error(\"logic error in countGenFors\");\n    }\n    function countGenIfs(c, n) {\n        var nifs = 0;\n        while (true) {\n            REQ(n, SYM.gen_iter);\n            if (CHILD(n, 0).type === SYM.gen_for)\n                return nifs;\n            n = CHILD(n, 0);\n            REQ(n, SYM.gen_if);\n            nifs++;\n            if (NCH(n) === 2)\n                return nifs;\n            n = CHILD(n, 2);\n        }\n    }\n    var elt = astForExpr(c, CHILD(n, 0));\n    var nfors = countGenFors(c, n);\n    var genexps = [];\n    var ch = CHILD(n, 1);\n    for (var i = 0; i < nfors; ++i) {\n        REQ(ch, SYM.gen_for);\n        var forch = CHILD(ch, 1);\n        var t = astForExprlist(c, forch, Store);\n        var expression = astForExpr(c, CHILD(ch, 3));\n        var ge;\n        if (NCH(forch) === 1)\n            ge = new Comprehension(t[0], expression, []);\n        else\n            ge = new Comprehension(new Tuple(t, Store, ch.lineno, ch.col_offset), expression, []);\n        if (NCH(ch) === 5) {\n            ch = CHILD(ch, 4);\n            var nifs = countGenIfs(c, ch);\n            var ifs = [];\n            for (var j = 0; j < nifs; ++j) {\n                REQ(ch, SYM.gen_iter);\n                ch = CHILD(ch, 0);\n                REQ(ch, SYM.gen_if);\n                expression = astForExpr(c, CHILD(ch, 1));\n                ifs[j] = expression;\n                if (NCH(ch) === 3)\n                    ch = CHILD(ch, 2);\n            }\n            if (ch.type === SYM.gen_iter)\n                ch = CHILD(ch, 0);\n            ge.ifs = ifs;\n        }\n        genexps[i] = ge;\n    }\n    return new GeneratorExp(elt, genexps, n.lineno, n.col_offset);\n}\nfunction astForWhileStmt(c, n) {\n    /* while_stmt: 'while' test ':' suite ['else' ':' suite] */\n    REQ(n, SYM.while_stmt);\n    if (NCH(n) === 4)\n        return new WhileStatement(astForExpr(c, CHILD(n, 1)), astForSuite(c, CHILD(n, 3)), [], n.lineno, n.col_offset);\n    else if (NCH(n) === 7)\n        return new WhileStatement(astForExpr(c, CHILD(n, 1)), astForSuite(c, CHILD(n, 3)), astForSuite(c, CHILD(n, 6)), n.lineno, n.col_offset);\n    throw new Error(\"wrong number of tokens for 'while' stmt\");\n}\nfunction astForAugassign(c, n) {\n    REQ(n, SYM.augassign);\n    n = CHILD(n, 0);\n    switch (n.value.charAt(0)) {\n        case '+': return Add;\n        case '-': return Sub;\n        case '/': {\n            if (n.value.charAt(1) === '/') {\n                return FloorDiv;\n            }\n            else {\n                return Div;\n            }\n        }\n        case '%': return Mod;\n        case '<': return LShift;\n        case '>': return RShift;\n        case '&': return BitAnd;\n        case '^': return BitXor;\n        case '|': return BitOr;\n        case '*': {\n            if (n.value.charAt(1) === '*') {\n                return Pow;\n            }\n            else {\n                return Mult;\n            }\n        }\n        default: {\n            throw new Error(\"invalid augassign\");\n        }\n    }\n}\nfunction astForBinop(c, n) {\n    /* Must account for a sequence of expressions.\n        How should A op B op C by represented?\n        BinOp(BinOp(A, op, B), op, C).\n    */\n    var result = new BinOp(astForExpr(c, CHILD(n, 0)), getOperator(CHILD(n, 1)), astForExpr(c, CHILD(n, 2)), n.lineno, n.col_offset);\n    var nops = (NCH(n) - 1) / 2;\n    for (var i = 1; i < nops; ++i) {\n        var nextOper = CHILD(n, i * 2 + 1);\n        var newoperator = getOperator(nextOper);\n        var tmp = astForExpr(c, CHILD(n, i * 2 + 2));\n        result = new BinOp(result, newoperator, tmp, nextOper.lineno, nextOper.col_offset);\n    }\n    return result;\n}\nfunction astForTestlist(c, n) {\n    /* testlist_gexp: test (',' test)* [','] */\n    /* testlist: test (',' test)* [','] */\n    /* testlist_safe: test (',' test)+ [','] */\n    /* testlist1: test (',' test)* */\n    assert(NCH(n) > 0);\n    if (n.type === SYM.testlist_gexp) {\n        if (NCH(n) > 1) {\n            assert(CHILD(n, 1).type !== SYM.gen_for);\n        }\n    }\n    else {\n        assert(n.type === SYM.testlist || n.type === SYM.testlist_safe || n.type === SYM.testlist1);\n    }\n    if (NCH(n) === 1) {\n        return astForExpr(c, CHILD(n, 0));\n    }\n    else {\n        return new Tuple(seqForTestlist(c, n), Load, n.lineno, n.col_offset);\n    }\n}\nfunction astForExprStmt(c, n) {\n    REQ(n, SYM.ExprStmt);\n    if (NCH(n) === 1)\n        return new Expr(astForTestlist(c, CHILD(n, 0)), n.lineno, n.col_offset);\n    else if (CHILD(n, 1).type === SYM.augassign) {\n        var ch = CHILD(n, 0);\n        var expr1 = astForTestlist(c, ch);\n        switch (expr1.constructor) {\n            case GeneratorExp: throw syntaxError(\"augmented assignment to generator expression not possible\", c.c_filename, n.lineno);\n            case Yield: throw syntaxError(\"augmented assignment to yield expression not possible\", c.c_filename, n.lineno);\n            case Name:\n                var varName = expr1.id;\n                forbiddenCheck(c, ch, varName, n.lineno);\n                break;\n            case Attribute:\n            case Subscript:\n                break;\n            default:\n                throw syntaxError(\"illegal expression for augmented assignment\", c.c_filename, n.lineno);\n        }\n        setContext(c, expr1, Store, ch);\n        ch = CHILD(n, 2);\n        var expr2;\n        if (ch.type === SYM.testlist)\n            expr2 = astForTestlist(c, ch);\n        else\n            expr2 = astForExpr(c, ch);\n        return new AugAssign(expr1, astForAugassign(c, CHILD(n, 1)), expr2, n.lineno, n.col_offset);\n    }\n    else {\n        // normal assignment\n        REQ(CHILD(n, 1), TOK.T_EQUAL);\n        var targets = [];\n        for (var i = 0; i < NCH(n) - 2; i += 2) {\n            var ch = CHILD(n, i);\n            if (ch.type === SYM.YieldExpr)\n                throw syntaxError(\"assignment to yield expression not possible\", c.c_filename, n.lineno);\n            var e = astForTestlist(c, ch);\n            setContext(c, e, Store, CHILD(n, i));\n            targets[i / 2] = e;\n        }\n        var value = CHILD(n, NCH(n) - 1);\n        var expression;\n        if (value.type === SYM.testlist)\n            expression = astForTestlist(c, value);\n        else\n            expression = astForExpr(c, value);\n        return new Assign(targets, expression, n.lineno, n.col_offset);\n    }\n}\nfunction astForIfexpr(c, n) {\n    assert(NCH(n) === 5);\n    return new IfExp(astForExpr(c, CHILD(n, 2)), astForExpr(c, CHILD(n, 0)), astForExpr(c, CHILD(n, 4)), n.lineno, n.col_offset);\n}\n// escape() was deprecated in JavaScript 1.5. Use encodeURI or encodeURIComponent instead.\nfunction escape(s) {\n    return encodeURIComponent(s);\n}\n/**\n * s is a python-style string literal, including quote characters and u/r/b\n * prefixes. Returns decoded string object.\n */\nfunction parsestr(c, s) {\n    // const encodeUtf8 = function(s) { return unescape(encodeURIComponent(s)); };\n    var decodeUtf8 = function (s) { return decodeURIComponent(escape(s)); };\n    var decodeEscape = function (s, quote) {\n        var len = s.length;\n        var ret = '';\n        for (var i = 0; i < len; ++i) {\n            var c = s.charAt(i);\n            if (c === '\\\\') {\n                ++i;\n                c = s.charAt(i);\n                if (c === 'n')\n                    ret += \"\\n\";\n                else if (c === '\\\\')\n                    ret += \"\\\\\";\n                else if (c === 't')\n                    ret += \"\\t\";\n                else if (c === 'r')\n                    ret += \"\\r\";\n                else if (c === 'b')\n                    ret += \"\\b\";\n                else if (c === 'f')\n                    ret += \"\\f\";\n                else if (c === 'v')\n                    ret += \"\\v\";\n                else if (c === '0')\n                    ret += \"\\0\";\n                else if (c === '\"')\n                    ret += '\"';\n                else if (c === '\\'')\n                    ret += '\\'';\n                else if (c === '\\n') { }\n                else if (c === 'x') {\n                    var d0 = s.charAt(++i);\n                    var d1 = s.charAt(++i);\n                    ret += String.fromCharCode(parseInt(d0 + d1, 16));\n                }\n                else if (c === 'u' || c === 'U') {\n                    var d0 = s.charAt(++i);\n                    var d1 = s.charAt(++i);\n                    var d2 = s.charAt(++i);\n                    var d3 = s.charAt(++i);\n                    ret += String.fromCharCode(parseInt(d0 + d1, 16), parseInt(d2 + d3, 16));\n                }\n                else {\n                    // Leave it alone\n                    ret += \"\\\\\" + c;\n                }\n            }\n            else {\n                ret += c;\n            }\n        }\n        return ret;\n    };\n    var quote = s.charAt(0);\n    var rawmode = false;\n    if (quote === 'u' || quote === 'U') {\n        s = s.substr(1);\n        quote = s.charAt(0);\n    }\n    else if (quote === 'r' || quote === 'R') {\n        s = s.substr(1);\n        quote = s.charAt(0);\n        rawmode = true;\n    }\n    assert(quote !== 'b' && quote !== 'B', \"todo; haven't done b'' strings yet\");\n    assert(quote === \"'\" || quote === '\"' && s.charAt(s.length - 1) === quote);\n    s = s.substr(1, s.length - 2);\n    if (s.length >= 4 && s.charAt(0) === quote && s.charAt(1) === quote) {\n        assert(s.charAt(s.length - 1) === quote && s.charAt(s.length - 2) === quote);\n        s = s.substr(2, s.length - 4);\n    }\n    if (rawmode || s.indexOf('\\\\') === -1) {\n        return strobj(decodeUtf8(s));\n    }\n    return strobj(decodeEscape(s, quote));\n}\n/**\n * @return {string}\n */\nfunction parsestrplus(c, n) {\n    REQ(CHILD(n, 0), TOK.T_STRING);\n    var ret = \"\";\n    for (var i = 0; i < NCH(n); ++i) {\n        var child = CHILD(n, i);\n        try {\n            ret = ret + parsestr(c, child.value);\n        }\n        catch (x) {\n            throw syntaxError(\"invalid string (possibly contains a unicode character)\", c.c_filename, child.lineno);\n        }\n    }\n    return ret;\n}\nfunction parsenumber(c, s, lineno) {\n    var end = s.charAt(s.length - 1);\n    if (end === 'j' || end === 'J') {\n        throw syntaxError(\"complex numbers are currently unsupported\", c.c_filename, lineno);\n    }\n    if (s.indexOf('.') !== -1) {\n        return floatAST(s);\n    }\n    // Handle integers of various bases\n    var tmp = s;\n    var value;\n    var radix = 10;\n    var neg = false;\n    if (s.charAt(0) === '-') {\n        tmp = s.substr(1);\n        neg = true;\n    }\n    if (tmp.charAt(0) === '0' && (tmp.charAt(1) === 'x' || tmp.charAt(1) === 'X')) {\n        // Hex\n        tmp = tmp.substring(2);\n        value = parseInt(tmp, 16);\n        radix = 16;\n    }\n    else if ((s.indexOf('e') !== -1) || (s.indexOf('E') !== -1)) {\n        // Float with exponent (needed to make sure e/E wasn't hex first)\n        return floatAST(s);\n    }\n    else if (tmp.charAt(0) === '0' && (tmp.charAt(1) === 'b' || tmp.charAt(1) === 'B')) {\n        // Binary\n        tmp = tmp.substring(2);\n        value = parseInt(tmp, 2);\n        radix = 2;\n    }\n    else if (tmp.charAt(0) === '0') {\n        if (tmp === \"0\") {\n            // Zero\n            value = 0;\n        }\n        else {\n            // Octal (Leading zero, but not actually zero)\n            if (end === 'l' || end === 'L') {\n                return longAST(s.substr(0, s.length - 1), 8);\n            }\n            else {\n                radix = 8;\n                tmp = tmp.substring(1);\n                if ((tmp.charAt(0) === 'o') || (tmp.charAt(0) === 'O')) {\n                    tmp = tmp.substring(1);\n                }\n                value = parseInt(tmp, 8);\n            }\n        }\n    }\n    else {\n        // Decimal\n        if (end === 'l' || end === 'L') {\n            return longAST(s.substr(0, s.length - 1), radix);\n        }\n        else {\n            value = parseInt(tmp, radix);\n        }\n    }\n    // Convert to long\n    if (value > LONG_THRESHOLD && Math.floor(value) === value && (s.indexOf('e') === -1 && s.indexOf('E') === -1)) {\n        // TODO: Does radix zero make sense?\n        return longAST(s, 0);\n    }\n    if (end === 'l' || end === 'L') {\n        return longAST(s.substr(0, s.length - 1), radix);\n    }\n    else {\n        if (neg) {\n            return intAST(-value);\n        }\n        else {\n            return intAST(value);\n        }\n    }\n}\nfunction astForSlice(c, n) {\n    REQ(n, SYM.subscript);\n    var ch = CHILD(n, 0);\n    var lower = null;\n    var upper = null;\n    var step = null;\n    if (ch.type === TOK.T_DOT) {\n        return new Ellipsis();\n    }\n    if (NCH(n) === 1 && ch.type === SYM.IfExpr) {\n        return new Index(astForExpr(c, ch));\n    }\n    if (ch.type === SYM.IfExpr)\n        lower = astForExpr(c, ch);\n    if (ch.type === TOK.T_COLON) {\n        if (NCH(n) > 1) {\n            var n2 = CHILD(n, 1);\n            if (n2.type === SYM.IfExpr)\n                upper = astForExpr(c, n2);\n        }\n    }\n    else if (NCH(n) > 2) {\n        var n2_1 = CHILD(n, 2);\n        if (n2_1.type === SYM.IfExpr) {\n            upper = astForExpr(c, n2_1);\n        }\n    }\n    ch = CHILD(n, NCH(n) - 1);\n    if (ch.type === SYM.sliceop) {\n        if (NCH(ch) === 1) {\n            ch = CHILD(ch, 0);\n            step = new Name(strobj(\"None\"), Load, ch.lineno, ch.col_offset);\n        }\n        else {\n            ch = CHILD(ch, 1);\n            if (ch.type === SYM.IfExpr)\n                step = astForExpr(c, ch);\n        }\n    }\n    return new Slice(lower, upper, step);\n}\nfunction astForAtomExpr(c, n) {\n    var ch = CHILD(n, 0);\n    switch (ch.type) {\n        case TOK.T_NAME:\n            // All names start in Load context, but may be changed later\n            return new Name(strobj(ch.value), Load, n.lineno, n.col_offset);\n        case TOK.T_STRING:\n            return new Str(parsestrplus(c, n), n.lineno, n.col_offset);\n        case TOK.T_NUMBER:\n            return new Num(parsenumber(c, ch.value, n.lineno), n.lineno, n.col_offset);\n        case TOK.T_LPAR:\n            ch = CHILD(n, 1);\n            if (ch.type === TOK.T_RPAR) {\n                return new Tuple([], Load, n.lineno, n.col_offset);\n            }\n            if (ch.type === SYM.YieldExpr) {\n                return astForExpr(c, ch);\n            }\n            if (NCH(ch) > 1 && CHILD(ch, 1).type === SYM.gen_for) {\n                return astForGenexp(c, ch);\n            }\n            return astForTestlistGexp(c, ch);\n        case TOK.T_LSQB:\n            ch = CHILD(n, 1);\n            if (ch.type === TOK.T_RSQB)\n                return new List([], Load, n.lineno, n.col_offset);\n            REQ(ch, SYM.listmaker);\n            if (NCH(ch) === 1 || CHILD(ch, 1).type === TOK.T_COMMA)\n                return new List(seqForTestlist(c, ch), Load, n.lineno, n.col_offset);\n            else\n                return astForListcomp(c, ch);\n        case TOK.T_LBRACE:\n            /* dictmaker: test ':' test (',' test ':' test)* [','] */\n            ch = CHILD(n, 1);\n            // var size = Math.floor((NCH(ch) + 1) / 4); // + 1 for no trailing comma case\n            var keys = [];\n            var values = [];\n            for (var i = 0; i < NCH(ch); i += 4) {\n                keys[i / 4] = astForExpr(c, CHILD(ch, i));\n                values[i / 4] = astForExpr(c, CHILD(ch, i + 2));\n            }\n            return new Dict(keys, values, n.lineno, n.col_offset);\n        case TOK.T_BACKQUOTE:\n            throw syntaxError(\"backquote not supported, use repr()\", c.c_filename, n.lineno);\n        default: {\n            throw new Error(\"unhandled atom\" /*, ch.type*/);\n        }\n    }\n}\nfunction astForPowerExpr(c, n) {\n    REQ(n, SYM.PowerExpr);\n    var e = astForAtomExpr(c, CHILD(n, 0));\n    if (NCH(n) === 1)\n        return e;\n    for (var i = 1; i < NCH(n); ++i) {\n        var ch = CHILD(n, i);\n        if (ch.type !== SYM.trailer) {\n            break;\n        }\n        var tmp = astForTrailer(c, ch, e);\n        tmp.lineno = e.lineno;\n        tmp.col_offset = e.col_offset;\n        e = tmp;\n    }\n    if (CHILD(n, NCH(n) - 1).type === SYM.UnaryExpr) {\n        var f = astForExpr(c, CHILD(n, NCH(n) - 1));\n        return new BinOp(e, Pow, f, n.lineno, n.col_offset);\n    }\n    else {\n        return e;\n    }\n}\nfunction astForExpr(c, n) {\n    LOOP: while (true) {\n        switch (n.type) {\n            case SYM.IfExpr:\n            case SYM.old_test:\n                if (CHILD(n, 0).type === SYM.LambdaExpr || CHILD(n, 0).type === SYM.old_LambdaExpr)\n                    return astForLambdef(c, CHILD(n, 0));\n                else if (NCH(n) > 1)\n                    return astForIfexpr(c, n);\n            // fallthrough\n            case SYM.OrExpr:\n            case SYM.AndExpr:\n                if (NCH(n) === 1) {\n                    n = CHILD(n, 0);\n                    continue LOOP;\n                }\n                var seq = [];\n                for (var i = 0; i < NCH(n); i += 2) {\n                    seq[i / 2] = astForExpr(c, CHILD(n, i));\n                }\n                if (CHILD(n, 1).value === \"and\") {\n                    return new BoolOp(And, seq, n.lineno, n.col_offset);\n                }\n                assert(CHILD(n, 1).value === \"or\");\n                return new BoolOp(Or, seq, n.lineno, n.col_offset);\n            case SYM.NotExpr:\n                if (NCH(n) === 1) {\n                    n = CHILD(n, 0);\n                    continue LOOP;\n                }\n                else {\n                    return new UnaryOp(Not, astForExpr(c, CHILD(n, 1)), n.lineno, n.col_offset);\n                }\n            case SYM.ComparisonExpr:\n                if (NCH(n) === 1) {\n                    n = CHILD(n, 0);\n                    continue LOOP;\n                }\n                else {\n                    var ops = [];\n                    var cmps = [];\n                    for (var i = 1; i < NCH(n); i += 2) {\n                        ops[(i - 1) / 2] = astForCompOp(c, CHILD(n, i));\n                        cmps[(i - 1) / 2] = astForExpr(c, CHILD(n, i + 1));\n                    }\n                    return new Compare(astForExpr(c, CHILD(n, 0)), ops, cmps, n.lineno, n.col_offset);\n                }\n            case SYM.ArithmeticExpr:\n            case SYM.GeometricExpr:\n            case SYM.ShiftExpr:\n            case SYM.BitwiseOrExpr:\n            case SYM.BitwiseXorExpr:\n            case SYM.BitwiseAndExpr:\n                if (NCH(n) === 1) {\n                    n = CHILD(n, 0);\n                    continue LOOP;\n                }\n                return astForBinop(c, n);\n            case SYM.YieldExpr:\n                var exp = null;\n                if (NCH(n) === 2) {\n                    exp = astForTestlist(c, CHILD(n, 1));\n                }\n                return new Yield(exp, n.lineno, n.col_offset);\n            case SYM.UnaryExpr:\n                if (NCH(n) === 1) {\n                    n = CHILD(n, 0);\n                    continue LOOP;\n                }\n                return astForUnaryExpr(c, n);\n            case SYM.PowerExpr:\n                return astForPowerExpr(c, n);\n            default: {\n                throw new Error(\"unhandled expr\" /*, \"n.type: %d\", n.type*/);\n            }\n        }\n    }\n}\nfunction astForPrintStmt(c, n) {\n    var start = 1;\n    var dest = null;\n    REQ(n, SYM.print_stmt);\n    if (NCH(n) >= 2 && CHILD(n, 1).type === TOK.T_RIGHTSHIFT) {\n        dest = astForExpr(c, CHILD(n, 2));\n        start = 4;\n    }\n    var seq = [];\n    for (var i = start, j = 0; i < NCH(n); i += 2, ++j) {\n        seq[j] = astForExpr(c, CHILD(n, i));\n    }\n    var nl = (CHILD(n, NCH(n) - 1)).type === TOK.T_COMMA ? false : true;\n    return new Print(dest, seq, nl, n.lineno, n.col_offset);\n}\nfunction astForStmt(c, n) {\n    if (n.type === SYM.stmt) {\n        assert(NCH(n) === 1);\n        n = CHILD(n, 0);\n    }\n    if (n.type === SYM.simple_stmt) {\n        assert(numStmts(n) === 1);\n        n = CHILD(n, 0);\n    }\n    if (n.type === SYM.small_stmt) {\n        REQ(n, SYM.small_stmt);\n        n = CHILD(n, 0);\n        switch (n.type) {\n            case SYM.ExprStmt: return astForExprStmt(c, n);\n            case SYM.print_stmt: return astForPrintStmt(c, n);\n            case SYM.del_stmt: return astForDelStmt(c, n);\n            case SYM.pass_stmt: return new Pass(n.lineno, n.col_offset);\n            case SYM.flow_stmt: return astForFlowStmt(c, n);\n            case SYM.import_stmt: return astForImportStmt(c, n);\n            case SYM.GlobalStmt: return astForGlobalStmt(c, n);\n            case SYM.NonLocalStmt: return astForNonLocalStmt(c, n);\n            case SYM.exec_stmt: return astForExecStmt(c, n);\n            case SYM.assert_stmt: return astForAssertStmt(c, n);\n            default: {\n                throw new Error(\"unhandled small_stmt\");\n            }\n        }\n    }\n    else {\n        var ch = CHILD(n, 0);\n        REQ(n, SYM.compound_stmt);\n        switch (ch.type) {\n            case SYM.if_stmt: return astForIfStmt(c, ch);\n            case SYM.while_stmt: return astForWhileStmt(c, ch);\n            case SYM.for_stmt: return astForForStmt(c, ch);\n            case SYM.try_stmt: return astForTryStmt(c, ch);\n            case SYM.with_stmt: return astForWithStmt(c, ch);\n            case SYM.funcdef: return astForFuncdef(c, ch, []);\n            case SYM.classdef: return astForClassdef(c, ch, []);\n            case SYM.decorated: return astForDecorated(c, ch);\n            default: {\n                throw new Error(\"unhandled compound_stmt\");\n            }\n        }\n    }\n}\nexport function astFromParse(n, filename) {\n    var c = new Compiling(\"utf-8\", filename);\n    var stmts = [];\n    var k = 0;\n    switch (n.type) {\n        case SYM.file_input:\n            for (var i = 0; i < NCH(n) - 1; ++i) {\n                var ch = CHILD(n, i);\n                if (n.type === TOK.T_NEWLINE)\n                    continue;\n                REQ(ch, SYM.stmt);\n                var num = numStmts(ch);\n                if (num === 1) {\n                    stmts[k++] = astForStmt(c, ch);\n                }\n                else {\n                    ch = CHILD(ch, 0);\n                    REQ(ch, SYM.simple_stmt);\n                    for (var j = 0; j < num; ++j) {\n                        stmts[k++] = astForStmt(c, CHILD(ch, j * 2));\n                    }\n                }\n            }\n            return new Module(stmts);\n        case SYM.eval_input: {\n            throw new Error(\"todo;\");\n        }\n        case SYM.single_input: {\n            throw new Error(\"todo;\");\n        }\n        default: {\n            throw new Error(\"todo;\");\n        }\n    }\n}\nexport function astDump(node) {\n    var _format = function (node) {\n        if (node === null) {\n            return \"None\";\n        }\n        else if (node.prototype && node.prototype._astname !== undefined && node.prototype._isenum) {\n            return node.prototype._astname + \"()\";\n        }\n        else if (node._astname !== undefined) {\n            var fields = [];\n            for (var i = 0; i < node._fields.length; i += 2) {\n                var a = node._fields[i]; // field name\n                var b = node._fields[i + 1](node); // field getter func\n                fields.push([a, _format(b)]);\n            }\n            var attrs = [];\n            for (var i = 0; i < fields.length; ++i) {\n                var field = fields[i];\n                attrs.push(field[0] + \"=\" + field[1].replace(/^\\s+/, ''));\n            }\n            var fieldstr = attrs.join(',');\n            return node._astname + \"(\" + fieldstr + \")\";\n        }\n        else if (isArrayLike(node)) {\n            var elems = [];\n            for (var i = 0; i < node.length; ++i) {\n                var x = node[i];\n                elems.push(_format(x));\n            }\n            var elemsstr = elems.join(',');\n            return \"[\" + elemsstr.replace(/^\\s+/, '') + \"]\";\n        }\n        else {\n            var ret;\n            if (node === true)\n                ret = \"True\";\n            else if (node === false)\n                ret = \"False\";\n            else\n                ret = \"\" + node;\n            return ret;\n        }\n    };\n    return _format(node);\n}\n","/**\n * @param s\n */\nexport function floatAST(s) {\n    var thing = {\n        text: s,\n        value: parseFloat(s),\n        isFloat: function () { return true; },\n        isInt: function () { return false; },\n        isLong: function () { return false; },\n        toString: function () { return s; }\n    };\n    return thing;\n}\n/**\n * @param n\n */\nexport function intAST(n) {\n    var thing = {\n        value: n,\n        isFloat: function () { return false; },\n        isInt: function () { return true; },\n        isLong: function () { return false; },\n        toString: function () { return '' + n; }\n    };\n    return thing;\n}\n/**\n * @param {string} s\n */\nexport function longAST(s, radix) {\n    var thing = {\n        text: s,\n        radix: radix,\n        isFloat: function () { return false; },\n        isInt: function () { return false; },\n        isLong: function () { return true; },\n        toString: function () { return s; }\n    };\n    return thing;\n}\n","import * as tslib_1 from \"tslib\";\nvar Load = (function () {\n    function Load() {\n    }\n    return Load;\n}());\nexport { Load };\nvar Store = (function () {\n    function Store() {\n    }\n    return Store;\n}());\nexport { Store };\nvar Del = (function () {\n    function Del() {\n    }\n    return Del;\n}());\nexport { Del };\nvar AugLoad = (function () {\n    function AugLoad() {\n    }\n    return AugLoad;\n}());\nexport { AugLoad };\nvar AugStore = (function () {\n    function AugStore() {\n    }\n    return AugStore;\n}());\nexport { AugStore };\nvar Param = (function () {\n    function Param() {\n    }\n    return Param;\n}());\nexport { Param };\nvar And = (function () {\n    function And() {\n    }\n    return And;\n}());\nexport { And };\nvar Or = (function () {\n    function Or() {\n    }\n    return Or;\n}());\nexport { Or };\nvar Add = (function () {\n    function Add() {\n    }\n    return Add;\n}());\nexport { Add };\nvar Sub = (function () {\n    function Sub() {\n    }\n    return Sub;\n}());\nexport { Sub };\nvar Mult = (function () {\n    function Mult() {\n    }\n    return Mult;\n}());\nexport { Mult };\nvar Div = (function () {\n    function Div() {\n    }\n    return Div;\n}());\nexport { Div };\nvar Mod = (function () {\n    function Mod() {\n    }\n    return Mod;\n}());\nexport { Mod };\nvar Pow = (function () {\n    function Pow() {\n    }\n    return Pow;\n}());\nexport { Pow };\nvar LShift = (function () {\n    function LShift() {\n    }\n    return LShift;\n}());\nexport { LShift };\nvar RShift = (function () {\n    function RShift() {\n    }\n    return RShift;\n}());\nexport { RShift };\nvar BitOr = (function () {\n    function BitOr() {\n    }\n    return BitOr;\n}());\nexport { BitOr };\nvar BitXor = (function () {\n    function BitXor() {\n    }\n    return BitXor;\n}());\nexport { BitXor };\nvar BitAnd = (function () {\n    function BitAnd() {\n    }\n    return BitAnd;\n}());\nexport { BitAnd };\nvar FloorDiv = (function () {\n    function FloorDiv() {\n    }\n    return FloorDiv;\n}());\nexport { FloorDiv };\nvar Invert = (function () {\n    function Invert() {\n    }\n    return Invert;\n}());\nexport { Invert };\nvar Not = (function () {\n    function Not() {\n    }\n    return Not;\n}());\nexport { Not };\nvar UAdd = (function () {\n    function UAdd() {\n    }\n    return UAdd;\n}());\nexport { UAdd };\nvar USub = (function () {\n    function USub() {\n    }\n    return USub;\n}());\nexport { USub };\nvar Eq = (function () {\n    function Eq() {\n    }\n    return Eq;\n}());\nexport { Eq };\nvar NotEq = (function () {\n    function NotEq() {\n    }\n    return NotEq;\n}());\nexport { NotEq };\nvar Lt = (function () {\n    function Lt() {\n    }\n    return Lt;\n}());\nexport { Lt };\nvar LtE = (function () {\n    function LtE() {\n    }\n    return LtE;\n}());\nexport { LtE };\nvar Gt = (function () {\n    function Gt() {\n    }\n    return Gt;\n}());\nexport { Gt };\nvar GtE = (function () {\n    function GtE() {\n    }\n    return GtE;\n}());\nexport { GtE };\nvar Is = (function () {\n    function Is() {\n    }\n    return Is;\n}());\nexport { Is };\nvar IsNot = (function () {\n    function IsNot() {\n    }\n    return IsNot;\n}());\nexport { IsNot };\nvar In = (function () {\n    function In() {\n    }\n    return In;\n}());\nexport { In };\nvar NotIn = (function () {\n    function NotIn() {\n    }\n    return NotIn;\n}());\nexport { NotIn };\nvar ASTSpan = (function () {\n    function ASTSpan() {\n        this.minChar = -1; // -1 = \"undefined\" or \"compiler generated\"\n        this.limChar = -1; // -1 = \"undefined\" or \"compiler generated\"\n    }\n    return ASTSpan;\n}());\nexport { ASTSpan };\nvar AST = (function (_super) {\n    tslib_1.__extends(AST, _super);\n    function AST() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AST;\n}(ASTSpan));\nexport { AST };\nvar ModuleElement = (function (_super) {\n    tslib_1.__extends(ModuleElement, _super);\n    function ModuleElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ModuleElement;\n}(AST));\nexport { ModuleElement };\nvar Statement = (function (_super) {\n    tslib_1.__extends(Statement, _super);\n    function Statement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Statement;\n}(ModuleElement));\nexport { Statement };\nvar IterationStatement = (function (_super) {\n    tslib_1.__extends(IterationStatement, _super);\n    function IterationStatement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return IterationStatement;\n}(Statement));\nexport { IterationStatement };\nvar Module = (function () {\n    function Module(body) {\n        this.body = body;\n    }\n    return Module;\n}());\nexport { Module };\nvar Interactive = (function () {\n    function Interactive(body) {\n        this.body = body;\n    }\n    return Interactive;\n}());\nexport { Interactive };\nvar Expression = (function (_super) {\n    tslib_1.__extends(Expression, _super);\n    function Expression(body) {\n        var _this = _super.call(this) || this;\n        _this.body = body;\n        return _this;\n    }\n    return Expression;\n}(Statement));\nexport { Expression };\nvar UnaryExpression = (function (_super) {\n    tslib_1.__extends(UnaryExpression, _super);\n    function UnaryExpression() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return UnaryExpression;\n}(Expression));\nexport { UnaryExpression };\nvar Suite = (function () {\n    function Suite(body) {\n        this.body = body;\n    }\n    return Suite;\n}());\nexport { Suite };\nvar FunctionDef = (function (_super) {\n    tslib_1.__extends(FunctionDef, _super);\n    function FunctionDef(name, args, body, decorator_list, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this.args = args;\n        _this.body = body;\n        _this.decorator_list = decorator_list;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return FunctionDef;\n}(Statement));\nexport { FunctionDef };\nvar ClassDef = (function (_super) {\n    tslib_1.__extends(ClassDef, _super);\n    function ClassDef(name, bases, body, decorator_list, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this.bases = bases;\n        _this.body = body;\n        _this.decorator_list = decorator_list;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return ClassDef;\n}(Statement));\nexport { ClassDef };\nvar ReturnStatement = (function (_super) {\n    tslib_1.__extends(ReturnStatement, _super);\n    function ReturnStatement(value, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.value = value;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return ReturnStatement;\n}(Statement));\nexport { ReturnStatement };\nvar DeleteExpression = (function (_super) {\n    tslib_1.__extends(DeleteExpression, _super);\n    function DeleteExpression(targets, lineno, col_offset) {\n        var _this = _super.call(this, targets) || this;\n        _this.targets = targets;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return DeleteExpression;\n}(UnaryExpression));\nexport { DeleteExpression };\nvar Assign = (function (_super) {\n    tslib_1.__extends(Assign, _super);\n    function Assign(targets, value, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.targets = targets;\n        _this.value = value;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return Assign;\n}(Statement));\nexport { Assign };\nvar AugAssign = (function (_super) {\n    tslib_1.__extends(AugAssign, _super);\n    function AugAssign(target, op, value, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.target = target;\n        _this.op = op;\n        _this.value = value;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return AugAssign;\n}(Statement));\nexport { AugAssign };\nvar Print = (function (_super) {\n    tslib_1.__extends(Print, _super);\n    function Print(dest, values, nl, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.dest = dest;\n        _this.values = values;\n        _this.nl = nl;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return Print;\n}(Statement));\nexport { Print };\nvar ForStatement = (function (_super) {\n    tslib_1.__extends(ForStatement, _super);\n    function ForStatement(target, iter, body, orelse, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.target = target;\n        _this.iter = iter;\n        _this.body = body;\n        _this.orelse = orelse;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return ForStatement;\n}(IterationStatement));\nexport { ForStatement };\nvar WhileStatement = (function (_super) {\n    tslib_1.__extends(WhileStatement, _super);\n    function WhileStatement(test, body, orelse, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.test = test;\n        _this.body = body;\n        _this.orelse = orelse;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return WhileStatement;\n}(IterationStatement));\nexport { WhileStatement };\nvar IfStatement = (function (_super) {\n    tslib_1.__extends(IfStatement, _super);\n    function IfStatement(test, consequent, alternate, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.test = test;\n        _this.consequent = consequent;\n        _this.alternate = alternate;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return IfStatement;\n}(Statement));\nexport { IfStatement };\nvar WithStatement = (function (_super) {\n    tslib_1.__extends(WithStatement, _super);\n    function WithStatement(context_expr, optional_vars, body, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.context_expr = context_expr;\n        _this.optional_vars = optional_vars;\n        _this.body = body;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return WithStatement;\n}(Statement));\nexport { WithStatement };\nvar Raise = (function (_super) {\n    tslib_1.__extends(Raise, _super);\n    function Raise(type, inst, tback, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.type = type;\n        _this.inst = inst;\n        _this.tback = tback;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return Raise;\n}(Statement));\nexport { Raise };\nvar TryExcept = (function (_super) {\n    tslib_1.__extends(TryExcept, _super);\n    function TryExcept(body, handlers, orelse, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.body = body;\n        _this.handlers = handlers;\n        _this.orelse = orelse;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return TryExcept;\n}(Statement));\nexport { TryExcept };\nvar TryFinally = (function (_super) {\n    tslib_1.__extends(TryFinally, _super);\n    function TryFinally(body, finalbody, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.body = body;\n        _this.finalbody = finalbody;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return TryFinally;\n}(Statement));\nexport { TryFinally };\nvar Assert = (function (_super) {\n    tslib_1.__extends(Assert, _super);\n    function Assert(test, msg, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.test = test;\n        _this.msg = msg;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return Assert;\n}(Statement));\nexport { Assert };\nvar ImportStatement = (function (_super) {\n    tslib_1.__extends(ImportStatement, _super);\n    function ImportStatement(names, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.names = names;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return ImportStatement;\n}(Statement));\nexport { ImportStatement };\nvar ImportFrom = (function (_super) {\n    tslib_1.__extends(ImportFrom, _super);\n    function ImportFrom(module, names, level, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.module = module;\n        _this.names = names;\n        _this.level = level;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return ImportFrom;\n}(Statement));\nexport { ImportFrom };\nvar Exec = (function () {\n    function Exec(body, globals, locals, lineno, col_offset) {\n        this.body = body;\n        this.globals = globals;\n        this.locals = locals;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return Exec;\n}());\nexport { Exec };\nvar Global = (function () {\n    function Global(names, lineno, col_offset) {\n        this.names = names;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return Global;\n}());\nexport { Global };\nvar NonLocal = (function () {\n    function NonLocal(names, lineno, col_offset) {\n        this.names = names;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return NonLocal;\n}());\nexport { NonLocal };\nvar Expr = (function (_super) {\n    tslib_1.__extends(Expr, _super);\n    function Expr(value, lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.value = value;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return Expr;\n}(Statement));\nexport { Expr };\nvar Pass = (function () {\n    function Pass(lineno, col_offset) {\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return Pass;\n}());\nexport { Pass };\nvar BreakStatement = (function (_super) {\n    tslib_1.__extends(BreakStatement, _super);\n    function BreakStatement(lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return BreakStatement;\n}(Statement));\nexport { BreakStatement };\nvar ContinueStatement = (function (_super) {\n    tslib_1.__extends(ContinueStatement, _super);\n    function ContinueStatement(lineno, col_offset) {\n        var _this = _super.call(this) || this;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return ContinueStatement;\n}(Statement));\nexport { ContinueStatement };\nvar BoolOp = (function () {\n    function BoolOp(op, values, lineno, col_offset) {\n        this.op = op;\n        this.values = values;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return BoolOp;\n}());\nexport { BoolOp };\nvar BinOp = (function () {\n    function BinOp(left, op, right, lineno, col_offset) {\n        this.left = left;\n        this.op = op;\n        this.right = right;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return BinOp;\n}());\nexport { BinOp };\nvar UnaryOp = (function () {\n    function UnaryOp(op, operand, lineno, col_offset) {\n        this.op = op;\n        this.operand = operand;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return UnaryOp;\n}());\nexport { UnaryOp };\nvar Lambda = (function () {\n    function Lambda(args, body, lineno, col_offset) {\n        this.args = args;\n        this.body = body;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return Lambda;\n}());\nexport { Lambda };\nvar IfExp = (function () {\n    function IfExp(test, body, orelse, lineno, col_offset) {\n        this.test = test;\n        this.body = body;\n        this.orelse = orelse;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return IfExp;\n}());\nexport { IfExp };\nvar Dict = (function () {\n    function Dict(keys, values, lineno, col_offset) {\n        this.keys = keys;\n        this.values = values;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return Dict;\n}());\nexport { Dict };\nvar ListComp = (function () {\n    function ListComp(elt, generators, lineno, col_offset) {\n        this.elt = elt;\n        this.generators = generators;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return ListComp;\n}());\nexport { ListComp };\nvar GeneratorExp = (function () {\n    function GeneratorExp(elt, generators, lineno, col_offset) {\n        this.elt = elt;\n        this.generators = generators;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return GeneratorExp;\n}());\nexport { GeneratorExp };\nvar Yield = (function () {\n    function Yield(value, lineno, col_offset) {\n        this.value = value;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return Yield;\n}());\nexport { Yield };\nvar Compare = (function () {\n    function Compare(left, ops, comparators, lineno, col_offset) {\n        this.left = left;\n        this.ops = ops;\n        this.comparators = comparators;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return Compare;\n}());\nexport { Compare };\nvar Call = (function () {\n    function Call(func, args, keywords, starargs, kwargs, lineno, col_offset) {\n        this.func = func;\n        this.args = args;\n        this.keywords = keywords;\n        this.starargs = starargs;\n        this.kwargs = kwargs;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return Call;\n}());\nexport { Call };\nvar Num = (function () {\n    function Num(n, lineno, col_offset) {\n        this.n = n;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return Num;\n}());\nexport { Num };\nvar Str = (function () {\n    function Str(s, lineno, col_offset) {\n        this.s = s;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return Str;\n}());\nexport { Str };\nvar Attribute = (function () {\n    function Attribute(value, attr, ctx, lineno, col_offset) {\n        this.value = value;\n        this.attr = attr;\n        this.ctx = ctx;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return Attribute;\n}());\nexport { Attribute };\nvar Subscript = (function () {\n    function Subscript(value, slice, ctx, lineno, col_offset) {\n        this.value = value;\n        this.slice = slice;\n        this.ctx = ctx;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return Subscript;\n}());\nexport { Subscript };\nvar Name = (function (_super) {\n    tslib_1.__extends(Name, _super);\n    function Name(id, ctx, lineno, col_offset) {\n        var _this = _super.call(this, void 0) || this;\n        _this.id = id;\n        _this.ctx = ctx;\n        _this.lineno = lineno;\n        _this.col_offset = col_offset;\n        return _this;\n    }\n    return Name;\n}(Expression));\nexport { Name };\nvar List = (function () {\n    function List(elts, ctx, lineno, col_offset) {\n        this.elts = elts;\n        this.ctx = ctx;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return List;\n}());\nexport { List };\nvar Tuple = (function () {\n    function Tuple(elts, ctx, lineno, col_offset) {\n        this.elts = elts;\n        this.ctx = ctx;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return Tuple;\n}());\nexport { Tuple };\nvar Ellipsis = (function () {\n    function Ellipsis() {\n        // Do nothing yet.\n    }\n    return Ellipsis;\n}());\nexport { Ellipsis };\nvar Slice = (function () {\n    function Slice(lower, upper, step) {\n        this.lower = lower;\n        this.upper = upper;\n        this.step = step;\n    }\n    return Slice;\n}());\nexport { Slice };\nvar ExtSlice = (function () {\n    function ExtSlice(dims) {\n        this.dims = dims;\n    }\n    return ExtSlice;\n}());\nexport { ExtSlice };\nvar Index = (function () {\n    function Index(value) {\n        this.value = value;\n    }\n    return Index;\n}());\nexport { Index };\nvar Comprehension = (function () {\n    function Comprehension(target, iter, ifs) {\n        this.target = target;\n        this.iter = iter;\n        this.ifs = ifs;\n    }\n    return Comprehension;\n}());\nexport { Comprehension };\nvar ExceptHandler = (function () {\n    function ExceptHandler(type, name, body, lineno, col_offset) {\n        this.type = type;\n        this.name = name;\n        this.body = body;\n        this.lineno = lineno;\n        this.col_offset = col_offset;\n    }\n    return ExceptHandler;\n}());\nexport { ExceptHandler };\nvar Arguments = (function () {\n    function Arguments(args, vararg, kwarg, defaults) {\n        this.args = args;\n        this.vararg = vararg;\n        this.kwarg = kwarg;\n        this.defaults = defaults;\n    }\n    return Arguments;\n}());\nexport { Arguments };\nvar Keyword = (function () {\n    function Keyword(arg, value) {\n        this.arg = arg;\n        this.value = value;\n    }\n    return Keyword;\n}());\nexport { Keyword };\nvar Alias = (function () {\n    function Alias(name, asname) {\n        this.name = name;\n        this.asname = asname;\n    }\n    return Alias;\n}());\nexport { Alias };\nModule.prototype['_astname'] = 'Module';\nModule.prototype['_fields'] = [\n    'body', function (n) { return n.body; }\n];\nInteractive.prototype['_astname'] = 'Interactive';\nInteractive.prototype['_fields'] = [\n    'body', function (n) { return n.body; }\n];\nExpression.prototype['_astname'] = 'Expression';\nExpression.prototype['_fields'] = [\n    'body', function (n) { return n.body; }\n];\nSuite.prototype['_astname'] = 'Suite';\nSuite.prototype['_fields'] = [\n    'body', function (n) { return n.body; }\n];\nFunctionDef.prototype['_astname'] = 'FunctionDef';\nFunctionDef.prototype['_fields'] = [\n    'name', function (n) { return n.name; },\n    'args', function (n) { return n.args; },\n    'body', function (n) { return n.body; },\n    'decorator_list', function (n) { return n.decorator_list; }\n];\nClassDef.prototype['_astname'] = 'ClassDef';\nClassDef.prototype['_fields'] = [\n    'name', function (n) { return n.name; },\n    'bases', function (n) { return n.bases; },\n    'body', function (n) { return n.body; },\n    'decorator_list', function (n) { return n.decorator_list; }\n];\nReturnStatement.prototype['_astname'] = 'ReturnStatement';\nReturnStatement.prototype['_fields'] = [\n    'value', function (n) { return n.value; }\n];\nDeleteExpression.prototype['_astname'] = 'Delete';\nDeleteExpression.prototype['_fields'] = [\n    'targets', function (n) { return n.targets; }\n];\nAssign.prototype['_astname'] = 'Assign';\nAssign.prototype['_fields'] = [\n    'targets', function (n) { return n.targets; },\n    'value', function (n) { return n.value; }\n];\nAugAssign.prototype['_astname'] = 'AugAssign';\nAugAssign.prototype['_fields'] = [\n    'target', function (n) { return n.target; },\n    'op', function (n) { return n.op; },\n    'value', function (n) { return n.value; }\n];\nPrint.prototype['_astname'] = 'Print';\nPrint.prototype['_fields'] = [\n    'dest', function (n) { return n.dest; },\n    'values', function (n) { return n.values; },\n    'nl', function (n) { return n.nl; }\n];\nForStatement.prototype['_astname'] = 'ForStatement';\nForStatement.prototype['_fields'] = [\n    'target', function (n) { return n.target; },\n    'iter', function (n) { return n.iter; },\n    'body', function (n) { return n.body; },\n    'orelse', function (n) { return n.orelse; }\n];\nWhileStatement.prototype['_astname'] = 'WhileStatement';\nWhileStatement.prototype['_fields'] = [\n    'test', function (n) { return n.test; },\n    'body', function (n) { return n.body; },\n    'orelse', function (n) { return n.orelse; }\n];\nIfStatement.prototype['_astname'] = 'IfStatement';\nIfStatement.prototype['_fields'] = [\n    'test', function (n) { return n.test; },\n    'consequent', function (n) { return n.consequent; },\n    'alternate', function (n) { return n.alternate; }\n];\nWithStatement.prototype['_astname'] = 'WithStatement';\nWithStatement.prototype['_fields'] = [\n    'context_expr', function (n) { return n.context_expr; },\n    'optional_vars', function (n) { return n.optional_vars; },\n    'body', function (n) { return n.body; }\n];\nRaise.prototype['_astname'] = 'Raise';\nRaise.prototype['_fields'] = [\n    'type', function (n) { return n.type; },\n    'inst', function (n) { return n.inst; },\n    'tback', function (n) { return n.tback; }\n];\nTryExcept.prototype['_astname'] = 'TryExcept';\nTryExcept.prototype['_fields'] = [\n    'body', function (n) { return n.body; },\n    'handlers', function (n) { return n.handlers; },\n    'orelse', function (n) { return n.orelse; }\n];\nTryFinally.prototype['_astname'] = 'TryFinally';\nTryFinally.prototype['_fields'] = [\n    'body', function (n) { return n.body; },\n    'finalbody', function (n) { return n.finalbody; }\n];\nAssert.prototype['_astname'] = 'Assert';\nAssert.prototype['_fields'] = [\n    'test', function (n) { return n.test; },\n    'msg', function (n) { return n.msg; }\n];\nImportStatement.prototype['_astname'] = 'Import';\nImportStatement.prototype['_fields'] = [\n    'names', function (n) { return n.names; }\n];\nImportFrom.prototype['_astname'] = 'ImportFrom';\nImportFrom.prototype['_fields'] = [\n    'module', function (n) { return n.module; },\n    'names', function (n) { return n.names; },\n    'level', function (n) { return n.level; }\n];\nExec.prototype['_astname'] = 'Exec';\nExec.prototype['_fields'] = [\n    'body', function (n) { return n.body; },\n    'globals', function (n) { return n.globals; },\n    'locals', function (n) { return n.locals; }\n];\nGlobal.prototype['_astname'] = 'Global';\nGlobal.prototype['_fields'] = [\n    'names', function (n) { return n.names; }\n];\nNonLocal.prototype['_astname'] = 'NonLocal';\nNonLocal.prototype['_fields'] = [\n    'names', function (n) { return n.names; }\n];\nExpr.prototype['_astname'] = 'Expr';\nExpr.prototype['_fields'] = [\n    'value', function (n) { return n.value; }\n];\nPass.prototype['_astname'] = 'Pass';\nPass.prototype['_fields'] = [];\nBreakStatement.prototype['_astname'] = 'BreakStatement';\nBreakStatement.prototype['_fields'] = [];\nContinueStatement.prototype['_astname'] = 'ContinueStatement';\nContinueStatement.prototype['_fields'] = [];\nBoolOp.prototype['_astname'] = 'BoolOp';\nBoolOp.prototype['_fields'] = [\n    'op', function (n) { return n.op; },\n    'values', function (n) { return n.values; }\n];\nBinOp.prototype['_astname'] = 'BinOp';\nBinOp.prototype['_fields'] = [\n    'left', function (n) { return n.left; },\n    'op', function (n) { return n.op; },\n    'right', function (n) { return n.right; }\n];\nUnaryOp.prototype['_astname'] = 'UnaryOp';\nUnaryOp.prototype['_fields'] = [\n    'op', function (n) { return n.op; },\n    'operand', function (n) { return n.operand; }\n];\nLambda.prototype['_astname'] = 'Lambda';\nLambda.prototype['_fields'] = [\n    'args', function (n) { return n.args; },\n    'body', function (n) { return n.body; }\n];\nIfExp.prototype['_astname'] = 'IfExp';\nIfExp.prototype['_fields'] = [\n    'test', function (n) { return n.test; },\n    'body', function (n) { return n.body; },\n    'orelse', function (n) { return n.orelse; }\n];\nDict.prototype['_astname'] = 'Dict';\nDict.prototype['_fields'] = [\n    'keys', function (n) { return n.keys; },\n    'values', function (n) { return n.values; }\n];\nListComp.prototype['_astname'] = 'ListComp';\nListComp.prototype['_fields'] = [\n    'elt', function (n) { return n.elt; },\n    'generators', function (n) { return n.generators; }\n];\nGeneratorExp.prototype['_astname'] = 'GeneratorExp';\nGeneratorExp.prototype['_fields'] = [\n    'elt', function (n) { return n.elt; },\n    'generators', function (n) { return n.generators; }\n];\nYield.prototype['_astname'] = 'Yield';\nYield.prototype['_fields'] = [\n    'value', function (n) { return n.value; }\n];\nCompare.prototype['_astname'] = 'Compare';\nCompare.prototype['_fields'] = [\n    'left', function (n) { return n.left; },\n    'ops', function (n) { return n.ops; },\n    'comparators', function (n) { return n.comparators; }\n];\nCall.prototype['_astname'] = 'Call';\nCall.prototype['_fields'] = [\n    'func', function (n) { return n.func; },\n    'args', function (n) { return n.args; },\n    'keywords', function (n) { return n.keywords; },\n    'starargs', function (n) { return n.starargs; },\n    'kwargs', function (n) { return n.kwargs; }\n];\nNum.prototype['_astname'] = 'Num';\nNum.prototype['_fields'] = [\n    'n', function (n) { return n.n; }\n];\nStr.prototype['_astname'] = 'Str';\nStr.prototype['_fields'] = [\n    's', function (n) { return n.s; }\n];\nAttribute.prototype['_astname'] = 'Attribute';\nAttribute.prototype['_fields'] = [\n    'value', function (n) { return n.value; },\n    'attr', function (n) { return n.attr; },\n    'ctx', function (n) { return n.ctx; }\n];\nSubscript.prototype['_astname'] = 'Subscript';\nSubscript.prototype['_fields'] = [\n    'value', function (n) { return n.value; },\n    'slice', function (n) { return n.slice; },\n    'ctx', function (n) { return n.ctx; }\n];\nName.prototype['_astname'] = 'Name';\nName.prototype['_fields'] = [\n    'id', function (n) { return n.id; },\n    'ctx', function (n) { return n.ctx; }\n];\nList.prototype['_astname'] = 'List';\nList.prototype['_fields'] = [\n    'elts', function (n) { return n.elts; },\n    'ctx', function (n) { return n.ctx; }\n];\nTuple.prototype['_astname'] = 'Tuple';\nTuple.prototype['_fields'] = [\n    'elts', function (n) { return n.elts; },\n    'ctx', function (n) { return n.ctx; }\n];\nLoad.prototype['_astname'] = 'Load';\nLoad.prototype['_isenum'] = true;\nStore.prototype['_astname'] = 'Store';\nStore.prototype['_isenum'] = true;\nDel.prototype['_astname'] = 'Del';\nDel.prototype['_isenum'] = true;\nAugLoad.prototype['_astname'] = 'AugLoad';\nAugLoad.prototype['_isenum'] = true;\nAugStore.prototype['_astname'] = 'AugStore';\nAugStore.prototype['_isenum'] = true;\nParam.prototype['_astname'] = 'Param';\nParam.prototype['_isenum'] = true;\nEllipsis.prototype['_astname'] = 'Ellipsis';\nEllipsis.prototype['_fields'] = [];\nSlice.prototype['_astname'] = 'Slice';\nSlice.prototype['_fields'] = [\n    'lower', function (n) { return n.lower; },\n    'upper', function (n) { return n.upper; },\n    'step', function (n) { return n.step; }\n];\nExtSlice.prototype['_astname'] = 'ExtSlice';\nExtSlice.prototype['_fields'] = [\n    'dims', function (n) { return n.dims; }\n];\nIndex.prototype['_astname'] = 'Index';\nIndex.prototype['_fields'] = [\n    'value', function (n) { return n.value; }\n];\nAnd.prototype['_astname'] = 'And';\nAnd.prototype['_isenum'] = true;\nOr.prototype['_astname'] = 'Or';\nOr.prototype['_isenum'] = true;\nAdd.prototype['_astname'] = 'Add';\nAdd.prototype['_isenum'] = true;\nSub.prototype['_astname'] = 'Sub';\nSub.prototype['_isenum'] = true;\nMult.prototype['_astname'] = 'Mult';\nMult.prototype['_isenum'] = true;\nDiv.prototype['_astname'] = 'Div';\nDiv.prototype['_isenum'] = true;\nMod.prototype['_astname'] = 'Mod';\nMod.prototype['_isenum'] = true;\nPow.prototype['_astname'] = 'Pow';\nPow.prototype['_isenum'] = true;\nLShift.prototype['_astname'] = 'LShift';\nLShift.prototype['_isenum'] = true;\nRShift.prototype['_astname'] = 'RShift';\nRShift.prototype['_isenum'] = true;\nBitOr.prototype['_astname'] = 'BitOr';\nBitOr.prototype['_isenum'] = true;\nBitXor.prototype['_astname'] = 'BitXor';\nBitXor.prototype['_isenum'] = true;\nBitAnd.prototype['_astname'] = 'BitAnd';\nBitAnd.prototype['_isenum'] = true;\nFloorDiv.prototype['_astname'] = 'FloorDiv';\nFloorDiv.prototype['_isenum'] = true;\nInvert.prototype['_astname'] = 'Invert';\nInvert.prototype['_isenum'] = true;\nNot.prototype['_astname'] = 'Not';\nNot.prototype['_isenum'] = true;\nUAdd.prototype['_astname'] = 'UAdd';\nUAdd.prototype['_isenum'] = true;\nUSub.prototype['_astname'] = 'USub';\nUSub.prototype['_isenum'] = true;\nEq.prototype['_astname'] = 'Eq';\nEq.prototype['_isenum'] = true;\nNotEq.prototype['_astname'] = 'NotEq';\nNotEq.prototype['_isenum'] = true;\nLt.prototype['_astname'] = 'Lt';\nLt.prototype['_isenum'] = true;\nLtE.prototype['_astname'] = 'LtE';\nLtE.prototype['_isenum'] = true;\nGt.prototype['_astname'] = 'Gt';\nGt.prototype['_isenum'] = true;\nGtE.prototype['_astname'] = 'GtE';\nGtE.prototype['_isenum'] = true;\nIs.prototype['_astname'] = 'Is';\nIs.prototype['_isenum'] = true;\nIsNot.prototype['_astname'] = 'IsNot';\nIsNot.prototype['_isenum'] = true;\nIn.prototype['_astname'] = 'In';\nIn.prototype['_isenum'] = true;\nNotIn.prototype['_astname'] = 'NotIn';\nNotIn.prototype['_isenum'] = true;\nComprehension.prototype['_astname'] = 'Comprehension';\nComprehension.prototype['_fields'] = [\n    'target', function (n) { return n.target; },\n    'iter', function (n) { return n.iter; },\n    'ifs', function (n) { return n.ifs; }\n];\nExceptHandler.prototype['_astname'] = 'ExceptHandler';\nExceptHandler.prototype['_fields'] = [\n    'type', function (n) { return n.type; },\n    'name', function (n) { return n.name; },\n    'body', function (n) { return n.body; }\n];\nArguments.prototype['_astname'] = 'Arguments';\nArguments.prototype['_fields'] = [\n    'args', function (n) { return n.args; },\n    'vararg', function (n) { return n.vararg; },\n    'kwarg', function (n) { return n.kwarg; },\n    'defaults', function (n) { return n.defaults; }\n];\nKeyword.prototype['_astname'] = 'Keyword';\nKeyword.prototype['_fields'] = [\n    'arg', function (n) { return n.arg; },\n    'value', function (n) { return n.value; }\n];\nAlias.prototype['_astname'] = 'Alias';\nAlias.prototype['_fields'] = [\n    'name', function (n) { return n.name; },\n    'asname', function (n) { return n.asname; }\n];\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}","import { OpMap, ParseTables } from './tables';\nimport { assert } from './asserts';\nimport { Tokenizer } from './Tokenizer';\nimport { Tokens } from './Tokens';\nimport { tokenNames } from './tokenNames';\n// low level parser to a concrete syntax tree, derived from cpython's lib2to3\n/**\n * @param message\n * @param fileName\n * @param begin\n * @param end\n */\nfunction parseError(message, fileName, begin, end) {\n    var e = new SyntaxError(message /*, fileName*/);\n    e.name = \"ParseError\";\n    e['fileName'] = fileName;\n    if (Array.isArray(begin)) {\n        e['lineNumber'] = begin[0];\n        e['columnNumber'] = begin[1];\n    }\n    return e;\n}\nvar Parser = (function () {\n    /**\n     *\n     * p = new Parser(grammar);\n     * p.setup(start);\n     * foreach input token:\n     *     if p.addtoken(...):\n     *         break\n     * root = p.rootnode\n     *\n     * can throw ParseError\n     */\n    function Parser(filename, grammar) {\n        this.filename = filename;\n        this.grammar = grammar;\n        return this;\n    }\n    Parser.prototype.setup = function (start) {\n        start = start || this.grammar.start;\n        var newnode = {\n            type: start,\n            value: null,\n            context: null,\n            children: []\n        };\n        var stackentry = {\n            dfa: this.grammar.dfas[start],\n            state: 0,\n            node: newnode\n        };\n        this.stack = [stackentry];\n        this.used_names = {};\n    };\n    /**\n     * Add a token; return true if we're done.\n     * @param type\n     * @param value\n     * @param context [start, end, line]\n     */\n    Parser.prototype.addtoken = function (type, value, context) {\n        var ilabel = this.classify(type, value, context);\n        OUTERWHILE: while (true) {\n            var tp = this.stack[this.stack.length - 1];\n            var states = tp.dfa[0];\n            var first = tp.dfa[1];\n            var arcs = states[tp.state];\n            // look for a state with this label\n            for (var a = 0; a < arcs.length; ++a) {\n                var i = arcs[a][0];\n                var newstate = arcs[a][1];\n                var t = this.grammar.labels[i][0];\n                // var v = this.grammar.labels[i][1];\n                if (ilabel === i) {\n                    // look it up in the list of labels\n                    assert(t < 256);\n                    // shift a token; we're done with it\n                    this.shift(type, value, newstate, context);\n                    // pop while we are in an accept-only state\n                    var state = newstate;\n                    while (states[state].length === 1\n                        && states[state][0][0] === 0\n                        && states[state][0][1] === state) {\n                        this.pop();\n                        if (this.stack.length === 0) {\n                            // done!\n                            return true;\n                        }\n                        tp = this.stack[this.stack.length - 1];\n                        state = tp.state;\n                        states = tp.dfa[0];\n                        first = tp.dfa[1];\n                    }\n                    // done with this token\n                    return false;\n                }\n                else if (t >= 256) {\n                    var itsdfa = this.grammar.dfas[t];\n                    var itsfirst = itsdfa[1];\n                    if (itsfirst.hasOwnProperty(ilabel)) {\n                        // push a symbol\n                        this.push(t, this.grammar.dfas[t], newstate, context);\n                        continue OUTERWHILE;\n                    }\n                }\n            }\n            if (findInDfa(arcs, [0, tp.state])) {\n                // an accepting state, pop it and try something else\n                this.pop();\n                if (this.stack.length === 0) {\n                    throw parseError(\"too much input\", this.filename);\n                }\n            }\n            else {\n                // no transition\n                throw parseError(\"bad input\", this.filename, context[0], context[1]);\n            }\n        }\n    };\n    /**\n     * turn a token into a label.\n     * @param type\n     * @param value\n     * @param context [begin, end, line]\n     */\n    Parser.prototype.classify = function (type, value, context) {\n        var ilabel;\n        if (type === Tokens.T_NAME) {\n            this.used_names[value] = true;\n            if (this.grammar.keywords.hasOwnProperty(value)) {\n                ilabel = this.grammar.keywords[value];\n            }\n            if (ilabel) {\n                return ilabel;\n            }\n        }\n        if (this.grammar.tokens.hasOwnProperty(type)) {\n            ilabel = this.grammar.tokens[type];\n        }\n        if (!ilabel) {\n            throw parseError(\"bad token\", this.filename, context[0], context[1]);\n        }\n        return ilabel;\n    };\n    // shift a token\n    Parser.prototype.shift = function (type, value, newstate, context) {\n        var dfa = this.stack[this.stack.length - 1].dfa;\n        // var state = this.stack[this.stack.length - 1].state;\n        var node = this.stack[this.stack.length - 1].node;\n        var newnode = {\n            type: type,\n            value: value,\n            lineno: context[0][0],\n            col_offset: context[0][1],\n            children: null\n        };\n        if (newnode && node.children) {\n            node.children.push(newnode);\n        }\n        this.stack[this.stack.length - 1] = { dfa: dfa, state: newstate, node: node };\n    };\n    // push a nonterminal\n    Parser.prototype.push = function (type, newdfa, newstate, context) {\n        var dfa = this.stack[this.stack.length - 1].dfa;\n        var node = this.stack[this.stack.length - 1].node;\n        this.stack[this.stack.length - 1] = { dfa: dfa, state: newstate, node: node };\n        var newnode = { type: type, value: null, lineno: context[0][0], col_offset: context[0][1], children: [] };\n        this.stack.push({ dfa: newdfa, state: 0, node: newnode });\n    };\n    // pop a nonterminal\n    Parser.prototype.pop = function () {\n        var pop = this.stack.pop();\n        if (pop) {\n            var newnode = pop.node;\n            if (newnode) {\n                if (this.stack.length !== 0) {\n                    var node = this.stack[this.stack.length - 1].node;\n                    if (node.children) {\n                        node.children.push(newnode);\n                    }\n                }\n                else {\n                    this.rootnode = newnode;\n                    this.rootnode.used_names = this.used_names;\n                }\n            }\n        }\n    };\n    return Parser;\n}());\n/**\n * TODO: Rename to existsInDfa.\n * Finds the specified\n * @param a An array of arrays where each element is an array of two integers.\n * @param obj An array containing two integers.\n */\nfunction findInDfa(a, obj) {\n    var i = a.length;\n    while (i--) {\n        if (a[i][0] === obj[0] && a[i][1] === obj[1]) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * parser for interactive input. returns a function that should be called with\n * lines of input as they are entered. the function will return false\n * until the input is complete, when it will return the rootnode of the parse.\n *\n * @param filename\n * @param style root of parse tree (optional)\n */\nfunction makeParser(filename, style) {\n    if (style === undefined)\n        style = \"file_input\";\n    // FIXME: Would be nice to get this typing locked down.\n    var p = new Parser(filename, ParseTables);\n    // for closure's benefit\n    if (style === \"file_input\")\n        p.setup(ParseTables.sym.file_input);\n    else {\n        console.warn(\"TODO: makeParser(style = \" + style + \")\");\n    }\n    var lineno = 1;\n    var column = 0;\n    var prefix = \"\";\n    var T_COMMENT = Tokens.T_COMMENT;\n    var T_NL = Tokens.T_NL;\n    var T_OP = Tokens.T_OP;\n    var tokenizer = new Tokenizer(filename, style === \"single_input\", function tokenizerCallback(type, value, start, end, line) {\n        // var s_lineno = start[0];\n        // var s_column = start[1];\n        /*\n        if (s_lineno !== lineno && s_column !== column)\n        {\n            // todo; update prefix and line/col\n        }\n        */\n        if (type === T_COMMENT || type === T_NL) {\n            prefix += value;\n            lineno = end[0];\n            column = end[1];\n            if (value[value.length - 1] === \"\\n\") {\n                lineno += 1;\n                column = 0;\n            }\n            return undefined;\n        }\n        if (type === T_OP) {\n            type = OpMap[value];\n        }\n        if (p.addtoken(type, value, [start, end, line])) {\n            return true;\n        }\n        return undefined;\n    });\n    return function parseFunc(line) {\n        var ret = tokenizer.generateTokens(line);\n        if (ret) {\n            if (ret !== \"done\") {\n                throw parseError(\"incomplete input\", filename);\n            }\n            return p.rootnode;\n        }\n        return false;\n    };\n}\nexport function parse(filename, input) {\n    var parseFunc = makeParser(filename);\n    if (input.substr(input.length - 1, 1) !== \"\\n\") {\n        input += \"\\n\";\n    }\n    var lines = input.split(\"\\n\");\n    var ret = false;\n    for (var i = 0; i < lines.length; ++i) {\n        ret = parseFunc(lines[i] + ((i === lines.length - 1) ? \"\" : \"\\n\"));\n    }\n    return ret;\n}\nexport function parseTreeDump(n) {\n    var ret = \"\";\n    // non-term\n    if (n.type >= 256) {\n        ret += ParseTables.number2symbol[n.type] + \"\\n\";\n        if (n.children) {\n            for (var i = 0; i < n.children.length; ++i) {\n                ret += parseTreeDump(n.children[i]);\n            }\n        }\n    }\n    else {\n        ret += tokenNames[n.type] + \": \" + n.value + \"\\n\";\n    }\n    return ret;\n}\n","import { Tokens } from './Tokens';\n/**\n * Decodes of the tokens\n */\nexport var tokenNames = {};\ntokenNames[Tokens.T_AMPER] = 'T_AMPER';\ntokenNames[Tokens.T_AMPEREQUAL] = 'T_AMPEREQUAL';\ntokenNames[Tokens.T_AT] = 'T_AT';\ntokenNames[Tokens.T_BACKQUOTE] = 'T_BACKQUOTE';\ntokenNames[Tokens.T_CIRCUMFLEX] = 'T_CIRCUMFLEX';\ntokenNames[Tokens.T_CIRCUMFLEXEQUAL] = 'T_CIRCUMFLEXEQUAL';\ntokenNames[Tokens.T_COLON] = 'T_COLON';\ntokenNames[Tokens.T_COMMA] = 'T_COMMA';\ntokenNames[Tokens.T_COMMENT] = 'T_COMMENT';\ntokenNames[Tokens.T_DEDENT] = 'T_DEDENT';\ntokenNames[Tokens.T_DOT] = 'T_DOT';\ntokenNames[Tokens.T_DOUBLESLASH] = 'T_DOUBLESLASH';\ntokenNames[Tokens.T_DOUBLESLASHEQUAL] = 'T_DOUBLESLASHEQUAL';\ntokenNames[Tokens.T_DOUBLESTAR] = 'T_DOUBLESTAR';\ntokenNames[Tokens.T_DOUBLESTAREQUAL] = 'T_DOUBLESTAREQUAL';\ntokenNames[Tokens.T_ENDMARKER] = 'T_ENDMARKER';\ntokenNames[Tokens.T_EQEQUAL] = 'T_EQEQUAL';\ntokenNames[Tokens.T_EQUAL] = 'T_EQUAL';\ntokenNames[Tokens.T_ERRORTOKEN] = 'T_ERRORTOKEN';\ntokenNames[Tokens.T_GREATER] = 'T_GREATER';\ntokenNames[Tokens.T_GREATEREQUAL] = 'T_GREATEREQUAL';\ntokenNames[Tokens.T_INDENT] = 'T_INDENT';\ntokenNames[Tokens.T_LBRACE] = 'T_LBRACE';\ntokenNames[Tokens.T_LEFTSHIFT] = 'T_LEFTSHIFT';\ntokenNames[Tokens.T_LEFTSHIFTEQUAL] = 'T_LEFTSHIFTEQUAL';\ntokenNames[Tokens.T_LESS] = 'T_LESS';\ntokenNames[Tokens.T_LESSEQUAL] = 'T_LESSEQUAL';\ntokenNames[Tokens.T_LPAR] = 'T_LPAR';\ntokenNames[Tokens.T_LSQB] = 'T_LSQB';\ntokenNames[Tokens.T_MINEQUAL] = 'T_MINEQUAL';\ntokenNames[Tokens.T_MINUS] = 'T_MINUS';\ntokenNames[Tokens.T_N_TOKENS] = 'T_N_TOKENS';\ntokenNames[Tokens.T_NAME] = 'T_NAME';\ntokenNames[Tokens.T_NEWLINE] = 'T_NEWLINE';\ntokenNames[Tokens.T_NL] = 'T_NL';\ntokenNames[Tokens.T_NOTEQUAL] = 'T_NOTEQUAL';\ntokenNames[Tokens.T_NT_OFFSET] = 'T_NT_OFFSET';\ntokenNames[Tokens.T_NUMBER] = 'T_NUMBER';\ntokenNames[Tokens.T_OP] = 'T_OP';\ntokenNames[Tokens.T_PERCENT] = 'T_PERCENT';\ntokenNames[Tokens.T_PERCENTEQUAL] = 'T_PERCENTEQUAL';\ntokenNames[Tokens.T_PLUS] = 'T_PLUS';\ntokenNames[Tokens.T_PLUSEQUAL] = 'T_PLUSEQUAL';\ntokenNames[Tokens.T_RARROW] = 'T_RARROW';\ntokenNames[Tokens.T_RBRACE] = 'T_RBRACE';\ntokenNames[Tokens.T_RIGHTSHIFT] = 'T_RIGHTSHIFT';\ntokenNames[Tokens.T_RPAR] = 'T_RPAR';\ntokenNames[Tokens.T_RSQB] = 'T_RSQB';\ntokenNames[Tokens.T_SEMI] = 'T_SEMI';\ntokenNames[Tokens.T_SLASH] = 'T_SLASH';\ntokenNames[Tokens.T_SLASHEQUAL] = 'T_SLASHEQUAL';\ntokenNames[Tokens.T_STAR] = 'T_STAR';\ntokenNames[Tokens.T_STAREQUAL] = 'T_STAREQUAL';\ntokenNames[Tokens.T_STRING] = 'T_STRING';\ntokenNames[Tokens.T_TILDE] = 'T_TILDE';\ntokenNames[Tokens.T_VBAR] = 'T_VBAR';\ntokenNames[Tokens.T_VBAREQUAL] = 'T_VBAREQUAL';\n","import { assert } from './asserts';\nimport { isArray, isDef, isString } from './base';\nimport { TokenError } from './TokenError';\nimport { Tokens } from './Tokens';\n/* we have to use string and ctor to be able to build patterns up. + on /.../\n    * does something strange. */\n// const Whitespace = \"[ \\\\f\\\\t]*\";\nvar Comment_ = \"#[^\\\\r\\\\n]*\";\nvar Ident = \"[a-zA-Z_]\\\\w*\";\nvar Binnumber = '0[bB][01]*';\nvar Hexnumber = '0[xX][\\\\da-fA-F]*[lL]?';\nvar Octnumber = '0[oO]?[0-7]*[lL]?';\nvar Decnumber = '[1-9]\\\\d*[lL]?';\nvar Intnumber = group(Binnumber, Hexnumber, Octnumber, Decnumber);\nvar Exponent = \"[eE][-+]?\\\\d+\";\nvar Pointfloat = group(\"\\\\d+\\\\.\\\\d*\", \"\\\\.\\\\d+\") + maybe(Exponent);\nvar Expfloat = '\\\\d+' + Exponent;\nvar Floatnumber = group(Pointfloat, Expfloat);\nvar Imagnumber = group(\"\\\\d+[jJ]\", Floatnumber + \"[jJ]\");\nvar Number_ = group(Imagnumber, Floatnumber, Intnumber);\n// tail end of ' string\nvar Single = \"^[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*'\";\n// tail end of \" string\nvar Double_ = '^[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*\"';\n// tail end of ''' string\nvar Single3 = \"[^'\\\\\\\\]*(?:(?:\\\\\\\\.|'(?!''))[^'\\\\\\\\]*)*'''\";\n// tail end of \"\"\" string\nvar Double3 = '[^\"\\\\\\\\]*(?:(?:\\\\\\\\.|\"(?!\"\"))[^\"\\\\\\\\]*)*\"\"\"';\nvar Triple = group(\"[ubUB]?[rR]?'''\", '[ubUB]?[rR]?\"\"\"');\n// const String_ = group(\"[uU]?[rR]?'[^\\\\n'\\\\\\\\]*(?:\\\\\\\\.[^\\\\n'\\\\\\\\]*)*'\", '[uU]?[rR]?\"[^\\\\n\"\\\\\\\\]*(?:\\\\\\\\.[^\\\\n\"\\\\\\\\]*)*\"');\n// Because of leftmost-then-longest match semantics, be sure to put the\n// longest operators first (e.g., if = came before ==, == would get\n// recognized as two instances of =).\nvar Operator = group(\"\\\\*\\\\*=?\", \">>=?\", \"<<=?\", \"<>\", \"!=\", \"//=?\", \"->\", \"[+\\\\-*/%&|^=<>]=?\", \"~\");\nvar Bracket = '[\\\\][(){}]';\nvar Special = group('\\\\r?\\\\n', '[:;.,`@]');\nvar Funny = group(Operator, Bracket, Special);\nvar ContStr = group(\"[uUbB]?[rR]?'[^\\\\n'\\\\\\\\]*(?:\\\\\\\\.[^\\\\n'\\\\\\\\]*)*\" +\n    group(\"'\", '\\\\\\\\\\\\r?\\\\n'), '[uUbB]?[rR]?\"[^\\\\n\"\\\\\\\\]*(?:\\\\\\\\.[^\\\\n\"\\\\\\\\]*)*' +\n    group('\"', '\\\\\\\\\\\\r?\\\\n'));\nvar PseudoExtras = group('\\\\\\\\\\\\r?\\\\n', Comment_, Triple);\n// Need to prefix with \"^\" as we only want to match what's next\nvar PseudoToken = \"^\" + group(PseudoExtras, Number_, Funny, ContStr, Ident);\n// let pseudoprog;\n// let single3prog;\n// let double3prog;\n// const endprogs = {};\nvar triple_quoted = {\n    \"'''\": true, '\"\"\"': true,\n    \"r'''\": true, 'r\"\"\"': true, \"R'''\": true, 'R\"\"\"': true,\n    \"u'''\": true, 'u\"\"\"': true, \"U'''\": true, 'U\"\"\"': true,\n    \"b'''\": true, 'b\"\"\"': true, \"B'''\": true, 'B\"\"\"': true,\n    \"ur'''\": true, 'ur\"\"\"': true, \"Ur'''\": true, 'Ur\"\"\"': true,\n    \"uR'''\": true, 'uR\"\"\"': true, \"UR'''\": true, 'UR\"\"\"': true,\n    \"br'''\": true, 'br\"\"\"': true, \"Br'''\": true, 'Br\"\"\"': true,\n    \"bR'''\": true, 'bR\"\"\"': true, \"BR'''\": true, 'BR\"\"\"': true\n};\nvar single_quoted = {\n    \"'\": true, '\"': true,\n    \"r'\": true, 'r\"': true, \"R'\": true, 'R\"': true,\n    \"u'\": true, 'u\"': true, \"U'\": true, 'U\"': true,\n    \"b'\": true, 'b\"': true, \"B'\": true, 'B\"': true,\n    \"ur'\": true, 'ur\"': true, \"Ur'\": true, 'Ur\"': true,\n    \"uR'\": true, 'uR\"': true, \"UR'\": true, 'UR\"': true,\n    \"br'\": true, 'br\"': true, \"Br'\": true, 'Br\"': true,\n    \"bR'\": true, 'bR\"': true, \"BR'\": true, 'BR\"': true\n};\nvar tabsize = 8;\n/**\n * This is a port of tokenize.py by Ka-Ping Yee.\n *\n * each call to readline should return one line of input as a string, or\n * undefined if it's finished.\n *\n * callback is called for each token with 5 args:\n * 1. the token type\n * 2. the token string\n * 3. [ start_row, start_col ]\n * 4. [ end_row, end_col ]\n * 5. logical line where the token was found, including continuation lines\n *\n * callback can return true to abort.\n */\nvar Tokenizer = (function () {\n    /**\n     * @constructor\n     * @param {string} fileName\n     */\n    function Tokenizer(fileName, interactive, callback) {\n        assert(isString(fileName), \"fileName must be a string\");\n        this.fileName = fileName;\n        this.callback = callback;\n        this.lnum = 0;\n        this.parenlev = 0;\n        this.continued = false;\n        this.namechars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_';\n        this.numchars = '0123456789';\n        this.contstr = '';\n        this.needcont = false;\n        this.contline = undefined;\n        this.indents = [0];\n        this.endprog = /.*/;\n        this.strstart = [-1, -1];\n        this.interactive = interactive;\n        this.doneFunc = function () {\n            for (var i = 1; i < this.indents.length; ++i) {\n                if (this.callback(Tokens.T_DEDENT, '', [this.lnum, 0], [this.lnum, 0], ''))\n                    return 'done';\n            }\n            if (this.callback(Tokens.T_ENDMARKER, '', [this.lnum, 0], [this.lnum, 0], ''))\n                return 'done';\n            return 'failed';\n        };\n    }\n    /**\n     * @method generateTokens\n     * @param line {string}\n     * @return {boolean | string} 'done' or true?\n     */\n    Tokenizer.prototype.generateTokens = function (line) {\n        var endmatch;\n        var pos;\n        var column;\n        var end;\n        var max;\n        // bnm - Move these definitions in this function otherwise test state is preserved between\n        // calls on single3prog and double3prog causing weird errors with having multiple instances\n        // of triple quoted strings in the same program.\n        var pseudoprog = new RegExp(PseudoToken);\n        var single3prog = new RegExp(Single3, \"g\");\n        var double3prog = new RegExp(Double3, \"g\");\n        var endprogs = {\n            \"'\": new RegExp(Single, \"g\"), '\"': new RegExp(Double_, \"g\"),\n            \"'''\": single3prog, '\"\"\"': double3prog,\n            \"r'''\": single3prog, 'r\"\"\"': double3prog,\n            \"u'''\": single3prog, 'u\"\"\"': double3prog,\n            \"b'''\": single3prog, 'b\"\"\"': double3prog,\n            \"ur'''\": single3prog, 'ur\"\"\"': double3prog,\n            \"br'''\": single3prog, 'br\"\"\"': double3prog,\n            \"R'''\": single3prog, 'R\"\"\"': double3prog,\n            \"U'''\": single3prog, 'U\"\"\"': double3prog,\n            \"B'''\": single3prog, 'B\"\"\"': double3prog,\n            \"uR'''\": single3prog, 'uR\"\"\"': double3prog,\n            \"Ur'''\": single3prog, 'Ur\"\"\"': double3prog,\n            \"UR'''\": single3prog, 'UR\"\"\"': double3prog,\n            \"bR'''\": single3prog, 'bR\"\"\"': double3prog,\n            \"Br'''\": single3prog, 'Br\"\"\"': double3prog,\n            \"BR'''\": single3prog, 'BR\"\"\"': double3prog,\n            'r': null, 'R': null,\n            'u': null, 'U': null,\n            'b': null, 'B': null\n        };\n        if (!line)\n            line = '';\n        this.lnum += 1;\n        pos = 0;\n        max = line.length;\n        if (this.contstr.length > 0) {\n            if (!line) {\n                throw new TokenError(\"EOF in multi-line string\", this.fileName, this.strstart[0], this.strstart[1]);\n            }\n            this.endprog.lastIndex = 0;\n            endmatch = this.endprog.test(line);\n            if (endmatch) {\n                pos = end = this.endprog.lastIndex;\n                if (this.callback(Tokens.T_STRING, this.contstr + line.substring(0, end), this.strstart, [this.lnum, end], this.contline + line))\n                    return 'done';\n                this.contstr = '';\n                this.needcont = false;\n                this.contline = undefined;\n            }\n            else if (this.needcont && line.substring(line.length - 2) !== \"\\\\\\n\" && line.substring(line.length - 3) !== \"\\\\\\r\\n\") {\n                if (this.callback(Tokens.T_ERRORTOKEN, this.contstr + line, this.strstart, [this.lnum, line.length], this.contline)) {\n                    return 'done';\n                }\n                this.contstr = '';\n                this.contline = undefined;\n                return false;\n            }\n            else {\n                this.contstr += line;\n                this.contline = this.contline + line;\n                return false;\n            }\n        }\n        else if (this.parenlev === 0 && !this.continued) {\n            if (!line)\n                return this.doneFunc();\n            column = 0;\n            while (pos < max) {\n                if (line.charAt(pos) === ' ')\n                    column += 1;\n                else if (line.charAt(pos) === '\\t')\n                    column = (column / tabsize + 1) * tabsize;\n                else if (line.charAt(pos) === '\\f')\n                    column = 0;\n                else\n                    break;\n                pos = pos + 1;\n            }\n            if (pos === max)\n                return this.doneFunc();\n            if (\"#\\r\\n\".indexOf(line.charAt(pos)) !== -1) {\n                if (line.charAt(pos) === '#') {\n                    var comment_token = rstrip(line.substring(pos), '\\r\\n');\n                    var nl_pos = pos + comment_token.length;\n                    if (this.callback(Tokens.T_COMMENT, comment_token, [this.lnum, pos], [this.lnum, pos + comment_token.length], line)) {\n                        return 'done';\n                    }\n                    if (this.callback(Tokens.T_NL, line.substring(nl_pos), [this.lnum, nl_pos], [this.lnum, line.length], line)) {\n                        return 'done';\n                    }\n                    return false;\n                }\n                else {\n                    if (this.callback(Tokens.T_NL, line.substring(pos), [this.lnum, pos], [this.lnum, line.length], line))\n                        return 'done';\n                    if (!this.interactive)\n                        return false;\n                }\n            }\n            if (column > this.indents[this.indents.length - 1]) {\n                this.indents.push(column);\n                if (this.callback(Tokens.T_INDENT, line.substring(0, pos), [this.lnum, 0], [this.lnum, pos], line))\n                    return 'done';\n            }\n            while (column < this.indents[this.indents.length - 1]) {\n                if (!contains(this.indents, column)) {\n                    throw indentationError(\"unindent does not match any outer indentation level\", this.fileName, [this.lnum, 0], [this.lnum, pos], line);\n                }\n                this.indents.splice(this.indents.length - 1, 1);\n                if (this.callback(Tokens.T_DEDENT, '', [this.lnum, pos], [this.lnum, pos], line)) {\n                    return 'done';\n                }\n            }\n        }\n        else {\n            if (!line) {\n                throw new TokenError(\"EOF in multi-line statement\", this.fileName, this.lnum, 0);\n            }\n            this.continued = false;\n        }\n        while (pos < max) {\n            // js regexes don't return any info about matches, other than the\n            // content. we'd like to put a \\w+ before pseudomatch, but then we\n            // can't get any data\n            var capos = line.charAt(pos);\n            while (capos === ' ' || capos === '\\f' || capos === '\\t') {\n                pos += 1;\n                capos = line.charAt(pos);\n            }\n            pseudoprog.lastIndex = 0;\n            var pseudomatch = pseudoprog.exec(line.substring(pos));\n            if (pseudomatch) {\n                var start = pos;\n                end = start + pseudomatch[1].length;\n                var spos = [this.lnum, start];\n                var epos = [this.lnum, end];\n                pos = end;\n                var token = line.substring(start, end);\n                var initial = line.charAt(start);\n                if (this.numchars.indexOf(initial) !== -1 || (initial === '.' && token !== '.')) {\n                    if (this.callback(Tokens.T_NUMBER, token, spos, epos, line))\n                        return 'done';\n                }\n                else if (initial === '\\r' || initial === '\\n') {\n                    var newl = Tokens.T_NEWLINE;\n                    if (this.parenlev > 0)\n                        newl = Tokens.T_NL;\n                    if (this.callback(newl, token, spos, epos, line))\n                        return 'done';\n                }\n                else if (initial === '#') {\n                    if (this.callback(Tokens.T_COMMENT, token, spos, epos, line))\n                        return 'done';\n                }\n                else if (triple_quoted.hasOwnProperty(token)) {\n                    this.endprog = endprogs[token];\n                    this.endprog.lastIndex = 0;\n                    endmatch = this.endprog.test(line.substring(pos));\n                    if (endmatch) {\n                        pos = this.endprog.lastIndex + pos;\n                        token = line.substring(start, pos);\n                        if (this.callback(Tokens.T_STRING, token, spos, [this.lnum, pos], line))\n                            return 'done';\n                    }\n                    else {\n                        this.strstart = [this.lnum, start];\n                        this.contstr = line.substring(start);\n                        this.contline = line;\n                        return false;\n                    }\n                }\n                else if (single_quoted.hasOwnProperty(initial) ||\n                    single_quoted.hasOwnProperty(token.substring(0, 2)) ||\n                    single_quoted.hasOwnProperty(token.substring(0, 3))) {\n                    if (token[token.length - 1] === '\\n') {\n                        this.strstart = [this.lnum, start];\n                        this.endprog = endprogs[initial] || endprogs[token[1]] || endprogs[token[2]];\n                        this.contstr = line.substring(start);\n                        this.needcont = true;\n                        this.contline = line;\n                        return false;\n                    }\n                    else {\n                        if (this.callback(Tokens.T_STRING, token, spos, epos, line))\n                            return 'done';\n                    }\n                }\n                else if (this.namechars.indexOf(initial) !== -1) {\n                    if (this.callback(Tokens.T_NAME, token, spos, epos, line))\n                        return 'done';\n                }\n                else if (initial === '\\\\') {\n                    if (this.callback(Tokens.T_NL, token, spos, [this.lnum, pos], line))\n                        return 'done';\n                    this.continued = true;\n                }\n                else {\n                    if ('([{'.indexOf(initial) !== -1)\n                        this.parenlev += 1;\n                    else if (')]}'.indexOf(initial) !== -1)\n                        this.parenlev -= 1;\n                    if (this.callback(Tokens.T_OP, token, spos, epos, line))\n                        return 'done';\n                }\n            }\n            else {\n                if (this.callback(Tokens.T_ERRORTOKEN, line.charAt(pos), [this.lnum, pos], [this.lnum, pos + 1], line))\n                    return 'done';\n                pos += 1;\n            }\n        }\n        return false;\n    };\n    return Tokenizer;\n}());\nexport { Tokenizer };\n/**\n * Not sure who needs this yet.\n */\nTokenizer.Tokens = Tokens;\n/** @param {...*} x */\nfunction group(x, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n    var args = Array.prototype.slice.call(arguments);\n    return '(' + args.join('|') + ')';\n}\n/** @param {...*} x */\n// function any(x) { return group.apply(null, arguments) + \"*\"; }\n/** @param {...*} x */\nfunction maybe(x) { return group.apply(null, arguments) + \"?\"; }\nfunction contains(a, obj) {\n    var i = a.length;\n    while (i--) {\n        if (a[i] === obj) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction rstrip(input, what) {\n    for (var i = input.length; i > 0; --i) {\n        if (what.indexOf(input.charAt(i - 1)) === -1)\n            break;\n    }\n    return input.substring(0, i);\n}\n/**\n * @param {string} message\n * @param {string} fileName\n * @param {Array.<number>} begin\n * @param {Array.<number>} end\n * @param {string|undefined} text\n */\nfunction indentationError(message, fileName, begin, end, text) {\n    if (!isArray(begin)) {\n        throw new Error(\"begin must be Array.<number>\");\n    }\n    if (!isArray(end)) {\n        throw new Error(\"end must be Array.<number>\");\n    }\n    var e = new SyntaxError(message /*, fileName*/);\n    e.name = \"IndentationError\";\n    e['fileName'] = fileName;\n    if (isDef(begin)) {\n        e['lineNumber'] = begin[0];\n        e['columnNumber'] = begin[1];\n    }\n    return e;\n}\n","import { assert } from './asserts';\nimport { isNumber, isString } from './base';\n/**\n *\n */\nvar TokenError = (function () {\n    function TokenError(message, fileName, lineNumber, columnNumber) {\n        assert(isString(message), \"message must be a string\");\n        assert(isString(fileName), \"fileName must be a string\");\n        assert(isNumber(lineNumber), \"lineNumber must be a number\");\n        assert(isNumber(columnNumber), \"columnNumber must be a number\");\n        this.name = \"TokenError\";\n        this.message = message;\n        this.fileName = fileName;\n        this.lineNumber = lineNumber;\n        this.columnNumber = columnNumber;\n    }\n    return TokenError;\n}());\nexport { TokenError };\n","/**\n * Null function used for default values of callbacks, etc.\n * @return {void} Nothing.\n */\n/**\n * Null function used for default values of callbacks, etc.\n * @return {void} Nothing.\n */ export function nullFunction() { }\n/**\n * When defining a class Foo with an abstract method bar(), you can do:\n * Foo.prototype.bar = base.abstractMethod\n *\n * Now if a subclass of Foo fails to override bar(), an error will be thrown\n * when bar() is invoked.\n *\n * Note: This does not take the name of the function to override as an argument\n * because that would make it more difficult to obfuscate our JavaScript code.\n *\n * @type {!Function}\n * @throws {Error} when invoked to indicate the method should be overridden.\n */\nexport function abstractMethod() {\n    throw Error('unimplemented abstract method');\n}\n// ==============================================================================\n// Language Enhancements\n// ==============================================================================\n/**\n * This is a \"fixed\" version of the typeof operator.  It differs from the typeof\n * operator in such a way that null returns 'null' and arrays return 'array'.\n * @param {*} value The value to get the type of.\n * @return {string} The name of the type.\n */\nexport function typeOf(value) {\n    var s = typeof value;\n    if (s === 'object') {\n        if (value) {\n            // Check these first, so we can avoid calling Object.prototype.toString if\n            // possible.\n            //\n            // IE improperly marshals tyepof across execution contexts, but a\n            // cross-context object will still return false for \"instanceof Object\".\n            if (value instanceof Array) {\n                return 'array';\n            }\n            else if (value instanceof Object) {\n                return s;\n            }\n            // HACK: In order to use an Object prototype method on the arbitrary\n            //   value, the compiler requires the value be cast to type Object,\n            //   even though the ECMA spec explicitly allows it.\n            var className = Object.prototype.toString.call(\n            /** @type {Object} */ (value));\n            // In Firefox 3.6, attempting to access iframe window objects' length\n            // property throws an NS_ERROR_FAILURE, so we need to special-case it\n            // here.\n            if (className === '[object Window]') {\n                return 'object';\n            }\n            // We cannot always use constructor == Array or instanceof Array because\n            // different frames have different Array objects. In IE6, if the iframe\n            // where the array was created is destroyed, the array loses its\n            // prototype. Then dereferencing val.splice here throws an exception, so\n            // we can't use base.isFunction. Calling typeof directly returns 'unknown'\n            // so that will work. In this case, this function will return false and\n            // most array functions will still work because the array is still\n            // array-like (supports length and []) even though it has lost its\n            // prototype.\n            // Mark Miller noticed that Object.prototype.toString\n            // allows access to the unforgeable [[Class]] property.\n            //  15.2.4.2 Object.prototype.toString ( )\n            //  When the toString method is called, the following steps are taken:\n            //      1. Get the [[Class]] property of this object.\n            //      2. Compute a string value by concatenating the three strings\n            //         \"[object \", Result(1), and \"]\".\n            //      3. Return Result(2).\n            // and this behavior survives the destruction of the execution context.\n            if ((className === '[object Array]' ||\n                // In IE all non value types are wrapped as objects across window\n                // boundaries (not iframe though) so we have to do object detection\n                // for this edge case.\n                typeof value.length === 'number' &&\n                    typeof value.splice !== 'undefined' &&\n                    typeof value.propertyIsEnumerable !== 'undefined' &&\n                    !value.propertyIsEnumerable('splice'))) {\n                return 'array';\n            }\n            // HACK: There is still an array case that fails.\n            //     function ArrayImpostor() {}\n            //     ArrayImpostor.prototype = [];\n            //     var impostor = new ArrayImpostor;\n            // this can be fixed by getting rid of the fast path\n            // (value instanceof Array) and solely relying on\n            // (value && Object.prototype.toString.vall(value) === '[object Array]')\n            // but that would require many more function calls and is not warranted\n            // unless closure code is receiving objects from untrusted sources.\n            // IE in cross-window calls does not correctly marshal the function type\n            // (it appears just as an object) so we cannot use just typeof val ==\n            // 'function'. However, if the object has a call property, it is a\n            // function.\n            if ((className === '[object Function]' ||\n                typeof value.call !== 'undefined' &&\n                    typeof value.propertyIsEnumerable !== 'undefined' &&\n                    !value.propertyIsEnumerable('call'))) {\n                return 'function';\n            }\n        }\n        else {\n            return 'null';\n        }\n    }\n    else if (s === 'function' && typeof value.call === 'undefined') {\n        // In Safari typeof nodeList returns 'function', and on Firefox typeof\n        // behaves similarly for HTML{Applet,Embed,Object}, Elements and RegExps. We\n        // would like to return object for those and we can detect an invalid\n        // function by making sure that the function object has a call method.\n        return 'object';\n    }\n    return s;\n}\n/**\n * Returns true if the specified value is not undefined.\n * WARNING: Do not use this to test if an object has a property. Use the in\n * operator instead.  Additionally, this function assumes that the global\n * undefined variable has not been redefined.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is defined.\n */\nexport function isDef(val) {\n    return val !== undefined;\n}\n/**\n * Returns true if the specified value is null.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is null.\n */\nexport function isNull(val) {\n    return val === null;\n}\n/**\n * Returns true if the specified value is defined and not null.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is defined and not null.\n */\nexport function isDefAndNotNull(val) {\n    // Note that undefined == null.\n    return val != null;\n}\n/**\n * Returns true if the specified value is an array.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\nexport function isArray(val) {\n    return typeOf(val) === 'array';\n}\n/**\n * Returns true if the object looks like an array. To qualify as array like\n * the value needs to be either a NodeList or an object with a Number length\n * property.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\nexport function isArrayLike(val) {\n    var type = typeOf(val);\n    return type === 'array' || type === 'object' && typeof val.length === 'number';\n}\n/**\n * Returns true if the object looks like a Date. To qualify as Date-like the\n * value needs to be an object and have a getFullYear() function.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a like a Date.\n */\nexport function isDateLike(val) {\n    return isObject(val) && typeof val.getFullYear === 'function';\n}\n/**\n * Returns true if the specified value is a string.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a string.\n */\nexport function isString(val) {\n    return typeof val === 'string';\n}\n/**\n * Returns true if the specified value is a boolean.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is boolean.\n */\nexport function isBoolean(val) {\n    return typeof val === 'boolean';\n}\n/**\n * Returns true if the specified value is a number.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a number.\n */\nexport function isNumber(val) {\n    return typeof val === 'number';\n}\n/**\n * Returns true if the specified value is a function.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a function.\n */\nexport function isFunction(val) {\n    return typeOf(val) === 'function';\n}\n/**\n * Returns true if the specified value is an object.  This includes arrays and\n * functions.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is an object.\n */\nexport function isObject(val) {\n    var type = typeof val;\n    return type === 'object' && val !== null || type === 'function';\n    // return Object(val) === val also works, but is slower, especially if val is\n    // not an object.\n}\n","/**\n * We're looking for something that is truthy, not just true.\n */\n/**\n * We're looking for something that is truthy, not just true.\n */ export function assert(condition, message) {\n    if (!condition) {\n        throw new Error(message);\n    }\n}\nexport function fail(message) {\n    assert(false, message);\n}\n","// DO NOT MODIFY. File automatically generated by pgen/parser/main.py\nimport { Tokens } from './Tokens';\n/**\n * Mapping from operator textual symbols to token symbolic constants.\n */\nexport var OpMap = {\n    \"(\": Tokens.T_LPAR,\n    \")\": Tokens.T_RPAR,\n    \"[\": Tokens.T_LSQB,\n    \"]\": Tokens.T_RSQB,\n    \":\": Tokens.T_COLON,\n    \",\": Tokens.T_COMMA,\n    \";\": Tokens.T_SEMI,\n    \"+\": Tokens.T_PLUS,\n    \"-\": Tokens.T_MINUS,\n    \"*\": Tokens.T_STAR,\n    \"/\": Tokens.T_SLASH,\n    \"|\": Tokens.T_VBAR,\n    \"&\": Tokens.T_AMPER,\n    \"<\": Tokens.T_LESS,\n    \">\": Tokens.T_GREATER,\n    \"=\": Tokens.T_EQUAL,\n    \".\": Tokens.T_DOT,\n    \"%\": Tokens.T_PERCENT,\n    \"`\": Tokens.T_BACKQUOTE,\n    \"{\": Tokens.T_LBRACE,\n    \"}\": Tokens.T_RBRACE,\n    \"@\": Tokens.T_AT,\n    \"==\": Tokens.T_EQEQUAL,\n    \"!=\": Tokens.T_NOTEQUAL,\n    \"<>\": Tokens.T_NOTEQUAL,\n    \"<=\": Tokens.T_LESSEQUAL,\n    \">=\": Tokens.T_GREATEREQUAL,\n    \"~\": Tokens.T_TILDE,\n    \"^\": Tokens.T_CIRCUMFLEX,\n    \"<<\": Tokens.T_LEFTSHIFT,\n    \">>\": Tokens.T_RIGHTSHIFT,\n    \"**\": Tokens.T_DOUBLESTAR,\n    \"+=\": Tokens.T_PLUSEQUAL,\n    \"-=\": Tokens.T_MINEQUAL,\n    \"*=\": Tokens.T_STAREQUAL,\n    \"/=\": Tokens.T_SLASHEQUAL,\n    \"%=\": Tokens.T_PERCENTEQUAL,\n    \"&=\": Tokens.T_AMPEREQUAL,\n    \"|=\": Tokens.T_VBAREQUAL,\n    \"^=\": Tokens.T_CIRCUMFLEXEQUAL,\n    \"<<=\": Tokens.T_LEFTSHIFTEQUAL,\n    \">>=\": Tokens.T_RIGHTSHIFTEQUAL,\n    \"**=\": Tokens.T_DOUBLESTAREQUAL,\n    \"//\": Tokens.T_DOUBLESLASH,\n    \"//=\": Tokens.T_DOUBLESLASHEQUAL,\n    \"->\": Tokens.T_RARROW\n};\n/**\n *\n */\nexport var ParseTables = {\n    sym: { AndExpr: 257,\n        ArithmeticExpr: 258,\n        AtomExpr: 259,\n        BitwiseAndExpr: 260,\n        BitwiseOrExpr: 261,\n        BitwiseXorExpr: 262,\n        ComparisonExpr: 263,\n        ExprList: 264,\n        ExprStmt: 265,\n        GeometricExpr: 266,\n        GlobalStmt: 267,\n        IfExpr: 268,\n        LambdaExpr: 269,\n        NonLocalStmt: 270,\n        NotExpr: 271,\n        OrExpr: 272,\n        PowerExpr: 273,\n        ShiftExpr: 274,\n        UnaryExpr: 275,\n        YieldExpr: 276,\n        arglist: 277,\n        argument: 278,\n        assert_stmt: 279,\n        augassign: 280,\n        break_stmt: 281,\n        classdef: 282,\n        comp_op: 283,\n        compound_stmt: 284,\n        continue_stmt: 285,\n        decorated: 286,\n        decorator: 287,\n        decorators: 288,\n        del_stmt: 289,\n        dictmaker: 290,\n        dotted_as_name: 291,\n        dotted_as_names: 292,\n        dotted_name: 293,\n        encoding_decl: 294,\n        eval_input: 295,\n        except_clause: 296,\n        exec_stmt: 297,\n        file_input: 298,\n        flow_stmt: 299,\n        for_stmt: 300,\n        fpdef: 301,\n        fplist: 302,\n        funcdef: 303,\n        gen_for: 304,\n        gen_if: 305,\n        gen_iter: 306,\n        if_stmt: 307,\n        import_as_name: 308,\n        import_as_names: 309,\n        import_from: 310,\n        import_name: 311,\n        import_stmt: 312,\n        list_for: 313,\n        list_if: 314,\n        list_iter: 315,\n        listmaker: 316,\n        old_LambdaExpr: 317,\n        old_test: 318,\n        parameters: 319,\n        pass_stmt: 320,\n        print_stmt: 321,\n        raise_stmt: 322,\n        return_stmt: 323,\n        simple_stmt: 324,\n        single_input: 256,\n        sliceop: 325,\n        small_stmt: 326,\n        stmt: 327,\n        subscript: 328,\n        subscriptlist: 329,\n        suite: 330,\n        testlist: 331,\n        testlist1: 332,\n        testlist_gexp: 333,\n        testlist_safe: 334,\n        trailer: 335,\n        try_stmt: 336,\n        varargslist: 337,\n        while_stmt: 338,\n        with_stmt: 339,\n        with_var: 340,\n        yield_stmt: 341 },\n    number2symbol: { 256: 'single_input',\n        257: 'AndExpr',\n        258: 'ArithmeticExpr',\n        259: 'AtomExpr',\n        260: 'BitwiseAndExpr',\n        261: 'BitwiseOrExpr',\n        262: 'BitwiseXorExpr',\n        263: 'ComparisonExpr',\n        264: 'ExprList',\n        265: 'ExprStmt',\n        266: 'GeometricExpr',\n        267: 'GlobalStmt',\n        268: 'IfExpr',\n        269: 'LambdaExpr',\n        270: 'NonLocalStmt',\n        271: 'NotExpr',\n        272: 'OrExpr',\n        273: 'PowerExpr',\n        274: 'ShiftExpr',\n        275: 'UnaryExpr',\n        276: 'YieldExpr',\n        277: 'arglist',\n        278: 'argument',\n        279: 'assert_stmt',\n        280: 'augassign',\n        281: 'break_stmt',\n        282: 'classdef',\n        283: 'comp_op',\n        284: 'compound_stmt',\n        285: 'continue_stmt',\n        286: 'decorated',\n        287: 'decorator',\n        288: 'decorators',\n        289: 'del_stmt',\n        290: 'dictmaker',\n        291: 'dotted_as_name',\n        292: 'dotted_as_names',\n        293: 'dotted_name',\n        294: 'encoding_decl',\n        295: 'eval_input',\n        296: 'except_clause',\n        297: 'exec_stmt',\n        298: 'file_input',\n        299: 'flow_stmt',\n        300: 'for_stmt',\n        301: 'fpdef',\n        302: 'fplist',\n        303: 'funcdef',\n        304: 'gen_for',\n        305: 'gen_if',\n        306: 'gen_iter',\n        307: 'if_stmt',\n        308: 'import_as_name',\n        309: 'import_as_names',\n        310: 'import_from',\n        311: 'import_name',\n        312: 'import_stmt',\n        313: 'list_for',\n        314: 'list_if',\n        315: 'list_iter',\n        316: 'listmaker',\n        317: 'old_LambdaExpr',\n        318: 'old_test',\n        319: 'parameters',\n        320: 'pass_stmt',\n        321: 'print_stmt',\n        322: 'raise_stmt',\n        323: 'return_stmt',\n        324: 'simple_stmt',\n        325: 'sliceop',\n        326: 'small_stmt',\n        327: 'stmt',\n        328: 'subscript',\n        329: 'subscriptlist',\n        330: 'suite',\n        331: 'testlist',\n        332: 'testlist1',\n        333: 'testlist_gexp',\n        334: 'testlist_safe',\n        335: 'trailer',\n        336: 'try_stmt',\n        337: 'varargslist',\n        338: 'while_stmt',\n        339: 'with_stmt',\n        340: 'with_var',\n        341: 'yield_stmt' },\n    dfas: { 256: [[[[1, 1], [2, 1], [3, 2]], [[0, 1]], [[2, 1]]],\n            { 2: 1,\n                4: 1,\n                5: 1,\n                6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                10: 1,\n                11: 1,\n                12: 1,\n                13: 1,\n                14: 1,\n                15: 1,\n                16: 1,\n                17: 1,\n                18: 1,\n                19: 1,\n                20: 1,\n                21: 1,\n                22: 1,\n                23: 1,\n                24: 1,\n                25: 1,\n                26: 1,\n                27: 1,\n                28: 1,\n                29: 1,\n                30: 1,\n                31: 1,\n                32: 1,\n                33: 1,\n                34: 1,\n                35: 1,\n                36: 1,\n                37: 1 }],\n        257: [[[[38, 1]], [[39, 0], [0, 1]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1 }],\n        258: [[[[40, 1]], [[25, 0], [37, 0], [0, 1]]],\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\n        259: [[[[18, 1], [8, 2], [9, 5], [29, 4], [32, 3], [14, 6], [21, 2]],\n                [[18, 1], [0, 1]],\n                [[0, 2]],\n                [[41, 7], [42, 2]],\n                [[43, 2], [44, 8], [45, 8]],\n                [[46, 9], [47, 2]],\n                [[48, 10]],\n                [[42, 2]],\n                [[43, 2]],\n                [[47, 2]],\n                [[14, 2]]],\n            { 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 29: 1, 32: 1 }],\n        260: [[[[49, 1]], [[50, 0], [0, 1]]],\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\n        261: [[[[51, 1]], [[52, 0], [0, 1]]],\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\n        262: [[[[53, 1]], [[54, 0], [0, 1]]],\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\n        263: [[[[55, 1]], [[56, 0], [0, 1]]],\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\n        264: [[[[55, 1]], [[57, 2], [0, 1]], [[55, 1], [0, 2]]],\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\n        265: [[[[58, 1]],\n                [[59, 2], [60, 3], [0, 1]],\n                [[58, 4], [45, 4]],\n                [[58, 5], [45, 5]],\n                [[0, 4]],\n                [[60, 3], [0, 5]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1 }],\n        266: [[[[61, 1]], [[62, 0], [63, 0], [64, 0], [65, 0], [0, 1]]],\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\n        267: [[[[27, 1]], [[21, 2]], [[57, 1], [0, 2]]], { 27: 1 }],\n        268: [[[[66, 1], [67, 2]],\n                [[0, 1]],\n                [[31, 3], [0, 2]],\n                [[67, 4]],\n                [[68, 5]],\n                [[69, 1]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1 }],\n        269: [[[[11, 1]], [[70, 2], [71, 3]], [[69, 4]], [[70, 2]], [[0, 4]]],\n            { 11: 1 }],\n        270: [[[[13, 1]], [[21, 2]], [[57, 1], [0, 2]]], { 13: 1 }],\n        271: [[[[7, 1], [72, 2]], [[38, 2]], [[0, 2]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1 }],\n        272: [[[[73, 1]], [[74, 0], [0, 1]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1 }],\n        273: [[[[75, 1]], [[76, 1], [77, 2], [0, 1]], [[49, 3]], [[0, 3]]],\n            { 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 29: 1, 32: 1 }],\n        274: [[[[78, 1]], [[79, 0], [80, 0], [0, 1]]],\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\n        275: [[[[25, 1], [6, 1], [37, 1], [81, 2]], [[49, 2]], [[0, 2]]],\n            { 6: 1, 8: 1, 9: 1, 14: 1, 18: 1, 21: 1, 25: 1, 29: 1, 32: 1, 37: 1 }],\n        276: [[[[26, 1]], [[58, 2], [0, 1]], [[0, 2]]], { 26: 1 }],\n        277: [[[[63, 1], [82, 2], [77, 3]],\n                [[69, 4]],\n                [[57, 5], [0, 2]],\n                [[69, 6]],\n                [[57, 7], [0, 4]],\n                [[63, 1], [82, 2], [77, 3], [0, 5]],\n                [[0, 6]],\n                [[82, 4], [77, 3]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1,\n                63: 1,\n                77: 1 }],\n        278: [[[[69, 1]], [[83, 2], [60, 3], [0, 1]], [[0, 2]], [[69, 2]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1 }],\n        279: [[[[20, 1]], [[69, 2]], [[57, 3], [0, 2]], [[69, 4]], [[0, 4]]],\n            { 20: 1 }],\n        280: [[[[84, 1],\n                    [85, 1],\n                    [86, 1],\n                    [87, 1],\n                    [88, 1],\n                    [89, 1],\n                    [90, 1],\n                    [91, 1],\n                    [92, 1],\n                    [93, 1],\n                    [94, 1],\n                    [95, 1]],\n                [[0, 1]]],\n            { 84: 1,\n                85: 1,\n                86: 1,\n                87: 1,\n                88: 1,\n                89: 1,\n                90: 1,\n                91: 1,\n                92: 1,\n                93: 1,\n                94: 1,\n                95: 1 }],\n        281: [[[[33, 1]], [[0, 1]]], { 33: 1 }],\n        282: [[[[10, 1]],\n                [[21, 2]],\n                [[70, 3], [29, 4]],\n                [[96, 5]],\n                [[43, 6], [58, 7]],\n                [[0, 5]],\n                [[70, 3]],\n                [[43, 6]]],\n            { 10: 1 }],\n        283: [[[[97, 1],\n                    [98, 1],\n                    [7, 2],\n                    [99, 1],\n                    [97, 1],\n                    [100, 1],\n                    [101, 1],\n                    [102, 3],\n                    [103, 1],\n                    [104, 1]],\n                [[0, 1]],\n                [[100, 1]],\n                [[7, 1], [0, 3]]],\n            { 7: 1, 97: 1, 98: 1, 99: 1, 100: 1, 101: 1, 102: 1, 103: 1, 104: 1 }],\n        284: [[[[105, 1],\n                    [106, 1],\n                    [107, 1],\n                    [108, 1],\n                    [109, 1],\n                    [110, 1],\n                    [111, 1],\n                    [112, 1]],\n                [[0, 1]]],\n            { 4: 1, 10: 1, 15: 1, 17: 1, 28: 1, 31: 1, 35: 1, 36: 1 }],\n        285: [[[[34, 1]], [[0, 1]]], { 34: 1 }],\n        286: [[[[113, 1]], [[111, 2], [108, 2]], [[0, 2]]], { 35: 1 }],\n        287: [[[[35, 1]],\n                [[114, 2]],\n                [[2, 4], [29, 3]],\n                [[43, 5], [115, 6]],\n                [[0, 4]],\n                [[2, 4]],\n                [[43, 5]]],\n            { 35: 1 }],\n        288: [[[[116, 1]], [[116, 1], [0, 1]]], { 35: 1 }],\n        289: [[[[22, 1]], [[117, 2]], [[0, 2]]], { 22: 1 }],\n        290: [[[[69, 1]],\n                [[70, 2]],\n                [[69, 3]],\n                [[57, 4], [0, 3]],\n                [[69, 1], [0, 4]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1 }],\n        291: [[[[114, 1]], [[118, 2], [0, 1]], [[21, 3]], [[0, 3]]], { 21: 1 }],\n        292: [[[[119, 1]], [[57, 0], [0, 1]]], { 21: 1 }],\n        293: [[[[21, 1]], [[120, 0], [0, 1]]], { 21: 1 }],\n        294: [[[[21, 1]], [[0, 1]]], { 21: 1 }],\n        295: [[[[58, 1]], [[2, 1], [121, 2]], [[0, 2]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1 }],\n        296: [[[[122, 1]],\n                [[69, 2], [0, 1]],\n                [[118, 3], [57, 3], [0, 2]],\n                [[69, 4]],\n                [[0, 4]]],\n            { 122: 1 }],\n        297: [[[[16, 1]],\n                [[55, 2]],\n                [[100, 3], [0, 2]],\n                [[69, 4]],\n                [[57, 5], [0, 4]],\n                [[69, 6]],\n                [[0, 6]]],\n            { 16: 1 }],\n        298: [[[[2, 0], [121, 1], [123, 0]], [[0, 1]]],\n            { 2: 1,\n                4: 1,\n                5: 1,\n                6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                10: 1,\n                11: 1,\n                12: 1,\n                13: 1,\n                14: 1,\n                15: 1,\n                16: 1,\n                17: 1,\n                18: 1,\n                19: 1,\n                20: 1,\n                21: 1,\n                22: 1,\n                23: 1,\n                24: 1,\n                25: 1,\n                26: 1,\n                27: 1,\n                28: 1,\n                29: 1,\n                30: 1,\n                31: 1,\n                32: 1,\n                33: 1,\n                34: 1,\n                35: 1,\n                36: 1,\n                37: 1,\n                121: 1 }],\n        299: [[[[124, 1], [125, 1], [126, 1], [127, 1], [128, 1]], [[0, 1]]],\n            { 5: 1, 19: 1, 26: 1, 33: 1, 34: 1 }],\n        300: [[[[28, 1]],\n                [[117, 2]],\n                [[100, 3]],\n                [[58, 4]],\n                [[70, 5]],\n                [[96, 6]],\n                [[68, 7], [0, 6]],\n                [[70, 8]],\n                [[96, 9]],\n                [[0, 9]]],\n            { 28: 1 }],\n        301: [[[[29, 1], [21, 2]], [[129, 3]], [[0, 2]], [[43, 2]]], { 21: 1, 29: 1 }],\n        302: [[[[130, 1]], [[57, 2], [0, 1]], [[130, 1], [0, 2]]], { 21: 1, 29: 1 }],\n        303: [[[[4, 1]], [[21, 2]], [[131, 3]], [[70, 4]], [[96, 5]], [[0, 5]]],\n            { 4: 1 }],\n        304: [[[[28, 1]],\n                [[117, 2]],\n                [[100, 3]],\n                [[67, 4]],\n                [[132, 5], [0, 4]],\n                [[0, 5]]],\n            { 28: 1 }],\n        305: [[[[31, 1]], [[133, 2]], [[132, 3], [0, 2]], [[0, 3]]], { 31: 1 }],\n        306: [[[[83, 1], [134, 1]], [[0, 1]]], { 28: 1, 31: 1 }],\n        307: [[[[31, 1]],\n                [[69, 2]],\n                [[70, 3]],\n                [[96, 4]],\n                [[68, 5], [135, 1], [0, 4]],\n                [[70, 6]],\n                [[96, 7]],\n                [[0, 7]]],\n            { 31: 1 }],\n        308: [[[[21, 1]], [[118, 2], [0, 1]], [[21, 3]], [[0, 3]]], { 21: 1 }],\n        309: [[[[136, 1]], [[57, 2], [0, 1]], [[136, 1], [0, 2]]], { 21: 1 }],\n        310: [[[[30, 1]],\n                [[114, 2], [120, 3]],\n                [[24, 4]],\n                [[114, 2], [24, 4], [120, 3]],\n                [[137, 5], [63, 5], [29, 6]],\n                [[0, 5]],\n                [[137, 7]],\n                [[43, 5]]],\n            { 30: 1 }],\n        311: [[[[24, 1]], [[138, 2]], [[0, 2]]], { 24: 1 }],\n        312: [[[[139, 1], [140, 1]], [[0, 1]]], { 24: 1, 30: 1 }],\n        313: [[[[28, 1]],\n                [[117, 2]],\n                [[100, 3]],\n                [[141, 4]],\n                [[142, 5], [0, 4]],\n                [[0, 5]]],\n            { 28: 1 }],\n        314: [[[[31, 1]], [[133, 2]], [[142, 3], [0, 2]], [[0, 3]]], { 31: 1 }],\n        315: [[[[143, 1], [144, 1]], [[0, 1]]], { 28: 1, 31: 1 }],\n        316: [[[[69, 1]],\n                [[143, 2], [57, 3], [0, 1]],\n                [[0, 2]],\n                [[69, 4], [0, 3]],\n                [[57, 3], [0, 4]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1 }],\n        317: [[[[11, 1]], [[70, 2], [71, 3]], [[133, 4]], [[70, 2]], [[0, 4]]],\n            { 11: 1 }],\n        318: [[[[145, 1], [67, 1]], [[0, 1]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1 }],\n        319: [[[[29, 1]], [[43, 2], [71, 3]], [[0, 2]], [[43, 2]]], { 29: 1 }],\n        320: [[[[23, 1]], [[0, 1]]], { 23: 1 }],\n        321: [[[[12, 1]],\n                [[69, 2], [80, 3], [0, 1]],\n                [[57, 4], [0, 2]],\n                [[69, 5]],\n                [[69, 2], [0, 4]],\n                [[57, 6], [0, 5]],\n                [[69, 7]],\n                [[57, 8], [0, 7]],\n                [[69, 7], [0, 8]]],\n            { 12: 1 }],\n        322: [[[[5, 1]],\n                [[69, 2], [0, 1]],\n                [[57, 3], [0, 2]],\n                [[69, 4]],\n                [[57, 5], [0, 4]],\n                [[69, 6]],\n                [[0, 6]]],\n            { 5: 1 }],\n        323: [[[[19, 1]], [[58, 2], [0, 1]], [[0, 2]]], { 19: 1 }],\n        324: [[[[146, 1]], [[2, 2], [147, 3]], [[0, 2]], [[146, 1], [2, 2]]],\n            { 5: 1,\n                6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                12: 1,\n                13: 1,\n                14: 1,\n                16: 1,\n                18: 1,\n                19: 1,\n                20: 1,\n                21: 1,\n                22: 1,\n                23: 1,\n                24: 1,\n                25: 1,\n                26: 1,\n                27: 1,\n                29: 1,\n                30: 1,\n                32: 1,\n                33: 1,\n                34: 1,\n                37: 1 }],\n        325: [[[[70, 1]], [[69, 2], [0, 1]], [[0, 2]]], { 70: 1 }],\n        326: [[[[148, 1],\n                    [149, 1],\n                    [150, 1],\n                    [151, 1],\n                    [152, 1],\n                    [153, 1],\n                    [154, 1],\n                    [155, 1],\n                    [156, 1],\n                    [157, 1]],\n                [[0, 1]]],\n            { 5: 1,\n                6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                12: 1,\n                13: 1,\n                14: 1,\n                16: 1,\n                18: 1,\n                19: 1,\n                20: 1,\n                21: 1,\n                22: 1,\n                23: 1,\n                24: 1,\n                25: 1,\n                26: 1,\n                27: 1,\n                29: 1,\n                30: 1,\n                32: 1,\n                33: 1,\n                34: 1,\n                37: 1 }],\n        327: [[[[1, 1], [3, 1]], [[0, 1]]],\n            { 4: 1,\n                5: 1,\n                6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                10: 1,\n                11: 1,\n                12: 1,\n                13: 1,\n                14: 1,\n                15: 1,\n                16: 1,\n                17: 1,\n                18: 1,\n                19: 1,\n                20: 1,\n                21: 1,\n                22: 1,\n                23: 1,\n                24: 1,\n                25: 1,\n                26: 1,\n                27: 1,\n                28: 1,\n                29: 1,\n                30: 1,\n                31: 1,\n                32: 1,\n                33: 1,\n                34: 1,\n                35: 1,\n                36: 1,\n                37: 1 }],\n        328: [[[[70, 1], [69, 2], [120, 3]],\n                [[158, 4], [69, 5], [0, 1]],\n                [[70, 1], [0, 2]],\n                [[120, 6]],\n                [[0, 4]],\n                [[158, 4], [0, 5]],\n                [[120, 4]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1,\n                70: 1,\n                120: 1 }],\n        329: [[[[159, 1]], [[57, 2], [0, 1]], [[159, 1], [0, 2]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1,\n                70: 1,\n                120: 1 }],\n        330: [[[[1, 1], [2, 2]],\n                [[0, 1]],\n                [[160, 3]],\n                [[123, 4]],\n                [[161, 1], [123, 4]]],\n            { 2: 1,\n                5: 1,\n                6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                12: 1,\n                13: 1,\n                14: 1,\n                16: 1,\n                18: 1,\n                19: 1,\n                20: 1,\n                21: 1,\n                22: 1,\n                23: 1,\n                24: 1,\n                25: 1,\n                26: 1,\n                27: 1,\n                29: 1,\n                30: 1,\n                32: 1,\n                33: 1,\n                34: 1,\n                37: 1 }],\n        331: [[[[69, 1]], [[57, 2], [0, 1]], [[69, 1], [0, 2]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1 }],\n        332: [[[[69, 1]], [[57, 0], [0, 1]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1 }],\n        333: [[[[69, 1]],\n                [[83, 2], [57, 3], [0, 1]],\n                [[0, 2]],\n                [[69, 4], [0, 3]],\n                [[57, 3], [0, 4]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1 }],\n        334: [[[[133, 1]],\n                [[57, 2], [0, 1]],\n                [[133, 3]],\n                [[57, 4], [0, 3]],\n                [[133, 3], [0, 4]]],\n            { 6: 1,\n                7: 1,\n                8: 1,\n                9: 1,\n                11: 1,\n                14: 1,\n                18: 1,\n                21: 1,\n                25: 1,\n                29: 1,\n                32: 1,\n                37: 1 }],\n        335: [[[[29, 1], [120, 2], [32, 3]],\n                [[43, 4], [115, 5]],\n                [[21, 4]],\n                [[162, 6]],\n                [[0, 4]],\n                [[43, 4]],\n                [[42, 4]]],\n            { 29: 1, 32: 1, 120: 1 }],\n        336: [[[[15, 1]],\n                [[70, 2]],\n                [[96, 3]],\n                [[163, 4], [164, 5]],\n                [[70, 6]],\n                [[70, 7]],\n                [[96, 8]],\n                [[96, 9]],\n                [[163, 4], [68, 10], [164, 5], [0, 8]],\n                [[0, 9]],\n                [[70, 11]],\n                [[96, 12]],\n                [[164, 5], [0, 12]]],\n            { 15: 1 }],\n        337: [[[[63, 1], [130, 2], [77, 3]],\n                [[21, 4]],\n                [[60, 5], [57, 6], [0, 2]],\n                [[21, 7]],\n                [[57, 8], [0, 4]],\n                [[69, 9]],\n                [[63, 1], [130, 2], [77, 3], [0, 6]],\n                [[0, 7]],\n                [[77, 3]],\n                [[57, 6], [0, 9]]],\n            { 21: 1, 29: 1, 63: 1, 77: 1 }],\n        338: [[[[17, 1]],\n                [[69, 2]],\n                [[70, 3]],\n                [[96, 4]],\n                [[68, 5], [0, 4]],\n                [[70, 6]],\n                [[96, 7]],\n                [[0, 7]]],\n            { 17: 1 }],\n        339: [[[[36, 1]],\n                [[69, 2]],\n                [[70, 3], [165, 4]],\n                [[96, 5]],\n                [[70, 3]],\n                [[0, 5]]],\n            { 36: 1 }],\n        340: [[[[118, 1]], [[55, 2]], [[0, 2]]], { 118: 1 }],\n        341: [[[[45, 1]], [[0, 1]]], { 26: 1 }] },\n    states: [[[[1, 1], [2, 1], [3, 2]], [[0, 1]], [[2, 1]]],\n        [[[38, 1]], [[39, 0], [0, 1]]],\n        [[[40, 1]], [[25, 0], [37, 0], [0, 1]]],\n        [[[18, 1], [8, 2], [9, 5], [29, 4], [32, 3], [14, 6], [21, 2]],\n            [[18, 1], [0, 1]],\n            [[0, 2]],\n            [[41, 7], [42, 2]],\n            [[43, 2], [44, 8], [45, 8]],\n            [[46, 9], [47, 2]],\n            [[48, 10]],\n            [[42, 2]],\n            [[43, 2]],\n            [[47, 2]],\n            [[14, 2]]],\n        [[[49, 1]], [[50, 0], [0, 1]]],\n        [[[51, 1]], [[52, 0], [0, 1]]],\n        [[[53, 1]], [[54, 0], [0, 1]]],\n        [[[55, 1]], [[56, 0], [0, 1]]],\n        [[[55, 1]], [[57, 2], [0, 1]], [[55, 1], [0, 2]]],\n        [[[58, 1]],\n            [[59, 2], [60, 3], [0, 1]],\n            [[58, 4], [45, 4]],\n            [[58, 5], [45, 5]],\n            [[0, 4]],\n            [[60, 3], [0, 5]]],\n        [[[61, 1]], [[62, 0], [63, 0], [64, 0], [65, 0], [0, 1]]],\n        [[[27, 1]], [[21, 2]], [[57, 1], [0, 2]]],\n        [[[66, 1], [67, 2]],\n            [[0, 1]],\n            [[31, 3], [0, 2]],\n            [[67, 4]],\n            [[68, 5]],\n            [[69, 1]]],\n        [[[11, 1]], [[70, 2], [71, 3]], [[69, 4]], [[70, 2]], [[0, 4]]],\n        [[[13, 1]], [[21, 2]], [[57, 1], [0, 2]]],\n        [[[7, 1], [72, 2]], [[38, 2]], [[0, 2]]],\n        [[[73, 1]], [[74, 0], [0, 1]]],\n        [[[75, 1]], [[76, 1], [77, 2], [0, 1]], [[49, 3]], [[0, 3]]],\n        [[[78, 1]], [[79, 0], [80, 0], [0, 1]]],\n        [[[25, 1], [6, 1], [37, 1], [81, 2]], [[49, 2]], [[0, 2]]],\n        [[[26, 1]], [[58, 2], [0, 1]], [[0, 2]]],\n        [[[63, 1], [82, 2], [77, 3]],\n            [[69, 4]],\n            [[57, 5], [0, 2]],\n            [[69, 6]],\n            [[57, 7], [0, 4]],\n            [[63, 1], [82, 2], [77, 3], [0, 5]],\n            [[0, 6]],\n            [[82, 4], [77, 3]]],\n        [[[69, 1]], [[83, 2], [60, 3], [0, 1]], [[0, 2]], [[69, 2]]],\n        [[[20, 1]], [[69, 2]], [[57, 3], [0, 2]], [[69, 4]], [[0, 4]]],\n        [[[84, 1],\n                [85, 1],\n                [86, 1],\n                [87, 1],\n                [88, 1],\n                [89, 1],\n                [90, 1],\n                [91, 1],\n                [92, 1],\n                [93, 1],\n                [94, 1],\n                [95, 1]],\n            [[0, 1]]],\n        [[[33, 1]], [[0, 1]]],\n        [[[10, 1]],\n            [[21, 2]],\n            [[70, 3], [29, 4]],\n            [[96, 5]],\n            [[43, 6], [58, 7]],\n            [[0, 5]],\n            [[70, 3]],\n            [[43, 6]]],\n        [[[97, 1],\n                [98, 1],\n                [7, 2],\n                [99, 1],\n                [97, 1],\n                [100, 1],\n                [101, 1],\n                [102, 3],\n                [103, 1],\n                [104, 1]],\n            [[0, 1]],\n            [[100, 1]],\n            [[7, 1], [0, 3]]],\n        [[[105, 1],\n                [106, 1],\n                [107, 1],\n                [108, 1],\n                [109, 1],\n                [110, 1],\n                [111, 1],\n                [112, 1]],\n            [[0, 1]]],\n        [[[34, 1]], [[0, 1]]],\n        [[[113, 1]], [[111, 2], [108, 2]], [[0, 2]]],\n        [[[35, 1]],\n            [[114, 2]],\n            [[2, 4], [29, 3]],\n            [[43, 5], [115, 6]],\n            [[0, 4]],\n            [[2, 4]],\n            [[43, 5]]],\n        [[[116, 1]], [[116, 1], [0, 1]]],\n        [[[22, 1]], [[117, 2]], [[0, 2]]],\n        [[[69, 1]], [[70, 2]], [[69, 3]], [[57, 4], [0, 3]], [[69, 1], [0, 4]]],\n        [[[114, 1]], [[118, 2], [0, 1]], [[21, 3]], [[0, 3]]],\n        [[[119, 1]], [[57, 0], [0, 1]]],\n        [[[21, 1]], [[120, 0], [0, 1]]],\n        [[[21, 1]], [[0, 1]]],\n        [[[58, 1]], [[2, 1], [121, 2]], [[0, 2]]],\n        [[[122, 1]],\n            [[69, 2], [0, 1]],\n            [[118, 3], [57, 3], [0, 2]],\n            [[69, 4]],\n            [[0, 4]]],\n        [[[16, 1]],\n            [[55, 2]],\n            [[100, 3], [0, 2]],\n            [[69, 4]],\n            [[57, 5], [0, 4]],\n            [[69, 6]],\n            [[0, 6]]],\n        [[[2, 0], [121, 1], [123, 0]], [[0, 1]]],\n        [[[124, 1], [125, 1], [126, 1], [127, 1], [128, 1]], [[0, 1]]],\n        [[[28, 1]],\n            [[117, 2]],\n            [[100, 3]],\n            [[58, 4]],\n            [[70, 5]],\n            [[96, 6]],\n            [[68, 7], [0, 6]],\n            [[70, 8]],\n            [[96, 9]],\n            [[0, 9]]],\n        [[[29, 1], [21, 2]], [[129, 3]], [[0, 2]], [[43, 2]]],\n        [[[130, 1]], [[57, 2], [0, 1]], [[130, 1], [0, 2]]],\n        [[[4, 1]], [[21, 2]], [[131, 3]], [[70, 4]], [[96, 5]], [[0, 5]]],\n        [[[28, 1]], [[117, 2]], [[100, 3]], [[67, 4]], [[132, 5], [0, 4]], [[0, 5]]],\n        [[[31, 1]], [[133, 2]], [[132, 3], [0, 2]], [[0, 3]]],\n        [[[83, 1], [134, 1]], [[0, 1]]],\n        [[[31, 1]],\n            [[69, 2]],\n            [[70, 3]],\n            [[96, 4]],\n            [[68, 5], [135, 1], [0, 4]],\n            [[70, 6]],\n            [[96, 7]],\n            [[0, 7]]],\n        [[[21, 1]], [[118, 2], [0, 1]], [[21, 3]], [[0, 3]]],\n        [[[136, 1]], [[57, 2], [0, 1]], [[136, 1], [0, 2]]],\n        [[[30, 1]],\n            [[114, 2], [120, 3]],\n            [[24, 4]],\n            [[114, 2], [24, 4], [120, 3]],\n            [[137, 5], [63, 5], [29, 6]],\n            [[0, 5]],\n            [[137, 7]],\n            [[43, 5]]],\n        [[[24, 1]], [[138, 2]], [[0, 2]]],\n        [[[139, 1], [140, 1]], [[0, 1]]],\n        [[[28, 1]], [[117, 2]], [[100, 3]], [[141, 4]], [[142, 5], [0, 4]], [[0, 5]]],\n        [[[31, 1]], [[133, 2]], [[142, 3], [0, 2]], [[0, 3]]],\n        [[[143, 1], [144, 1]], [[0, 1]]],\n        [[[69, 1]],\n            [[143, 2], [57, 3], [0, 1]],\n            [[0, 2]],\n            [[69, 4], [0, 3]],\n            [[57, 3], [0, 4]]],\n        [[[11, 1]], [[70, 2], [71, 3]], [[133, 4]], [[70, 2]], [[0, 4]]],\n        [[[145, 1], [67, 1]], [[0, 1]]],\n        [[[29, 1]], [[43, 2], [71, 3]], [[0, 2]], [[43, 2]]],\n        [[[23, 1]], [[0, 1]]],\n        [[[12, 1]],\n            [[69, 2], [80, 3], [0, 1]],\n            [[57, 4], [0, 2]],\n            [[69, 5]],\n            [[69, 2], [0, 4]],\n            [[57, 6], [0, 5]],\n            [[69, 7]],\n            [[57, 8], [0, 7]],\n            [[69, 7], [0, 8]]],\n        [[[5, 1]],\n            [[69, 2], [0, 1]],\n            [[57, 3], [0, 2]],\n            [[69, 4]],\n            [[57, 5], [0, 4]],\n            [[69, 6]],\n            [[0, 6]]],\n        [[[19, 1]], [[58, 2], [0, 1]], [[0, 2]]],\n        [[[146, 1]], [[2, 2], [147, 3]], [[0, 2]], [[146, 1], [2, 2]]],\n        [[[70, 1]], [[69, 2], [0, 1]], [[0, 2]]],\n        [[[148, 1],\n                [149, 1],\n                [150, 1],\n                [151, 1],\n                [152, 1],\n                [153, 1],\n                [154, 1],\n                [155, 1],\n                [156, 1],\n                [157, 1]],\n            [[0, 1]]],\n        [[[1, 1], [3, 1]], [[0, 1]]],\n        [[[70, 1], [69, 2], [120, 3]],\n            [[158, 4], [69, 5], [0, 1]],\n            [[70, 1], [0, 2]],\n            [[120, 6]],\n            [[0, 4]],\n            [[158, 4], [0, 5]],\n            [[120, 4]]],\n        [[[159, 1]], [[57, 2], [0, 1]], [[159, 1], [0, 2]]],\n        [[[1, 1], [2, 2]], [[0, 1]], [[160, 3]], [[123, 4]], [[161, 1], [123, 4]]],\n        [[[69, 1]], [[57, 2], [0, 1]], [[69, 1], [0, 2]]],\n        [[[69, 1]], [[57, 0], [0, 1]]],\n        [[[69, 1]],\n            [[83, 2], [57, 3], [0, 1]],\n            [[0, 2]],\n            [[69, 4], [0, 3]],\n            [[57, 3], [0, 4]]],\n        [[[133, 1]],\n            [[57, 2], [0, 1]],\n            [[133, 3]],\n            [[57, 4], [0, 3]],\n            [[133, 3], [0, 4]]],\n        [[[29, 1], [120, 2], [32, 3]],\n            [[43, 4], [115, 5]],\n            [[21, 4]],\n            [[162, 6]],\n            [[0, 4]],\n            [[43, 4]],\n            [[42, 4]]],\n        [[[15, 1]],\n            [[70, 2]],\n            [[96, 3]],\n            [[163, 4], [164, 5]],\n            [[70, 6]],\n            [[70, 7]],\n            [[96, 8]],\n            [[96, 9]],\n            [[163, 4], [68, 10], [164, 5], [0, 8]],\n            [[0, 9]],\n            [[70, 11]],\n            [[96, 12]],\n            [[164, 5], [0, 12]]],\n        [[[63, 1], [130, 2], [77, 3]],\n            [[21, 4]],\n            [[60, 5], [57, 6], [0, 2]],\n            [[21, 7]],\n            [[57, 8], [0, 4]],\n            [[69, 9]],\n            [[63, 1], [130, 2], [77, 3], [0, 6]],\n            [[0, 7]],\n            [[77, 3]],\n            [[57, 6], [0, 9]]],\n        [[[17, 1]],\n            [[69, 2]],\n            [[70, 3]],\n            [[96, 4]],\n            [[68, 5], [0, 4]],\n            [[70, 6]],\n            [[96, 7]],\n            [[0, 7]]],\n        [[[36, 1]], [[69, 2]], [[70, 3], [165, 4]], [[96, 5]], [[70, 3]], [[0, 5]]],\n        [[[118, 1]], [[55, 2]], [[0, 2]]],\n        [[[45, 1]], [[0, 1]]]],\n    labels: [[0, 'EMPTY'],\n        [324, null],\n        [4, null],\n        [284, null],\n        [1, 'def'],\n        [1, 'raise'],\n        [32, null],\n        [1, 'not'],\n        [2, null],\n        [26, null],\n        [1, 'class'],\n        [1, 'lambda'],\n        [1, 'print'],\n        [1, 'nonlocal'],\n        [25, null],\n        [1, 'try'],\n        [1, 'exec'],\n        [1, 'while'],\n        [3, null],\n        [1, 'return'],\n        [1, 'assert'],\n        [1, null],\n        [1, 'del'],\n        [1, 'pass'],\n        [1, 'import'],\n        [15, null],\n        [1, 'yield'],\n        [1, 'global'],\n        [1, 'for'],\n        [7, null],\n        [1, 'from'],\n        [1, 'if'],\n        [9, null],\n        [1, 'break'],\n        [1, 'continue'],\n        [50, null],\n        [1, 'with'],\n        [14, null],\n        [271, null],\n        [1, 'and'],\n        [266, null],\n        [316, null],\n        [10, null],\n        [8, null],\n        [333, null],\n        [276, null],\n        [290, null],\n        [27, null],\n        [332, null],\n        [275, null],\n        [19, null],\n        [262, null],\n        [18, null],\n        [260, null],\n        [33, null],\n        [258, null],\n        [283, null],\n        [12, null],\n        [331, null],\n        [280, null],\n        [22, null],\n        [274, null],\n        [48, null],\n        [16, null],\n        [17, null],\n        [24, null],\n        [269, null],\n        [272, null],\n        [1, 'else'],\n        [268, null],\n        [11, null],\n        [337, null],\n        [263, null],\n        [257, null],\n        [1, 'or'],\n        [259, null],\n        [335, null],\n        [36, null],\n        [261, null],\n        [34, null],\n        [35, null],\n        [273, null],\n        [278, null],\n        [304, null],\n        [46, null],\n        [39, null],\n        [41, null],\n        [47, null],\n        [42, null],\n        [43, null],\n        [37, null],\n        [44, null],\n        [49, null],\n        [45, null],\n        [38, null],\n        [40, null],\n        [330, null],\n        [29, null],\n        [21, null],\n        [28, null],\n        [1, 'in'],\n        [30, null],\n        [1, 'is'],\n        [31, null],\n        [20, null],\n        [336, null],\n        [307, null],\n        [300, null],\n        [282, null],\n        [339, null],\n        [338, null],\n        [303, null],\n        [286, null],\n        [288, null],\n        [293, null],\n        [277, null],\n        [287, null],\n        [264, null],\n        [1, 'as'],\n        [291, null],\n        [23, null],\n        [0, null],\n        [1, 'except'],\n        [327, null],\n        [281, null],\n        [285, null],\n        [322, null],\n        [323, null],\n        [341, null],\n        [302, null],\n        [301, null],\n        [319, null],\n        [306, null],\n        [318, null],\n        [305, null],\n        [1, 'elif'],\n        [308, null],\n        [309, null],\n        [292, null],\n        [311, null],\n        [310, null],\n        [334, null],\n        [315, null],\n        [313, null],\n        [314, null],\n        [317, null],\n        [326, null],\n        [13, null],\n        [299, null],\n        [270, null],\n        [265, null],\n        [320, null],\n        [267, null],\n        [321, null],\n        [289, null],\n        [297, null],\n        [279, null],\n        [312, null],\n        [325, null],\n        [328, null],\n        [5, null],\n        [6, null],\n        [329, null],\n        [296, null],\n        [1, 'finally'],\n        [340, null]],\n    keywords: { 'and': 39,\n        'as': 118,\n        'assert': 20,\n        'break': 33,\n        'class': 10,\n        'continue': 34,\n        'def': 4,\n        'del': 22,\n        'elif': 135,\n        'else': 68,\n        'except': 122,\n        'exec': 16,\n        'finally': 164,\n        'for': 28,\n        'from': 30,\n        'global': 27,\n        'if': 31,\n        'import': 24,\n        'in': 100,\n        'is': 102,\n        'lambda': 11,\n        'nonlocal': 13,\n        'not': 7,\n        'or': 74,\n        'pass': 23,\n        'print': 12,\n        'raise': 5,\n        'return': 19,\n        'try': 15,\n        'while': 17,\n        'with': 36,\n        'yield': 26 },\n    tokens: { 0: 121,\n        1: 21,\n        2: 8,\n        3: 18,\n        4: 2,\n        5: 160,\n        6: 161,\n        7: 29,\n        8: 43,\n        9: 32,\n        10: 42,\n        11: 70,\n        12: 57,\n        13: 147,\n        14: 37,\n        15: 25,\n        16: 63,\n        17: 64,\n        18: 52,\n        19: 50,\n        20: 104,\n        21: 98,\n        22: 60,\n        23: 120,\n        24: 65,\n        25: 14,\n        26: 9,\n        27: 47,\n        28: 99,\n        29: 97,\n        30: 101,\n        31: 103,\n        32: 6,\n        33: 54,\n        34: 79,\n        35: 80,\n        36: 77,\n        37: 90,\n        38: 94,\n        39: 85,\n        40: 95,\n        41: 86,\n        42: 88,\n        43: 89,\n        44: 91,\n        45: 93,\n        46: 84,\n        47: 87,\n        48: 62,\n        49: 92,\n        50: 35 },\n    start: 256\n};\n// Nothing more to see here.\n","/**\n * Symbolic constants for various Python Language tokens.\n */\n/**\n * Symbolic constants for various Python Language tokens.\n */ export var Tokens;\n(function (Tokens) {\n    Tokens[Tokens[\"T_ENDMARKER\"] = 0] = \"T_ENDMARKER\";\n    Tokens[Tokens[\"T_NAME\"] = 1] = \"T_NAME\";\n    Tokens[Tokens[\"T_NUMBER\"] = 2] = \"T_NUMBER\";\n    Tokens[Tokens[\"T_STRING\"] = 3] = \"T_STRING\";\n    Tokens[Tokens[\"T_NEWLINE\"] = 4] = \"T_NEWLINE\";\n    Tokens[Tokens[\"T_INDENT\"] = 5] = \"T_INDENT\";\n    Tokens[Tokens[\"T_DEDENT\"] = 6] = \"T_DEDENT\";\n    Tokens[Tokens[\"T_LPAR\"] = 7] = \"T_LPAR\";\n    Tokens[Tokens[\"T_RPAR\"] = 8] = \"T_RPAR\";\n    Tokens[Tokens[\"T_LSQB\"] = 9] = \"T_LSQB\";\n    Tokens[Tokens[\"T_RSQB\"] = 10] = \"T_RSQB\";\n    Tokens[Tokens[\"T_COLON\"] = 11] = \"T_COLON\";\n    Tokens[Tokens[\"T_COMMA\"] = 12] = \"T_COMMA\";\n    Tokens[Tokens[\"T_SEMI\"] = 13] = \"T_SEMI\";\n    Tokens[Tokens[\"T_PLUS\"] = 14] = \"T_PLUS\";\n    Tokens[Tokens[\"T_MINUS\"] = 15] = \"T_MINUS\";\n    Tokens[Tokens[\"T_STAR\"] = 16] = \"T_STAR\";\n    Tokens[Tokens[\"T_SLASH\"] = 17] = \"T_SLASH\";\n    Tokens[Tokens[\"T_VBAR\"] = 18] = \"T_VBAR\";\n    Tokens[Tokens[\"T_AMPER\"] = 19] = \"T_AMPER\";\n    Tokens[Tokens[\"T_LESS\"] = 20] = \"T_LESS\";\n    Tokens[Tokens[\"T_GREATER\"] = 21] = \"T_GREATER\";\n    Tokens[Tokens[\"T_EQUAL\"] = 22] = \"T_EQUAL\";\n    Tokens[Tokens[\"T_DOT\"] = 23] = \"T_DOT\";\n    Tokens[Tokens[\"T_PERCENT\"] = 24] = \"T_PERCENT\";\n    Tokens[Tokens[\"T_BACKQUOTE\"] = 25] = \"T_BACKQUOTE\";\n    Tokens[Tokens[\"T_LBRACE\"] = 26] = \"T_LBRACE\";\n    Tokens[Tokens[\"T_RBRACE\"] = 27] = \"T_RBRACE\";\n    Tokens[Tokens[\"T_EQEQUAL\"] = 28] = \"T_EQEQUAL\";\n    Tokens[Tokens[\"T_NOTEQUAL\"] = 29] = \"T_NOTEQUAL\";\n    Tokens[Tokens[\"T_LESSEQUAL\"] = 30] = \"T_LESSEQUAL\";\n    Tokens[Tokens[\"T_GREATEREQUAL\"] = 31] = \"T_GREATEREQUAL\";\n    Tokens[Tokens[\"T_TILDE\"] = 32] = \"T_TILDE\";\n    Tokens[Tokens[\"T_CIRCUMFLEX\"] = 33] = \"T_CIRCUMFLEX\";\n    Tokens[Tokens[\"T_LEFTSHIFT\"] = 34] = \"T_LEFTSHIFT\";\n    Tokens[Tokens[\"T_RIGHTSHIFT\"] = 35] = \"T_RIGHTSHIFT\";\n    Tokens[Tokens[\"T_DOUBLESTAR\"] = 36] = \"T_DOUBLESTAR\";\n    Tokens[Tokens[\"T_PLUSEQUAL\"] = 37] = \"T_PLUSEQUAL\";\n    Tokens[Tokens[\"T_MINEQUAL\"] = 38] = \"T_MINEQUAL\";\n    Tokens[Tokens[\"T_STAREQUAL\"] = 39] = \"T_STAREQUAL\";\n    Tokens[Tokens[\"T_SLASHEQUAL\"] = 40] = \"T_SLASHEQUAL\";\n    Tokens[Tokens[\"T_PERCENTEQUAL\"] = 41] = \"T_PERCENTEQUAL\";\n    Tokens[Tokens[\"T_AMPEREQUAL\"] = 42] = \"T_AMPEREQUAL\";\n    Tokens[Tokens[\"T_VBAREQUAL\"] = 43] = \"T_VBAREQUAL\";\n    Tokens[Tokens[\"T_CIRCUMFLEXEQUAL\"] = 44] = \"T_CIRCUMFLEXEQUAL\";\n    Tokens[Tokens[\"T_LEFTSHIFTEQUAL\"] = 45] = \"T_LEFTSHIFTEQUAL\";\n    Tokens[Tokens[\"T_RIGHTSHIFTEQUAL\"] = 46] = \"T_RIGHTSHIFTEQUAL\";\n    Tokens[Tokens[\"T_DOUBLESTAREQUAL\"] = 47] = \"T_DOUBLESTAREQUAL\";\n    Tokens[Tokens[\"T_DOUBLESLASH\"] = 48] = \"T_DOUBLESLASH\";\n    Tokens[Tokens[\"T_DOUBLESLASHEQUAL\"] = 49] = \"T_DOUBLESLASHEQUAL\";\n    Tokens[Tokens[\"T_AT\"] = 50] = \"T_AT\";\n    Tokens[Tokens[\"T_OP\"] = 51] = \"T_OP\";\n    Tokens[Tokens[\"T_COMMENT\"] = 52] = \"T_COMMENT\";\n    Tokens[Tokens[\"T_NL\"] = 53] = \"T_NL\";\n    Tokens[Tokens[\"T_RARROW\"] = 54] = \"T_RARROW\";\n    Tokens[Tokens[\"T_ERRORTOKEN\"] = 55] = \"T_ERRORTOKEN\";\n    Tokens[Tokens[\"T_N_TOKENS\"] = 56] = \"T_N_TOKENS\";\n    Tokens[Tokens[\"T_NT_OFFSET\"] = 256] = \"T_NT_OFFSET\";\n})(Tokens || (Tokens = {}));\n"],"names":["syntaxError","mangleName","Symbol","TOK","tslib_1.__extends"],"mappings":";;;;;;AuBAA;;;;;IAKI,AAAO,IAAI,MAAM,CAAC;AACtB,CAAC,UAAU,MAAM,EAAE;IACf,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC;IAClD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IACxC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC;IAC5C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC;IAC5C,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;IAC9C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC;IAC5C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC;IAC5C,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IACxC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IACxC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;IACxC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ,CAAC;IACzC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC;IAC3C,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC;IAC3C,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ,CAAC;IACzC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ,CAAC;IACzC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC;IAC3C,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ,CAAC;IACzC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC;IAC3C,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ,CAAC;IACzC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC;IAC3C,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ,CAAC;IACzC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,WAAW,CAAC;IAC/C,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC;IAC3C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,OAAO,CAAC;IACvC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,WAAW,CAAC;IAC/C,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,GAAG,aAAa,CAAC;IACnD,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,GAAG,UAAU,CAAC;IAC7C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,GAAG,UAAU,CAAC;IAC7C,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,WAAW,CAAC;IAC/C,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,GAAG,YAAY,CAAC;IACjD,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,GAAG,aAAa,CAAC;IACnD,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,GAAG,gBAAgB,CAAC;IACzD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC;IAC3C,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,GAAG,cAAc,CAAC;IACrD,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,GAAG,aAAa,CAAC;IACnD,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,GAAG,cAAc,CAAC;IACrD,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,GAAG,cAAc,CAAC;IACrD,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,GAAG,aAAa,CAAC;IACnD,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,GAAG,YAAY,CAAC;IACjD,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,GAAG,aAAa,CAAC;IACnD,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,GAAG,cAAc,CAAC;IACrD,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,GAAG,gBAAgB,CAAC;IACzD,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,GAAG,cAAc,CAAC;IACrD,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,GAAG,aAAa,CAAC;IACnD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,GAAG,mBAAmB,CAAC;IAC/D,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,GAAG,kBAAkB,CAAC;IAC7D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,GAAG,mBAAmB,CAAC;IAC/D,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,GAAG,mBAAmB,CAAC;IAC/D,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,GAAG,eAAe,CAAC;IACvD,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,GAAG,oBAAoB,CAAC;IACjE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC;IACrC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC;IACrC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,WAAW,CAAC;IAC/C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC;IACrC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,GAAG,UAAU,CAAC;IAC7C,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,GAAG,cAAc,CAAC;IACrD,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,GAAG,YAAY,CAAC;IACjD,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,GAAG,CAAC,GAAG,aAAa,CAAC;CACvD,EAAE,MAAM,KAAK,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;;ADjE5B;AACA,AACA;;;AAGA,AAAO,IAAI,KAAK,GAAG;IACf,GAAG,EAAE,MAAM,CAAC,MAAM;IAClB,GAAG,EAAE,MAAM,CAAC,MAAM;IAClB,GAAG,EAAE,MAAM,CAAC,MAAM;IAClB,GAAG,EAAE,MAAM,CAAC,MAAM;IAClB,GAAG,EAAE,MAAM,CAAC,OAAO;IACnB,GAAG,EAAE,MAAM,CAAC,OAAO;IACnB,GAAG,EAAE,MAAM,CAAC,MAAM;IAClB,GAAG,EAAE,MAAM,CAAC,MAAM;IAClB,GAAG,EAAE,MAAM,CAAC,OAAO;IACnB,GAAG,EAAE,MAAM,CAAC,MAAM;IAClB,GAAG,EAAE,MAAM,CAAC,OAAO;IACnB,GAAG,EAAE,MAAM,CAAC,MAAM;IAClB,GAAG,EAAE,MAAM,CAAC,OAAO;IACnB,GAAG,EAAE,MAAM,CAAC,MAAM;IAClB,GAAG,EAAE,MAAM,CAAC,SAAS;IACrB,GAAG,EAAE,MAAM,CAAC,OAAO;IACnB,GAAG,EAAE,MAAM,CAAC,KAAK;IACjB,GAAG,EAAE,MAAM,CAAC,SAAS;IACrB,GAAG,EAAE,MAAM,CAAC,WAAW;IACvB,GAAG,EAAE,MAAM,CAAC,QAAQ;IACpB,GAAG,EAAE,MAAM,CAAC,QAAQ;IACpB,GAAG,EAAE,MAAM,CAAC,IAAI;IAChB,IAAI,EAAE,MAAM,CAAC,SAAS;IACtB,IAAI,EAAE,MAAM,CAAC,UAAU;IACvB,IAAI,EAAE,MAAM,CAAC,UAAU;IACvB,IAAI,EAAE,MAAM,CAAC,WAAW;IACxB,IAAI,EAAE,MAAM,CAAC,cAAc;IAC3B,GAAG,EAAE,MAAM,CAAC,OAAO;IACnB,GAAG,EAAE,MAAM,CAAC,YAAY;IACxB,IAAI,EAAE,MAAM,CAAC,WAAW;IACxB,IAAI,EAAE,MAAM,CAAC,YAAY;IACzB,IAAI,EAAE,MAAM,CAAC,YAAY;IACzB,IAAI,EAAE,MAAM,CAAC,WAAW;IACxB,IAAI,EAAE,MAAM,CAAC,UAAU;IACvB,IAAI,EAAE,MAAM,CAAC,WAAW;IACxB,IAAI,EAAE,MAAM,CAAC,YAAY;IACzB,IAAI,EAAE,MAAM,CAAC,cAAc;IAC3B,IAAI,EAAE,MAAM,CAAC,YAAY;IACzB,IAAI,EAAE,MAAM,CAAC,WAAW;IACxB,IAAI,EAAE,MAAM,CAAC,iBAAiB;IAC9B,KAAK,EAAE,MAAM,CAAC,gBAAgB;IAC9B,KAAK,EAAE,MAAM,CAAC,iBAAiB;IAC/B,KAAK,EAAE,MAAM,CAAC,iBAAiB;IAC/B,IAAI,EAAE,MAAM,CAAC,aAAa;IAC1B,KAAK,EAAE,MAAM,CAAC,kBAAkB;IAChC,IAAI,EAAE,MAAM,CAAC,QAAQ;CACxB,CAAC;;;;AAIF,AAAO,IAAI,WAAW,GAAG;IACrB,GAAG,EAAE,EAAE,OAAO,EAAE,GAAG;QACf,cAAc,EAAE,GAAG;QACnB,QAAQ,EAAE,GAAG;QACb,cAAc,EAAE,GAAG;QACnB,aAAa,EAAE,GAAG;QAClB,cAAc,EAAE,GAAG;QACnB,cAAc,EAAE,GAAG;QACnB,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,GAAG;QACb,aAAa,EAAE,GAAG;QAClB,UAAU,EAAE,GAAG;QACf,MAAM,EAAE,GAAG;QACX,UAAU,EAAE,GAAG;QACf,YAAY,EAAE,GAAG;QACjB,OAAO,EAAE,GAAG;QACZ,MAAM,EAAE,GAAG;QACX,SAAS,EAAE,GAAG;QACd,SAAS,EAAE,GAAG;QACd,SAAS,EAAE,GAAG;QACd,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,GAAG;QACZ,QAAQ,EAAE,GAAG;QACb,WAAW,EAAE,GAAG;QAChB,SAAS,EAAE,GAAG;QACd,UAAU,EAAE,GAAG;QACf,QAAQ,EAAE,GAAG;QACb,OAAO,EAAE,GAAG;QACZ,aAAa,EAAE,GAAG;QAClB,aAAa,EAAE,GAAG;QAClB,SAAS,EAAE,GAAG;QACd,SAAS,EAAE,GAAG;QACd,UAAU,EAAE,GAAG;QACf,QAAQ,EAAE,GAAG;QACb,SAAS,EAAE,GAAG;QACd,cAAc,EAAE,GAAG;QACnB,eAAe,EAAE,GAAG;QACpB,WAAW,EAAE,GAAG;QAChB,aAAa,EAAE,GAAG;QAClB,UAAU,EAAE,GAAG;QACf,aAAa,EAAE,GAAG;QAClB,SAAS,EAAE,GAAG;QACd,UAAU,EAAE,GAAG;QACf,SAAS,EAAE,GAAG;QACd,QAAQ,EAAE,GAAG;QACb,KAAK,EAAE,GAAG;QACV,MAAM,EAAE,GAAG;QACX,OAAO,EAAE,GAAG;QACZ,OAAO,EAAE,GAAG;QACZ,MAAM,EAAE,GAAG;QACX,QAAQ,EAAE,GAAG;QACb,OAAO,EAAE,GAAG;QACZ,cAAc,EAAE,GAAG;QACnB,eAAe,EAAE,GAAG;QACpB,WAAW,EAAE,GAAG;QAChB,WAAW,EAAE,GAAG;QAChB,WAAW,EAAE,GAAG;QAChB,QAAQ,EAAE,GAAG;QACb,OAAO,EAAE,GAAG;QACZ,SAAS,EAAE,GAAG;QACd,SAAS,EAAE,GAAG;QACd,cAAc,EAAE,GAAG;QACnB,QAAQ,EAAE,GAAG;QACb,UAAU,EAAE,GAAG;QACf,SAAS,EAAE,GAAG;QACd,UAAU,EAAE,GAAG;QACf,UAAU,EAAE,GAAG;QACf,WAAW,EAAE,GAAG;QAChB,WAAW,EAAE,GAAG;QAChB,YAAY,EAAE,GAAG;QACjB,OAAO,EAAE,GAAG;QACZ,UAAU,EAAE,GAAG;QACf,IAAI,EAAE,GAAG;QACT,SAAS,EAAE,GAAG;QACd,aAAa,EAAE,GAAG;QAClB,KAAK,EAAE,GAAG;QACV,QAAQ,EAAE,GAAG;QACb,SAAS,EAAE,GAAG;QACd,aAAa,EAAE,GAAG;QAClB,aAAa,EAAE,GAAG;QAClB,OAAO,EAAE,GAAG;QACZ,QAAQ,EAAE,GAAG;QACb,WAAW,EAAE,GAAG;QAChB,UAAU,EAAE,GAAG;QACf,SAAS,EAAE,GAAG;QACd,QAAQ,EAAE,GAAG;QACb,UAAU,EAAE,GAAG,EAAE;IACrB,aAAa,EAAE,EAAE,GAAG,EAAE,cAAc;QAChC,GAAG,EAAE,SAAS;QACd,GAAG,EAAE,gBAAgB;QACrB,GAAG,EAAE,UAAU;QACf,GAAG,EAAE,gBAAgB;QACrB,GAAG,EAAE,eAAe;QACpB,GAAG,EAAE,gBAAgB;QACrB,GAAG,EAAE,gBAAgB;QACrB,GAAG,EAAE,UAAU;QACf,GAAG,EAAE,UAAU;QACf,GAAG,EAAE,eAAe;QACpB,GAAG,EAAE,YAAY;QACjB,GAAG,EAAE,QAAQ;QACb,GAAG,EAAE,YAAY;QACjB,GAAG,EAAE,cAAc;QACnB,GAAG,EAAE,SAAS;QACd,GAAG,EAAE,QAAQ;QACb,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,SAAS;QACd,GAAG,EAAE,UAAU;QACf,GAAG,EAAE,aAAa;QAClB,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,YAAY;QACjB,GAAG,EAAE,UAAU;QACf,GAAG,EAAE,SAAS;QACd,GAAG,EAAE,eAAe;QACpB,GAAG,EAAE,eAAe;QACpB,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,YAAY;QACjB,GAAG,EAAE,UAAU;QACf,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,gBAAgB;QACrB,GAAG,EAAE,iBAAiB;QACtB,GAAG,EAAE,aAAa;QAClB,GAAG,EAAE,eAAe;QACpB,GAAG,EAAE,YAAY;QACjB,GAAG,EAAE,eAAe;QACpB,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,YAAY;QACjB,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,UAAU;QACf,GAAG,EAAE,OAAO;QACZ,GAAG,EAAE,QAAQ;QACb,GAAG,EAAE,SAAS;QACd,GAAG,EAAE,SAAS;QACd,GAAG,EAAE,QAAQ;QACb,GAAG,EAAE,UAAU;QACf,GAAG,EAAE,SAAS;QACd,GAAG,EAAE,gBAAgB;QACrB,GAAG,EAAE,iBAAiB;QACtB,GAAG,EAAE,aAAa;QAClB,GAAG,EAAE,aAAa;QAClB,GAAG,EAAE,aAAa;QAClB,GAAG,EAAE,UAAU;QACf,GAAG,EAAE,SAAS;QACd,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,gBAAgB;QACrB,GAAG,EAAE,UAAU;QACf,GAAG,EAAE,YAAY;QACjB,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,YAAY;QACjB,GAAG,EAAE,YAAY;QACjB,GAAG,EAAE,aAAa;QAClB,GAAG,EAAE,aAAa;QAClB,GAAG,EAAE,SAAS;QACd,GAAG,EAAE,YAAY;QACjB,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,eAAe;QACpB,GAAG,EAAE,OAAO;QACZ,GAAG,EAAE,UAAU;QACf,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,eAAe;QACpB,GAAG,EAAE,eAAe;QACpB,GAAG,EAAE,SAAS;QACd,GAAG,EAAE,UAAU;QACf,GAAG,EAAE,aAAa;QAClB,GAAG,EAAE,YAAY;QACjB,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,UAAU;QACf,GAAG,EAAE,YAAY,EAAE;IACvB,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACpD,EAAE,CAAC,EAAE,CAAC;gBACF,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC,EAAE,CAAC;QAChB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,EAAE,CAAC;gBACF,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC,EAAE,CAAC;QAChB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACzC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBAC5D,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACR,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBAClB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBAC3B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBAClB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;gBACV,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACT,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QACtD,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC1E,GAAG,EAAE,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AC;gBACF,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC,EAAE,CAAC;QAChB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnD,EAAE,CAAC,EAAE,CAAC;gBACF,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,EAAE,EAAE,CAAC,EAAE,CAAC;QAChB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,EAAE,CAAC;gBACF,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AAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,CAAC,EAAE,MAAM,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,CAAC,EAAE,IAAI,CAAC;QACT,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,CAAC,EAAE,IAAI,CAAC;QACT,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,CAAC,EAAE,IAAI,CAAC;QACT,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,CAAC,EAAE,IAAI,CAAC;QACT,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,EAAE,EAAE,IAAI,CAAC;QACV,CAAC,CAAC,EAAE,IAAI,CAAC;QACT,CAAC,CAAC,EAAE,QAAQ,CAAC;QACb,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,GAAG,EAAE,IAAI,CAAC;QACX,CAAC,C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"}